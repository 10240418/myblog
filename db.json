{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/README.md","path":"live2d-widget/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/autoload.js","path":"live2d-widget/autoload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/live2d.min.js","path":"live2d-widget/live2d.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/package.json","path":"live2d-widget/package.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/rollup.config.js","path":"live2d-widget/rollup.config.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu-tips.js","path":"live2d-widget/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu-tips.json","path":"live2d-widget/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu.css","path":"live2d-widget/waifu.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/demo/demo.html","path":"live2d-widget/demo/demo.html","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/demo/login.html","path":"live2d-widget/demo/login.html","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/index.js","path":"live2d-widget/src/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/message.js","path":"live2d-widget/src/message.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/model.js","path":"live2d-widget/src/model.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/tools.js","path":"live2d-widget/src/tools.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/utils.js","path":"live2d-widget/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/waifu-tips.js","path":"live2d-widget/src/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1}],"Cache":[{"_id":"source/ww.md","hash":"a56e8e561c90b9b1f3f764a12ef53d6a18611de3","modified":1698316251811},{"_id":"source/404/index.md","hash":"f3af07fa14a0a9a4119ad2ab7637ecf23568f47a","modified":1680787906995},{"_id":"source/_data/friends.json","hash":"9022e3335f3deb54e9e889da60aeb8211acf3c6e","modified":1680787871675},{"_id":"source/_posts/Studyplan.md","hash":"7d681c891b3de2969f70ffaa301a8b6575c04764","modified":1698316251806},{"_id":"source/_posts/RecoderDemo.md","hash":"276fe7cd783fa451cb6e1880fedb2861ff918676","modified":1698316251806},{"_id":"source/_posts/Vue.md","hash":"3377001cffbc93ca06140b036b172b828971064b","modified":1698582066904},{"_id":"source/_posts/baseCss.md","hash":"da3ce1f054f7d7f20c02cd62fb0ad0d9dfc072ac","modified":1710499975576},{"_id":"source/_posts/dayandday.md","hash":"202ddf0dc0104207294821155f617cdda939ae20","modified":1698316251808},{"_id":"source/_posts/forLove.md","hash":"80aa7910b1c670dfe2cd72fe4b66963bbc4a8f5d","modified":1698316251808},{"_id":"source/_posts/git六节课学完.md","hash":"bd59223dbaded06387ae99d4d09d67569db9cc57","modified":1698316251809},{"_id":"source/_posts/计算机网络基础-1.md","hash":"9e3a531faf038f27fdca67f4edc12a12d3eb9169","modified":1709728219449},{"_id":"source/categories/index.md","hash":"57974cb8107db54818077da09cd4851bfdac9716","modified":1680787466957},{"_id":"source/about/index.md","hash":"4af4ee74a412b114e9cdddd2620883afca0b07d6","modified":1709905003160},{"_id":"source/contact/index.md","hash":"df200366f9e2c014b2b7957eed4ab9eb02cdde41","modified":1680787577697},{"_id":"source/friends/index.md","hash":"2be114a59665f3f4e39e39e1db1173e98d7b84c4","modified":1680787616297},{"_id":"source/tags/index.md","hash":"5ad11165bda96d8d1bbc3641c7cf4402894f8fa0","modified":1680787521775},{"_id":"source/tags/html/9/3.html","hash":"424be6d325214df0518223d699adf65eda52e03c","modified":1698316251810},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"5340c994462c7345373e075529f40e60c1952f00","modified":1680787225093},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1680787225095},{"_id":"themes/hexo-theme-matery/README.md","hash":"93ae00dc14ff64e0b6f2faa3b14b12e4df135e2f","modified":1680787225095},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"484a703733b839bd98e016ddb015f028c2593fef","modified":1680787225094},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"190a389a85e524592f19c745adbaeef4214a2291","modified":1680787225096},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"b7185ab31f6d826233ad447f56d9a97d718782b0","modified":1710498592682},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"c3d2849348bd52fab85b38040818b429057d3101","modified":1680787225098},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"f5c69f3e107474da19630e136abed5d87609e59f","modified":1680787225097},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"c6de0de68bdc75a8a905787a0526b70ee9821da8","modified":1680787225098},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1680787225099},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"4d2bb286d9903f770344e11898bd3f13444760bf","modified":1680787225099},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"81e86c27cf247ce45cc1812f026e3877bdbd9bfb","modified":1680965337794},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"57733d52d17361e735fcc95f875e0b1b9ebdcbd8","modified":1680787225126},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"6deb819e47fe11edd2fc87a6296cae725a0275f9","modified":1680787225127},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1680787225127},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"4ac716d15d84e7c37f07308a5ec008a2ac090c9b","modified":1680787225128},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1680787225128},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"7e92c983794c5c4a2b16eca2452eb187316262ef","modified":1680787225129},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1680787225129},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1680787225130},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"2d4388efab710c0af9621cfdca9be1b2425063f7","modified":1681130421028},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1680787225131},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1680787225131},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"6f4cf7248ba14d07ab4a233fe68b93250c5b3e97","modified":1681130938170},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"058eb27ff10f5314d8b9e334c54419b9a6572315","modified":1680787225132},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1680787225132},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1680787225140},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"18415c69461d706cf8039580cc79d00c029c637c","modified":1680787225133},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1680787225133},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"98e7c48678c69f089d0d42f6d005c83265e9f400","modified":1680787225134},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"442c710d69892eb56d3d257cf4c2e195e6913eea","modified":1680787225101},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"be527741c39c9dc4a13ad712b49fe8db0147fe1e","modified":1680787225101},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"4b01030b7136192bdbd704e29a0fe12f92767551","modified":1680787225101},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2841870e0c625787de348221e5ddb7bbe99ec5a2","modified":1680787225102},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"dee1bf78556a2422e2f6dfc9a7563f37806d9c9f","modified":1680787225102},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"bb77d9347b95c91e4b6657539c1115d594884749","modified":1681137006885},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1680787225103},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1680787225103},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1680787225104},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1680787225105},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"a924658cbc1a1aeafe9fa455b08bd495071285a1","modified":1680787225104},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"1b392f2160f962f62f3ddf5e1155c7f2f4888e1d","modified":1680787225105},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"fc389471811701533740179f74a2e34f213b31f0","modified":1681043321602},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"27764936791ce36b527bea63689435346bbfb425","modified":1680787225106},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1680787225106},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90888c945384aa1ee4650bd43bd7ea670f25828c","modified":1680787225107},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1680787225107},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"57141ced81ceeb740c46f37ed87606d4f712c433","modified":1681132125464},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"4bcdbd27273dd1b7098d4cfa6479b5d6b138cd12","modified":1680787225108},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"167486c9a47d3aacf52a6cc0018d5752cf0e8dfc","modified":1680968168067},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1680787225109},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1680787225109},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"f3d6b20ac07f1b096c5cf0b091523867fd4fd0b5","modified":1681136971740},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"d8773abab5d0b672b70a9df20a8f9f7f6b0a2dae","modified":1680787225110},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"ea7f8baf989601bbdd0081e6b73ca91c10d892d9","modified":1710499507076},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"7f583c935253e2bf6421791715ee9de4989add6e","modified":1680787225111},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"05ac5b4df05e80e3123e464e7df2dfc589b0bbd2","modified":1680787225111},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"3590cebe5d6729300f2ac83ff9e0ceceb66da4b9","modified":1680787225112},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"de0d5763ddd64463f43135678b64c044884b8406","modified":1680787225112},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"1fb43f421de58aa24458f7d4a4cda44b8a3d62cc","modified":1680787225113},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1680787225112},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"f67bc52bc5a2464ebe30f42c65c0ee38eeec2fda","modified":1680787225113},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ab6de30729d48669476372ccd4aefa7e15d92c38","modified":1680787225114},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1680787225114},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"4218ed406c43ed781fe78ad8bf1834fa4b76b049","modified":1680787225115},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"fd9b1418221d7bdf8688625f7ae2c84b7f402dce","modified":1681179727516},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"e50fae64b6cfdbed18861eb49eca5018a920c7a4","modified":1680787225115},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"d1d7c4da3d56f42541eea965a6ebf1f8e2fff0f4","modified":1680787225116},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"5ee3ade52bc7494226ed30e7dd4531d1d91ca67c","modified":1680787225117},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"beb3044890bfe7cfd26328565da4f8f955563424","modified":1680787225117},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1680787225118},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"3ef458166041a8a12e493cc5963a5af5d98c1dfc","modified":1680787225118},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"131e2eabf6b216210efd0746300889adfee357be","modified":1680787225119},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1680787225120},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"d6692f8c81013191fce59f47df1b6171649181ca","modified":1680787225120},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"d84f2f464209f02f49917423ac5accf1c548f38c","modified":1680787225120},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1680787225121},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"f5259f18a906f2862fe72b90c28125b5f6b7d0b1","modified":1680787225122},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"141f19a8aa41b7a21436f23ce114bd5fda932512","modified":1680787225122},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"9edbeb1ec6212762d597ae7a05b5a219f72c8f98","modified":1680787225123},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"fb5ee7674070956d134ddca6890a9bd3f398cc0f","modified":1680787225123},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"20f0b6155eee348276dd91790f6a52b1005a0518","modified":1680787225124},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"5f64edd00d0a7c3b5e90d5ff99c9ebba61482d75","modified":1680787225124},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"d32898104477acef56c33d00a68b48db15dcf2e6","modified":1680787225125},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"03dcd0a7a9fdbcc2bc38a99a8fad96ae17a340fa","modified":1680787225125},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"c2f785f4986d6ed1da0d1f2cd339f33754625004","modified":1680787225125},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"541bc0b481beee921c62d0e84b61b124c95d2d01","modified":1680787225136},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"328a49b26ce663d9824c53aced118db4d55f2ac7","modified":1680787225135},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"f59b2f1351d7977b676a4d51634b7dad648d3e99","modified":1680787225135},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1680787225136},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1680787225137},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"e4a478c91cd6750a9f18b65b914ff0b316fb08b3","modified":1680787225137},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"36d90a4b90df89c8fdc588203e394903b11747c8","modified":1681136953947},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"52b3b36a0ed3db3bdf8bf1f999e37731078c485b","modified":1680787225138},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1680787225139},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1680787225139},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1680787225139},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1680787225142},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"8db5b764f940614a209a332a4a11a53e5ea52fbc","modified":1680787225143},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"713eca7dcc8d4d02a03652367abc1afcc74e6c75","modified":1681136948156},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"72fac8fd3671f3525a574423985ee522958989d3","modified":1680787225144},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"8ab118a6f3e115efb50283c0fe408ad91ce7021b","modified":1680787225144},{"_id":"themes/hexo-theme-matery/source/live2d-widget/.gitignore","hash":"c1ab1464f9ac7ebdb1902860b987a68ba0765c65","modified":1681050508807},{"_id":"themes/hexo-theme-matery/source/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1681050508813},{"_id":"themes/hexo-theme-matery/source/live2d-widget/README.md","hash":"d267e7d02cee769153c2a8f5cd6c4812e41e64d4","modified":1681050508824},{"_id":"themes/hexo-theme-matery/source/live2d-widget/autoload.js","hash":"98051eeceaa3608dc49d951a88f72f643bcf00a1","modified":1681050680717},{"_id":"themes/hexo-theme-matery/source/live2d-widget/package.json","hash":"02c2acc648ec88aa81c9262a33847aba50e87d6b","modified":1681050508860},{"_id":"themes/hexo-theme-matery/source/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1681050508872},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu-tips.js","hash":"9c9f24114e4e2e27bf0658ba01f5702d158dc658","modified":1681050508883},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu-tips.json","hash":"ac969016a67c962336aabba5641681bb350f5785","modified":1681050508893},{"_id":"themes/hexo-theme-matery/source/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1681050508904},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1680787225240},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1680787225252},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1680787225273},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1680787225280},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1680787225145},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1680787225146},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1680787225146},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1680787225147},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1680787225148},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"ff60e62a9486505283582e8ad9226b35ba93d5c5","modified":1680787225148},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"d2569ef80127ed2f4af7ef4d9f82b037794eec69","modified":1680787225162},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"8f53dbd5f9a40c377664bf8ca0d5d5ed75b91757","modified":1680787225162},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1680787225163},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1680787225163},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"a8133367d48199e7505c2d831ca848b4202b9ba6","modified":1680787225164},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6ab7871d36cab438bbd4d781bc1fe7618b46b6e7","modified":1680787225164},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"3edbe498f7bb9e7daa77f9db30e1b5eeab40e067","modified":1680787225165},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"066d2c89ad429e44f6467b9267da782ccaad57de","modified":1680787225164},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1680787225166},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1680787225167},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1680787225174},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"4c0d5510ea487b0fe63e96464ab0b381565cc273","modified":1680787225175},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1680787225181},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"043eba3c85c2e2009a9fabf3c4fc55537852fd86","modified":1680787225183},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1680787225183},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1680787225184},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1680787225186},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1680787225185},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"137e1c0f71e472fb7004c1832972287fb2dfc343","modified":1680787225192},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1680787225210},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1680787225216},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1680787225217},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1680787225218},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1680787225218},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1680787225217},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1680787225219},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1680787225219},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1680787225220},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"07b1e7932403b38aebb1c024ef3c3f5bb0c6aa2e","modified":1680787225221},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"1ddc9448fbba8915f9452b4f0a970f33635e46a7","modified":1680787225221},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"1aec6cfcbf8c833f728b8736060fe5690e19d92f","modified":1680787225222},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1680787225231},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1680787225232},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1680787225225},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1680787225235},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eceb98f80392cb57df1af5b160d85924f69fb2e0","modified":1680787225235},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1681050508923},{"_id":"themes/hexo-theme-matery/source/live2d-widget/demo/login.html","hash":"5df56deaeea62f81ea7f41343d91232229b87f21","modified":1681050508984},{"_id":"themes/hexo-theme-matery/source/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1681050508974},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1681050509000},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1681050509012},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1681050509034},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1681050509023},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1681050509045},{"_id":"themes/hexo-theme-matery/source/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1681050509056},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1680787225250},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1680787225250},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1680787225251},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1680787225251},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1680787225256},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1680787225258},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1680787225260},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1680787225261},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1680787225264},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1680787225266},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1680787225266},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1680787225267},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1680787225268},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1680787225270},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1680787225272},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1680787225272},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1680787225281},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1680787225281},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1680787225154},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1680787225154},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1680787225161},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1680787225187},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1680787225160},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1680787225188},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1680787225188},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1680787225187},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1680787225189},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1680787225189},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1680787225190},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1680787225190},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"c55278b00976c96e1df949ca5afee79b8ab385b2","modified":1680787225191},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1680787225226},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"de34668d902ec082d17ddb6dd7ad24255fb547c5","modified":1680787225230},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"ba635a17a9d9d132369f9fe4b1fbcaf001ea6ac9","modified":1680787225231},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1680787225227},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1680787225227},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1680787225229},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1680787225229},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1680787225173},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1680787225182},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"4cd5ddc413b3024d7b56331c0d0d0b2bd933f27f","modified":1680787225184},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1680787225241},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1680787225244},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1680787225245},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1680787225254},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1680787225255},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1680787225257},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1680787225258},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1680787225260},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1680787225262},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1680787225262},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1680787225263},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1680787225265},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1680787225268},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1680787225271},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1680787225273},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"6ceed6950e44336bb51f1b19d4658e4324afcebd","modified":1680787225151},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1680787225153},{"_id":"themes/hexo-theme-matery/source/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1681050508849},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1680787225253},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"104613de917a8576ff26aaa36d1c0c7bb4730f4e","modified":1680787225168},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1680787225193},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c843f0dc497314574c608ca28cc742bb041786d5","modified":1680787225194},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1680787225239},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"c2f2b1b0346e28ceae19f4b3d174f033311aa060","modified":1680787225237},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1680787225243},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1680787225247},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1680787225249},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1680787225278},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"9a8303b1c6334e2500da617810206ece45a8ac6b","modified":1680787225150},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1680787225153},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1680787225160},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1680787225141},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"e47dd1412564cd6aacc4e0a596fd83074a747870","modified":1680787225238},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1681050508958},{"_id":"source/_posts/img.png","hash":"3ca1d47baa5ed1e1d786f7dfcae58174680e1db4","modified":1709534161390},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1680787225247},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1680787225280},{"_id":"themes/hexo-theme-matery/source/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1681050508941},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1680787225159},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"d1ec95821873a81eddf4e5698698b39d54d2a8cc","modified":1680787225234},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"80063546f828243e2345670701656b735fc3ead8","modified":1680787225225},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1680787225276},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1680787225172},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"1df59d7e5481ac2917c7043b28883393675dcaf9","modified":1680787225180},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"5755d222f96a897b9f509d2859be21996a3dbfd0","modified":1680787225215},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"3889e37cafaaace5e745ccd3e10c9255e32cae3a","modified":1680787225210},{"_id":"public/ww.html","hash":"39327383c268db449ebc8a0fee711b743c98b265","modified":1710495231139},{"_id":"public/404/index.html","hash":"09d1835f0f480693d65dc09422864715240ca543","modified":1710495231139},{"_id":"public/about/index.html","hash":"90f8deb59db2382648527d45fe5697e85da58805","modified":1710495231139},{"_id":"public/categories/index.html","hash":"2231efdd966b613ed22487b0ed9acb9e7fa39b6d","modified":1710495231139},{"_id":"public/contact/index.html","hash":"ba643d256f043423ca7518e22c1c9575e1c1b657","modified":1710495231139},{"_id":"public/friends/index.html","hash":"82189e60a5ff5d92422b9fa30ad4a2da20dfcae7","modified":1710495231139},{"_id":"public/tags/index.html","hash":"19c947075e0211dbf3830e435f7888a07b331b5c","modified":1710495231139},{"_id":"public/tags/html/9/3.html","hash":"bf2b5e7883160fcf56991493f5d81c8ea11c035d","modified":1710495231139},{"_id":"public/2024/03/15/baseCss/index.html","hash":"6899e5f4d90abef459e453a45047ae1fcc6c4e2a","modified":1710495231139},{"_id":"public/2024/03/04/计算机网络基础-1/index.html","hash":"98e5f73242aec658e83c0c3ed14e9cf3cee1b835","modified":1710495231139},{"_id":"public/2023/10/25/RecoderDemo/index.html","hash":"eb5fca44dddfdb662ec1d192f9111252286448a7","modified":1710495231139},{"_id":"public/2023/08/29/Vue/index.html","hash":"29f5ec31fb81fc65fd7700426f817ea3283a343c","modified":1710495231139},{"_id":"public/2023/07/19/git六节课学完/index.html","hash":"379020e3523e41e67a943a939fc2ac654b3bd09d","modified":1710495231139},{"_id":"public/2023/06/09/forLove/index.html","hash":"0e7e12beb0a114e66a272e0394b08cb5923a087c","modified":1710495231139},{"_id":"public/2023/05/04/Studyplan/index.html","hash":"a98e21acf3bf2f1efcd643cf1ed5fe3a5b964230","modified":1710495231139},{"_id":"public/2023/04/17/dayandday/index.html","hash":"9e150e635f39bcb5473dffb0a28349e782c26019","modified":1710495231139},{"_id":"public/archives/index.html","hash":"aff88f867c14922dd34c1f601505db7f1988a52d","modified":1710495231139},{"_id":"public/archives/2023/index.html","hash":"325b7dc6cf7c2e8798bceff7e938bd0b59efb5a6","modified":1710495231139},{"_id":"public/archives/2023/04/index.html","hash":"8bf8edd521e2d4a251883ccae177f28a1ee6c19f","modified":1710495231139},{"_id":"public/archives/2023/05/index.html","hash":"8861f5bc233fb5cf446500602817e54c51fbe40e","modified":1710495231139},{"_id":"public/archives/2023/06/index.html","hash":"cfd89e773faa59709855ad31ab0d62328fbb12c2","modified":1710495231139},{"_id":"public/archives/2023/07/index.html","hash":"acd56c3c7cd7f0fc54a24ef15bdf1a849a318bfa","modified":1710495231139},{"_id":"public/archives/2023/08/index.html","hash":"dc3abd66e71ca626f6ce8e81f1d09dc960d3ef27","modified":1710495231139},{"_id":"public/archives/2023/10/index.html","hash":"29492e0888a83ce90d305285607fb0a4a036105b","modified":1710495231139},{"_id":"public/archives/2024/index.html","hash":"ab4774694c4db56791214192315e2496da972822","modified":1710495231139},{"_id":"public/archives/2024/03/index.html","hash":"cf5c0a8dad92ce15b612a212058ada02bc073796","modified":1710495231139},{"_id":"public/index.html","hash":"cc618965801706e33f753ce25d497ea9cd4c7f23","modified":1710495231139},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1710495231139},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1710495231139},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1710495231139},{"_id":"public/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1710495231139},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1710495231139},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1710495231139},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1710495231139},{"_id":"public/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1710495231139},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1710495231139},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1710495231139},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1710495231139},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1710495231139},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1710495231139},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1710495231139},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1710495231139},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1710495231139},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1710495231139},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1710495231139},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1710495231139},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1710495231139},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1710495231139},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1710495231139},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1710495231139},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1710495231139},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1710495231139},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1710495231139},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"94c83160bddccf08bd7424de40d738716f1eeb3a","modified":1710495231139},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1710495231139},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1710495231139},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1710495231139},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1710495231139},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1710495231139},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1710495231139},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1710495231139},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1710495231139},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1710495231139},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1710495231139},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1710495231139},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1710495231139},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1710495231139},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1710495231139},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1710495231139},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1710495231139},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1710495231139},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1710495231139},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1710495231139},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1710495231139},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1710495231139},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1710495231139},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1710495231139},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1710495231139},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1710495231139},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1710495231139},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1710495231139},{"_id":"public/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1710495231139},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1710495231139},{"_id":"public/css/indexcover.css","hash":"4dea2c489452c3efe70fa91a6a7678da64d895da","modified":1710495231139},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1710495231139},{"_id":"public/css/post.css","hash":"d38c71eddb8af1752c48eb48595fbaf89450ff40","modified":1710495231139},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1710495231139},{"_id":"public/css/reward.css","hash":"98b32aabeb908727844af04c31f08da6cab08335","modified":1710495231139},{"_id":"public/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1710495231139},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1710495231139},{"_id":"public/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1710495231139},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1710495231139},{"_id":"public/live2d-widget/README.html","hash":"0596117accdda54dd039ed991079f02498fbdaa0","modified":1710495231139},{"_id":"public/live2d-widget/autoload.js","hash":"98051eeceaa3608dc49d951a88f72f643bcf00a1","modified":1710495231139},{"_id":"public/live2d-widget/package.json","hash":"80d2120042316b755e164d674cc036ed4a59491e","modified":1710495231139},{"_id":"public/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1710495231139},{"_id":"public/live2d-widget/waifu-tips.js","hash":"9c9f24114e4e2e27bf0658ba01f5702d158dc658","modified":1710495231139},{"_id":"public/live2d-widget/waifu-tips.json","hash":"ea3ef8dc2f8be9b5734a9b03a4242dca9c81fce8","modified":1710495231139},{"_id":"public/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1710495231139},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1710495231139},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1710495231139},{"_id":"public/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1710495231139},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1710495231139},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1710495231139},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1710495231139},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1710495231139},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1710495231139},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1710495231139},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1710495231139},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1710495231139},{"_id":"public/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1710495231139},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1710495231139},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1710495231139},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1710495231139},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.css","hash":"89fb099880771c23dce3005a87db36053c8c491c","modified":1710495231139},{"_id":"public/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1710495231139},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1710495231139},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1710495231139},{"_id":"public/libs/others/TencentCaptcha.js","hash":"10a034ac0b4ebe97ec5916b092b36fa2d6e9edd0","modified":1710495231139},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1710495231139},{"_id":"public/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1710495231139},{"_id":"public/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1710495231139},{"_id":"public/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1710495231139},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1710495231139},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1710495231139},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1710495231139},{"_id":"public/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1710495231139},{"_id":"public/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1710495231139},{"_id":"public/live2d-widget/demo/login.html","hash":"5df56deaeea62f81ea7f41343d91232229b87f21","modified":1710495231139},{"_id":"public/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1710495231139},{"_id":"public/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1710495231139},{"_id":"public/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1710495231139},{"_id":"public/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1710495231139},{"_id":"public/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1710495231139},{"_id":"public/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1710495231139},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1710495231139},{"_id":"public/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1710495231139},{"_id":"public/css/matery.css","hash":"413ad9731332810823b57dd0f4c0284e3af2af63","modified":1710495231139},{"_id":"public/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1710495231139},{"_id":"public/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1710495231139},{"_id":"public/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1710495231139},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1710495231139},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1710495231139},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1710495231139},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1710495231139},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1710495231139},{"_id":"public/libs/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1710495231139},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1710495231139},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1710495231139},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1710495231139},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1710495231139},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1710495231139},{"_id":"public/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1710495231139},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1710495231139},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1710495231139},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1710495231139},{"_id":"public/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1710495231139},{"_id":"public/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1710495231139},{"_id":"public/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1710495231139},{"_id":"public/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1710495231139},{"_id":"public/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1710495231139},{"_id":"public/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1710495231139},{"_id":"public/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1710495231139},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1710495231139},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1710495231139},{"_id":"public/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1710495231139},{"_id":"public/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1710495231139},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1710495231139},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1710495231139},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1710495231139},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1710495231139},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1710495231139},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1710495231139},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1710495231139},{"_id":"public/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1710495231139},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1710495231139},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1710495231139},{"_id":"public/libs/prism/prism.min.js","hash":"6fc9b7be93e51b4017a61483c13187af0149f194","modified":1710495231139},{"_id":"public/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1710495231139},{"_id":"public/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1710495231139},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1710495231139},{"_id":"public/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1710495231139},{"_id":"public/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1710495231139},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1710495231139},{"_id":"public/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1710495231139},{"_id":"public/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1710495231139},{"_id":"source/love.html","hash":"8bcdfdbeec5a0e8dd9c911fa3f84dad3a21ccc4d","modified":1698316251803},{"_id":"source/ZONE/love.html","hash":"8bcdfdbeec5a0e8dd9c911fa3f84dad3a21ccc4d","modified":1698316251803}],"Category":[],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}],"Page":[{"title":"404","date":"2020-05-29T16:00:00.000Z","type":"404","layout":"404","description":"Cannot find the page you want :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2020-05-30 00:00:00\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Cannot find the page you want :(\"\n---","updated":"2023-04-06T13:31:46.995Z","path":"404/index.html","comments":1,"_id":"cltsgp3ks00003gu360eg3f0c","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"title":"page","layout":"false","_content":"\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <script src=\"https://www.jq22.com/jquery/jquery-1.10.2.js\"></script>\n  <style type=\"text/css\">\n    @import url(\"https://fonts.googleapis.com/css?family=Montserrat:200,300,400,600\");\n    .more-pens {\n      position: fixed;\n      left: 20px;\n      bottom: 20px;\n      z-index: 10;\n      font-family: \"Montserrat\";\n      font-size: 12px;\n    }\n\n    a.white-mode,\n    a.white-mode:link,\n    a.white-mode:visited,\n    a.white-mode:active {\n      font-family: \"Montserrat\";\n      font-size: 12px;\n      text-decoration: none;\n      /* background: #212121; */\n      padding: 4px 8px;\n      color: #f7f7f7;\n    }\n\n    a.white-mode:hover,\n    a.white-mode:link:hover,\n    a.white-mode:visited:hover,\n    a.white-mode:active:hover {\n      background: #edf3f8;\n      color: #212121;\n    }\n\n    .title {\n      z-index: 9999 !important;\n      position: absolute;\n      left: 50%;\n      top: 42%;\n      transform: translateX(-50%) translateY(-50%);\n      font-family: \"Montserrat\";\n      text-align: center;\n      width: 100%;\n    }\n\n    .title h1 {\n      z-index: 99;\n      position: relative;\n      color: #fff;\n      font-weight: 100;\n      font-size: 70px;\n      padding: 0;\n      margin: 0;\n      line-height: 1;\n      text-shadow: 0 0 10px #ff006c, 0 0 20px #ff006c, 0 0 30px #ff006c,\n      0 0 40px #ff417d, 0 0 70px #ff417d, 0 0 80px #ff417d,\n      0 0 100px #ff417d, 0 0 150px #ff417d;\n    }\n\n    .title h1 span {\n      z-index: 99;\n      font-weight: 600;\n      padding: 0;\n      margin: 0;\n      color: #ffffff;\n    }\n\n    .title h3 {\n      z-index: 99;\n      font-weight: 200;\n      font-size: 26px;\n      padding: 0;\n      margin: 0;\n      line-height: 1;\n      color: #ffffff;\n      letter-spacing: 2px;\n    }\n\n    /* 爱心css */\n    canvas {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n    .img {\n      position: absolute;\n      left: 50%;\n      top: 60%;\n      transform: translate(-50%, -50%);\n      width: 180px;   /* 160 */\n      height: 180px;\n    }\n    #pinkboard {\n      position: relative;\n      top: 0%;\n      left: 0%;\n      height: 429px;\n    }\n    .STARDUST1 {\n      position: relative !important;\n      top: -60px;\n    }\n    .STARDUST2 {\n      position: relative !important;\n      top: -40px;\n    }\n    .STARDUST3 {\n      position: relative !important;\n      top: -20px;\n    }\n    /* 星空css */\n    html,\n    body {\n      padding: 0px;\n      margin: 0px;\n      width: 100%;\n      height: 100%;\n      position: fixed;\n    }\n\n    body {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      -webkit-filter: contrast(120%);\n      filter: contrast(120%);\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n      /* background-color: black; */\n    }\n\n    .container2 {\n      /* z-index: 8; */\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n    }\n\n    .content {\n      width: inherit;\n      height: inherit;\n      width: 100%;\n      height: 100%;\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n    }\n\n    #universe {\n      width: 100%;\n      height: 100%;\n    }\n\n    #footerContent {\n      font-family: sans-serif;\n      font-size: 110%;\n      color: rgba(200, 220, 255, 0.3);\n      width: 100%;\n      position: fixed;\n      bottom: 0px;\n      padding: 20px;\n      text-align: center;\n      z-index: 20;\n    }\n\n    /* #footer {\n      position: absolute;\n      bottom: 0px;\n      height: 300px;\n      width: 100%;\n    } */\n\n    #scene {\n      height: 100%;\n      position: absolute;\n      left: 50%;\n      margin-left: -800px;\n    }\n\n    a {\n      text-decoration: none;\n      color: rgba(200, 220, 255, 1);\n      opacity: 0.4;\n      transition: opacity 0.4s ease;\n    }\n\n    a:hover {\n      opacity: 1;\n    }\n  </style>\n\n</head>\n\n<body>\n<audio autoplay=\"autopaly\">\n  <source src=\"renxi.mp3\" type=\"audio/mp3\" />\n</audio>\n<!-- 星空html -->\n<!-- <div> -->\n<div class=\"container2\">\n  <div class=\"content\">\n    <canvas id=\"universe\"></canvas>\n  </div>\n</div>\n<!-- </div> -->\n<div class=\"title\">\n  <!-- 星团文字html -->\n\n  <!-- 爱心html -->\n  <canvas id=\"pinkboard\"> </canvas>\n  <div class=\"main\"><h1>wei</h1>></div>\n\n</div>\n\n<!--爱心js  -->\n<script>\n  /*\n   * Settings\n   */\n  var settings = {\n    particles: {\n      length: 500, // maximum amount of particles\n      duration: 2, // particle duration in sec\n      velocity: 100, // particle velocity in pixels/sec\n      effect: -0.75, // play with this for a nice effect\n      size: 30, // particle size in pixels\n    },\n  };\n\n  /*\n   * RequestAnimationFrame polyfill by Erik M?ller\n   */\n  (function () {\n    var b = 0;\n    var c = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n      window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n              window[c[a] + \"CancelAnimationFrame\"] ||\n              window[c[a] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (h, e) {\n        var d = new Date().getTime();\n        var f = Math.max(0, 16 - (d - b));\n        var g = window.setTimeout(function () {\n          h(d + f);\n        }, f);\n        b = d + f;\n        return g;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (d) {\n        clearTimeout(d);\n      };\n    }\n  })();\n\n  /*\n   * Point class\n   */\n  var Point = (function () {\n    function Point(x, y) {\n      this.x = typeof x !== \"undefined\" ? x : 0;\n      this.y = typeof y !== \"undefined\" ? y : 0;\n    }\n    Point.prototype.clone = function () {\n      return new Point(this.x, this.y);\n    };\n    Point.prototype.length = function (length) {\n      if (typeof length == \"undefined\")\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      this.normalize();\n      this.x *= length;\n      this.y *= length;\n      return this;\n    };\n    Point.prototype.normalize = function () {\n      var length = this.length();\n      this.x /= length;\n      this.y /= length;\n      return this;\n    };\n    return Point;\n  })();\n\n  /*\n   * Particle class\n   */\n  var Particle = (function () {\n    function Particle() {\n      this.position = new Point();\n      this.velocity = new Point();\n      this.acceleration = new Point();\n      this.age = 0;\n    }\n    Particle.prototype.initialize = function (x, y, dx, dy) {\n      this.position.x = x;\n      this.position.y = y;\n      this.velocity.x = dx;\n      this.velocity.y = dy;\n      this.acceleration.x = dx * settings.particles.effect;\n      this.acceleration.y = dy * settings.particles.effect;\n      this.age = 0;\n    };\n    Particle.prototype.update = function (deltaTime) {\n      this.position.x += this.velocity.x * deltaTime;\n      this.position.y += this.velocity.y * deltaTime;\n      this.velocity.x += this.acceleration.x * deltaTime;\n      this.velocity.y += this.acceleration.y * deltaTime;\n      this.age += deltaTime;\n    };\n    Particle.prototype.draw = function (context, image) {\n      function ease(t) {\n        return --t * t * t + 1;\n      }\n      var size = image.width * ease(this.age / settings.particles.duration);\n      context.globalAlpha = 1 - this.age / settings.particles.duration;\n      context.drawImage(\n              image,\n              this.position.x - size / 2,\n              this.position.y - size / 2,\n              size,\n              size\n      );\n    };\n    return Particle;\n  })();\n\n  /*\n   * ParticlePool class\n   */\n  var ParticlePool = (function () {\n    var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n    function ParticlePool(length) {\n      // create and populate particle pool\n      particles = new Array(length);\n      for (var i = 0; i < particles.length; i++)\n        particles[i] = new Particle();\n    }\n    ParticlePool.prototype.add = function (x, y, dx, dy) {\n      particles[firstFree].initialize(x, y, dx, dy);\n\n      // handle circular queue\n      firstFree++;\n      if (firstFree == particles.length) firstFree = 0;\n      if (firstActive == firstFree) firstActive++;\n      if (firstActive == particles.length) firstActive = 0;\n    };\n    ParticlePool.prototype.update = function (deltaTime) {\n      var i;\n\n      // update active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].update(deltaTime);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].update(deltaTime);\n        for (i = 0; i < firstFree; i++) particles[i].update(deltaTime);\n      }\n\n      // remove inactive particles\n      while (\n              particles[firstActive].age >= duration &&\n              firstActive != firstFree\n              ) {\n        firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      }\n    };\n    ParticlePool.prototype.draw = function (context, image) {\n      // draw active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].draw(context, image);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].draw(context, image);\n        for (i = 0; i < firstFree; i++) particles[i].draw(context, image);\n      }\n    };\n    return ParticlePool;\n  })();\n\n  /*\n   * Putting it all together\n   */\n  (function (canvas) {\n    var context = canvas.getContext(\"2d\"),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n    // get point on heart with -PI <= t <= PI\n    function pointOnHeart(t) {\n      return new Point(\n              160 * Math.pow(Math.sin(t), 3),\n              130 * Math.cos(t) -\n              50 * Math.cos(2 * t) -\n              20 * Math.cos(3 * t) -\n              10 * Math.cos(4 * t) +\n              25\n      );\n    }\n\n    // creating the particle image using a dummy canvas\n    var image = (function () {\n      var canvas = document.createElement(\"canvas\"),\n              context = canvas.getContext(\"2d\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n      // helper function to create the path\n      function to(t) {\n        var point = pointOnHeart(t);\n        point.x =\n                settings.particles.size / 2 +\n                (point.x * settings.particles.size) / 350;\n        point.y =\n                settings.particles.size / 2 -\n                (point.y * settings.particles.size) / 350;\n        return point;\n      }\n      // create the path\n      context.beginPath();\n      var t = -Math.PI;\n      var point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01; // baby steps!\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n      // create the fill\n      context.fillStyle = \"#ea80b0\";\n      context.fill();\n      // create the image\n      var image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    })();\n\n    // render that thing!\n    function render() {\n      // next animation frame\n      requestAnimationFrame(render);\n\n      // update time\n      var newTime = new Date().getTime() / 1000,\n              deltaTime = newTime - (time || newTime);\n      time = newTime;\n\n      // clear canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // create new particles\n      var amount = particleRate * deltaTime;\n      for (var i = 0; i < amount; i++) {\n        var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        var dir = pos.clone().length(settings.particles.velocity);\n        particles.add(\n                canvas.width / 2 + pos.x,\n                canvas.height / 2 - pos.y,\n                dir.x,\n                -dir.y\n        );\n      }\n\n      // update and draw particles\n      particles.update(deltaTime);\n      particles.draw(context, image);\n    }\n\n    // handle (re-)sizing of the canvas\n    function onResize() {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n    window.onresize = onResize;\n\n    // delay rendering bootstrap\n    setTimeout(function () {\n      onResize();\n      render();\n    }, 10);\n  })(document.getElementById(\"pinkboard\"));\n</script>\n<!-- 星空js -->\n<script>\n  window.requestAnimationFrame =\n          window.requestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.msRequestAnimationFrame;\n\n  var starDensity = 0.216;\n  var speedCoeff = 0.05;\n  var width;\n  var height;\n  var starCount;\n  var circleRadius;\n  var circleCenter;\n  var first = true;\n  var giantColor = \"180,184,240\";\n  var starColor = \"226,225,142\";\n  var cometColor = \"226,225,224\";\n  var canva = document.getElementById(\"universe\");\n  canva.style.zIndex = 200;\n  var stars = [];\n\n  windowResizeHandler();\n  window.addEventListener(\"resize\", windowResizeHandler, false);\n\n  createUniverse();\n\n  function createUniverse() {\n    universe = canva.getContext(\"2d\");\n\n    for (var i = 0; i < starCount; i++) {\n      stars[i] = new Star();\n      stars[i].reset();\n    }\n\n    draw();\n  }\n\n  function draw() {\n    universe.clearRect(0, 0, width, height);\n\n    var starsLength = stars.length;\n\n    for (var i = 0; i < starsLength; i++) {\n      var star = stars[i];\n      star.move();\n      star.fadeIn();\n      star.fadeOut();\n      star.draw();\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  function Star() {\n    this.reset = function () {\n      this.giant = getProbability(3);\n      this.comet = this.giant || first ? false : getProbability(10);\n      this.x = getRandInterval(0, width - 10);\n      this.y = getRandInterval(0, height);\n      this.r = getRandInterval(1.1, 2.6);\n      this.dx =\n              getRandInterval(speedCoeff, 6 * speedCoeff) +\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) +\n              speedCoeff * 2;\n      this.dy =\n              -getRandInterval(speedCoeff, 6 * speedCoeff) -\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n      this.fadingOut = null;\n      this.fadingIn = true;\n      this.opacity = 0;\n      this.opacityTresh = getRandInterval(\n              0.2,\n              1 - (this.comet + 1 - 1) * 0.4\n      );\n      this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * 0.001;\n    };\n\n    this.fadeIn = function () {\n      if (this.fadingIn) {\n        this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n        this.opacity += this.do;\n      }\n    };\n\n    this.fadeOut = function () {\n      if (this.fadingOut) {\n        this.fadingOut = this.opacity < 0 ? false : true;\n        this.opacity -= this.do / 2;\n        if (this.x > width || this.y < 0) {\n          this.fadingOut = false;\n          this.reset();\n        }\n      }\n    };\n\n    this.draw = function () {\n      universe.beginPath();\n\n      if (this.giant) {\n        universe.fillStyle = \"rgba(\" + giantColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n      } else if (this.comet) {\n        universe.fillStyle = \"rgba(\" + cometColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n        //comet tail\n        for (var i = 0; i < 30; i++) {\n          universe.fillStyle =\n                  \"rgba(\" +\n                  cometColor +\n                  \",\" +\n                  (this.opacity - (this.opacity / 20) * i) +\n                  \")\";\n          universe.rect(\n                  this.x - (this.dx / 4) * i,\n                  this.y - (this.dy / 4) * i - 2,\n                  2,\n                  2\n          );\n          universe.fill();\n        }\n      } else {\n        universe.fillStyle = \"rgba(\" + starColor + \",\" + this.opacity + \")\";\n        universe.rect(this.x, this.y, this.r, this.r);\n      }\n\n      universe.closePath();\n      universe.fill();\n    };\n\n    this.move = function () {\n      this.x += this.dx;\n      this.y += this.dy;\n      if (this.fadingOut === false) {\n        this.reset();\n      }\n      if (this.x > width - width / 4 || this.y < 0) {\n        this.fadingOut = true;\n      }\n    };\n\n    (function () {\n      setTimeout(function () {\n        first = false;\n      }, 50);\n    })();\n  }\n\n  function getProbability(percents) {\n    return Math.floor(Math.random() * 1000) + 1 < percents * 10;\n  }\n\n  function getRandInterval(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function windowResizeHandler() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    starCount = width * starDensity;\n    circleRadius = width > height ? height / 2 : width / 2;\n    circleCenter = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    canva.setAttribute(\"width\", width);\n    canva.setAttribute(\"height\", height);\n  }\n</script>\n<!-- 星团js -->\n<script>\n  let particles = [];\n  let microparticles = [];\n\n  const c1 = createCanvas({\n    width: $(window).width(),\n    height: $(window).height(),\n  });\n\n  const tela = c1.canvas;\n  const canvas = c1.context;\n\n  // $(\"body\").append(tela);\n  $(\"body\").append(c1.canvas);\n\n  class Particle1 {\n    constructor(canvas) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n      this.life = 1000 + Math.random() * 3000;\n\n      this.x =\n              $(window).width() / 2 + (Math.random() * 20 - Math.random() * 20);\n      this.y = $(window).height();\n      this.s = 2 + Math.random();\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.direction = this.random > 0.5 ? -1 : 1;\n      this.radius = 1 + 3 * this.random;\n      this.color = \"#ff417d\";\n\n      this.ID = setInterval(\n              function () {\n                microparticles.push(\n                        new microParticle(c1.context, {\n                          x: this.x,\n                          y: this.y,\n                        })\n                );\n              }.bind(this),\n              this.random * 20\n      );\n\n      setTimeout(\n              function () {\n                clearInterval(this.ID);\n              }.bind(this),\n              this.life\n      );\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      // this.canvas.lineWidth = 2;\n      this.canvas.shadowOffsetX = 0;\n      this.canvas.shadowOffsetY = 0;\n      // this.canvas.shadowBlur = 6;\n      this.canvas.shadowColor = \"#000000\";\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              this.direction *\n              Math.sin(this.progress / (this.random1 * 430)) *\n              this.s;\n      this.y -= Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        clearInterval(this.ID);\n        return false;\n      }\n\n      if (this.y < 0) {\n        clearInterval(this.ID);\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  class microParticle {\n    constructor(canvas, options) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n\n      this.x = options.x;\n      this.y = options.y;\n      this.s = 2 + Math.random() * 3;\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.radius = 1 + this.random * 0.5;\n      this.color = \"#4EFCFE\"; //this.random > .5 ? \"#a9722c\" : \"#FFFED7\"\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      this.canvas.lineWidth = 2;\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              Math.sin(this.progress / (100 / (this.random1 - this.random2 * 10))) *\n              this.s;\n      this.y += Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        return false;\n      }\n\n      if (this.y > this.h) {\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  var random_life = 1000;\n\n  setInterval(\n          function () {\n            particles.push(new Particle1(canvas));\n            random_life = 2000 * Math.random();\n          }.bind(this),\n          random_life\n  );\n\n  function clear() {\n    let grd = canvas.createRadialGradient(\n            tela.width / 2,\n            tela.height / 2,\n            0,\n            tela.width / 2,\n            tela.height / 2,\n            tela.width\n    );\n    grd.addColorStop(0, \"rgba(20,20,20,1)\");\n    grd.addColorStop(1, \"rgba(0,0,0,0)\");\n    // Fill with gradient\n    canvas.globalAlpha = 0.16;\n    canvas.fillStyle = grd;\n    canvas.fillRect(0, 0, tela.width, tela.height);\n  }\n\n  function blur(ctx, canvas, amt) {\n    // ctx.filter = `blur(${amt}px)`\n    // ctx.drawImage(canvas, 0, 0)\n    // ctx.filter = 'none'\n  }\n\n  function update() {\n    clear();\n    particles = particles.filter(function (p) {\n      return p.move();\n    });\n    microparticles = microparticles.filter(function (mp) {\n      return mp.move();\n    });\n    requestAnimationFrame(update.bind(this));\n  }\n\n  function createCanvas(properties) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = properties.width;\n    //   canvas.style.zIndex = 999;\n    canvas.height = properties.height;\n    let context = canvas.getContext(\"2d\");\n    return {\n      canvas: canvas,\n      context: context,\n    };\n  }\n  update();\n</script>\n\n\n\n</body>\n\n\n\n\n\n","source":"ww.md","raw":"\n---\ntitle: page\nlayout: false\n---\n\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <script src=\"https://www.jq22.com/jquery/jquery-1.10.2.js\"></script>\n  <style type=\"text/css\">\n    @import url(\"https://fonts.googleapis.com/css?family=Montserrat:200,300,400,600\");\n    .more-pens {\n      position: fixed;\n      left: 20px;\n      bottom: 20px;\n      z-index: 10;\n      font-family: \"Montserrat\";\n      font-size: 12px;\n    }\n\n    a.white-mode,\n    a.white-mode:link,\n    a.white-mode:visited,\n    a.white-mode:active {\n      font-family: \"Montserrat\";\n      font-size: 12px;\n      text-decoration: none;\n      /* background: #212121; */\n      padding: 4px 8px;\n      color: #f7f7f7;\n    }\n\n    a.white-mode:hover,\n    a.white-mode:link:hover,\n    a.white-mode:visited:hover,\n    a.white-mode:active:hover {\n      background: #edf3f8;\n      color: #212121;\n    }\n\n    .title {\n      z-index: 9999 !important;\n      position: absolute;\n      left: 50%;\n      top: 42%;\n      transform: translateX(-50%) translateY(-50%);\n      font-family: \"Montserrat\";\n      text-align: center;\n      width: 100%;\n    }\n\n    .title h1 {\n      z-index: 99;\n      position: relative;\n      color: #fff;\n      font-weight: 100;\n      font-size: 70px;\n      padding: 0;\n      margin: 0;\n      line-height: 1;\n      text-shadow: 0 0 10px #ff006c, 0 0 20px #ff006c, 0 0 30px #ff006c,\n      0 0 40px #ff417d, 0 0 70px #ff417d, 0 0 80px #ff417d,\n      0 0 100px #ff417d, 0 0 150px #ff417d;\n    }\n\n    .title h1 span {\n      z-index: 99;\n      font-weight: 600;\n      padding: 0;\n      margin: 0;\n      color: #ffffff;\n    }\n\n    .title h3 {\n      z-index: 99;\n      font-weight: 200;\n      font-size: 26px;\n      padding: 0;\n      margin: 0;\n      line-height: 1;\n      color: #ffffff;\n      letter-spacing: 2px;\n    }\n\n    /* 爱心css */\n    canvas {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n    .img {\n      position: absolute;\n      left: 50%;\n      top: 60%;\n      transform: translate(-50%, -50%);\n      width: 180px;   /* 160 */\n      height: 180px;\n    }\n    #pinkboard {\n      position: relative;\n      top: 0%;\n      left: 0%;\n      height: 429px;\n    }\n    .STARDUST1 {\n      position: relative !important;\n      top: -60px;\n    }\n    .STARDUST2 {\n      position: relative !important;\n      top: -40px;\n    }\n    .STARDUST3 {\n      position: relative !important;\n      top: -20px;\n    }\n    /* 星空css */\n    html,\n    body {\n      padding: 0px;\n      margin: 0px;\n      width: 100%;\n      height: 100%;\n      position: fixed;\n    }\n\n    body {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      -webkit-filter: contrast(120%);\n      filter: contrast(120%);\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n      /* background-color: black; */\n    }\n\n    .container2 {\n      /* z-index: 8; */\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n    }\n\n    .content {\n      width: inherit;\n      height: inherit;\n      width: 100%;\n      height: 100%;\n      background-image: radial-gradient(\n              1600px at 70% 120%,\n              rgba(33, 39, 80, 1) 10%,\n              #020409 100%\n      ) !important;\n    }\n\n    #universe {\n      width: 100%;\n      height: 100%;\n    }\n\n    #footerContent {\n      font-family: sans-serif;\n      font-size: 110%;\n      color: rgba(200, 220, 255, 0.3);\n      width: 100%;\n      position: fixed;\n      bottom: 0px;\n      padding: 20px;\n      text-align: center;\n      z-index: 20;\n    }\n\n    /* #footer {\n      position: absolute;\n      bottom: 0px;\n      height: 300px;\n      width: 100%;\n    } */\n\n    #scene {\n      height: 100%;\n      position: absolute;\n      left: 50%;\n      margin-left: -800px;\n    }\n\n    a {\n      text-decoration: none;\n      color: rgba(200, 220, 255, 1);\n      opacity: 0.4;\n      transition: opacity 0.4s ease;\n    }\n\n    a:hover {\n      opacity: 1;\n    }\n  </style>\n\n</head>\n\n<body>\n<audio autoplay=\"autopaly\">\n  <source src=\"renxi.mp3\" type=\"audio/mp3\" />\n</audio>\n<!-- 星空html -->\n<!-- <div> -->\n<div class=\"container2\">\n  <div class=\"content\">\n    <canvas id=\"universe\"></canvas>\n  </div>\n</div>\n<!-- </div> -->\n<div class=\"title\">\n  <!-- 星团文字html -->\n\n  <!-- 爱心html -->\n  <canvas id=\"pinkboard\"> </canvas>\n  <div class=\"main\"><h1>wei</h1>></div>\n\n</div>\n\n<!--爱心js  -->\n<script>\n  /*\n   * Settings\n   */\n  var settings = {\n    particles: {\n      length: 500, // maximum amount of particles\n      duration: 2, // particle duration in sec\n      velocity: 100, // particle velocity in pixels/sec\n      effect: -0.75, // play with this for a nice effect\n      size: 30, // particle size in pixels\n    },\n  };\n\n  /*\n   * RequestAnimationFrame polyfill by Erik M?ller\n   */\n  (function () {\n    var b = 0;\n    var c = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n      window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n              window[c[a] + \"CancelAnimationFrame\"] ||\n              window[c[a] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (h, e) {\n        var d = new Date().getTime();\n        var f = Math.max(0, 16 - (d - b));\n        var g = window.setTimeout(function () {\n          h(d + f);\n        }, f);\n        b = d + f;\n        return g;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (d) {\n        clearTimeout(d);\n      };\n    }\n  })();\n\n  /*\n   * Point class\n   */\n  var Point = (function () {\n    function Point(x, y) {\n      this.x = typeof x !== \"undefined\" ? x : 0;\n      this.y = typeof y !== \"undefined\" ? y : 0;\n    }\n    Point.prototype.clone = function () {\n      return new Point(this.x, this.y);\n    };\n    Point.prototype.length = function (length) {\n      if (typeof length == \"undefined\")\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      this.normalize();\n      this.x *= length;\n      this.y *= length;\n      return this;\n    };\n    Point.prototype.normalize = function () {\n      var length = this.length();\n      this.x /= length;\n      this.y /= length;\n      return this;\n    };\n    return Point;\n  })();\n\n  /*\n   * Particle class\n   */\n  var Particle = (function () {\n    function Particle() {\n      this.position = new Point();\n      this.velocity = new Point();\n      this.acceleration = new Point();\n      this.age = 0;\n    }\n    Particle.prototype.initialize = function (x, y, dx, dy) {\n      this.position.x = x;\n      this.position.y = y;\n      this.velocity.x = dx;\n      this.velocity.y = dy;\n      this.acceleration.x = dx * settings.particles.effect;\n      this.acceleration.y = dy * settings.particles.effect;\n      this.age = 0;\n    };\n    Particle.prototype.update = function (deltaTime) {\n      this.position.x += this.velocity.x * deltaTime;\n      this.position.y += this.velocity.y * deltaTime;\n      this.velocity.x += this.acceleration.x * deltaTime;\n      this.velocity.y += this.acceleration.y * deltaTime;\n      this.age += deltaTime;\n    };\n    Particle.prototype.draw = function (context, image) {\n      function ease(t) {\n        return --t * t * t + 1;\n      }\n      var size = image.width * ease(this.age / settings.particles.duration);\n      context.globalAlpha = 1 - this.age / settings.particles.duration;\n      context.drawImage(\n              image,\n              this.position.x - size / 2,\n              this.position.y - size / 2,\n              size,\n              size\n      );\n    };\n    return Particle;\n  })();\n\n  /*\n   * ParticlePool class\n   */\n  var ParticlePool = (function () {\n    var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n    function ParticlePool(length) {\n      // create and populate particle pool\n      particles = new Array(length);\n      for (var i = 0; i < particles.length; i++)\n        particles[i] = new Particle();\n    }\n    ParticlePool.prototype.add = function (x, y, dx, dy) {\n      particles[firstFree].initialize(x, y, dx, dy);\n\n      // handle circular queue\n      firstFree++;\n      if (firstFree == particles.length) firstFree = 0;\n      if (firstActive == firstFree) firstActive++;\n      if (firstActive == particles.length) firstActive = 0;\n    };\n    ParticlePool.prototype.update = function (deltaTime) {\n      var i;\n\n      // update active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].update(deltaTime);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].update(deltaTime);\n        for (i = 0; i < firstFree; i++) particles[i].update(deltaTime);\n      }\n\n      // remove inactive particles\n      while (\n              particles[firstActive].age >= duration &&\n              firstActive != firstFree\n              ) {\n        firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      }\n    };\n    ParticlePool.prototype.draw = function (context, image) {\n      // draw active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].draw(context, image);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].draw(context, image);\n        for (i = 0; i < firstFree; i++) particles[i].draw(context, image);\n      }\n    };\n    return ParticlePool;\n  })();\n\n  /*\n   * Putting it all together\n   */\n  (function (canvas) {\n    var context = canvas.getContext(\"2d\"),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n    // get point on heart with -PI <= t <= PI\n    function pointOnHeart(t) {\n      return new Point(\n              160 * Math.pow(Math.sin(t), 3),\n              130 * Math.cos(t) -\n              50 * Math.cos(2 * t) -\n              20 * Math.cos(3 * t) -\n              10 * Math.cos(4 * t) +\n              25\n      );\n    }\n\n    // creating the particle image using a dummy canvas\n    var image = (function () {\n      var canvas = document.createElement(\"canvas\"),\n              context = canvas.getContext(\"2d\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n      // helper function to create the path\n      function to(t) {\n        var point = pointOnHeart(t);\n        point.x =\n                settings.particles.size / 2 +\n                (point.x * settings.particles.size) / 350;\n        point.y =\n                settings.particles.size / 2 -\n                (point.y * settings.particles.size) / 350;\n        return point;\n      }\n      // create the path\n      context.beginPath();\n      var t = -Math.PI;\n      var point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01; // baby steps!\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n      // create the fill\n      context.fillStyle = \"#ea80b0\";\n      context.fill();\n      // create the image\n      var image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    })();\n\n    // render that thing!\n    function render() {\n      // next animation frame\n      requestAnimationFrame(render);\n\n      // update time\n      var newTime = new Date().getTime() / 1000,\n              deltaTime = newTime - (time || newTime);\n      time = newTime;\n\n      // clear canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // create new particles\n      var amount = particleRate * deltaTime;\n      for (var i = 0; i < amount; i++) {\n        var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        var dir = pos.clone().length(settings.particles.velocity);\n        particles.add(\n                canvas.width / 2 + pos.x,\n                canvas.height / 2 - pos.y,\n                dir.x,\n                -dir.y\n        );\n      }\n\n      // update and draw particles\n      particles.update(deltaTime);\n      particles.draw(context, image);\n    }\n\n    // handle (re-)sizing of the canvas\n    function onResize() {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n    window.onresize = onResize;\n\n    // delay rendering bootstrap\n    setTimeout(function () {\n      onResize();\n      render();\n    }, 10);\n  })(document.getElementById(\"pinkboard\"));\n</script>\n<!-- 星空js -->\n<script>\n  window.requestAnimationFrame =\n          window.requestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.msRequestAnimationFrame;\n\n  var starDensity = 0.216;\n  var speedCoeff = 0.05;\n  var width;\n  var height;\n  var starCount;\n  var circleRadius;\n  var circleCenter;\n  var first = true;\n  var giantColor = \"180,184,240\";\n  var starColor = \"226,225,142\";\n  var cometColor = \"226,225,224\";\n  var canva = document.getElementById(\"universe\");\n  canva.style.zIndex = 200;\n  var stars = [];\n\n  windowResizeHandler();\n  window.addEventListener(\"resize\", windowResizeHandler, false);\n\n  createUniverse();\n\n  function createUniverse() {\n    universe = canva.getContext(\"2d\");\n\n    for (var i = 0; i < starCount; i++) {\n      stars[i] = new Star();\n      stars[i].reset();\n    }\n\n    draw();\n  }\n\n  function draw() {\n    universe.clearRect(0, 0, width, height);\n\n    var starsLength = stars.length;\n\n    for (var i = 0; i < starsLength; i++) {\n      var star = stars[i];\n      star.move();\n      star.fadeIn();\n      star.fadeOut();\n      star.draw();\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  function Star() {\n    this.reset = function () {\n      this.giant = getProbability(3);\n      this.comet = this.giant || first ? false : getProbability(10);\n      this.x = getRandInterval(0, width - 10);\n      this.y = getRandInterval(0, height);\n      this.r = getRandInterval(1.1, 2.6);\n      this.dx =\n              getRandInterval(speedCoeff, 6 * speedCoeff) +\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) +\n              speedCoeff * 2;\n      this.dy =\n              -getRandInterval(speedCoeff, 6 * speedCoeff) -\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n      this.fadingOut = null;\n      this.fadingIn = true;\n      this.opacity = 0;\n      this.opacityTresh = getRandInterval(\n              0.2,\n              1 - (this.comet + 1 - 1) * 0.4\n      );\n      this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * 0.001;\n    };\n\n    this.fadeIn = function () {\n      if (this.fadingIn) {\n        this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n        this.opacity += this.do;\n      }\n    };\n\n    this.fadeOut = function () {\n      if (this.fadingOut) {\n        this.fadingOut = this.opacity < 0 ? false : true;\n        this.opacity -= this.do / 2;\n        if (this.x > width || this.y < 0) {\n          this.fadingOut = false;\n          this.reset();\n        }\n      }\n    };\n\n    this.draw = function () {\n      universe.beginPath();\n\n      if (this.giant) {\n        universe.fillStyle = \"rgba(\" + giantColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n      } else if (this.comet) {\n        universe.fillStyle = \"rgba(\" + cometColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n        //comet tail\n        for (var i = 0; i < 30; i++) {\n          universe.fillStyle =\n                  \"rgba(\" +\n                  cometColor +\n                  \",\" +\n                  (this.opacity - (this.opacity / 20) * i) +\n                  \")\";\n          universe.rect(\n                  this.x - (this.dx / 4) * i,\n                  this.y - (this.dy / 4) * i - 2,\n                  2,\n                  2\n          );\n          universe.fill();\n        }\n      } else {\n        universe.fillStyle = \"rgba(\" + starColor + \",\" + this.opacity + \")\";\n        universe.rect(this.x, this.y, this.r, this.r);\n      }\n\n      universe.closePath();\n      universe.fill();\n    };\n\n    this.move = function () {\n      this.x += this.dx;\n      this.y += this.dy;\n      if (this.fadingOut === false) {\n        this.reset();\n      }\n      if (this.x > width - width / 4 || this.y < 0) {\n        this.fadingOut = true;\n      }\n    };\n\n    (function () {\n      setTimeout(function () {\n        first = false;\n      }, 50);\n    })();\n  }\n\n  function getProbability(percents) {\n    return Math.floor(Math.random() * 1000) + 1 < percents * 10;\n  }\n\n  function getRandInterval(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function windowResizeHandler() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    starCount = width * starDensity;\n    circleRadius = width > height ? height / 2 : width / 2;\n    circleCenter = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    canva.setAttribute(\"width\", width);\n    canva.setAttribute(\"height\", height);\n  }\n</script>\n<!-- 星团js -->\n<script>\n  let particles = [];\n  let microparticles = [];\n\n  const c1 = createCanvas({\n    width: $(window).width(),\n    height: $(window).height(),\n  });\n\n  const tela = c1.canvas;\n  const canvas = c1.context;\n\n  // $(\"body\").append(tela);\n  $(\"body\").append(c1.canvas);\n\n  class Particle1 {\n    constructor(canvas) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n      this.life = 1000 + Math.random() * 3000;\n\n      this.x =\n              $(window).width() / 2 + (Math.random() * 20 - Math.random() * 20);\n      this.y = $(window).height();\n      this.s = 2 + Math.random();\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.direction = this.random > 0.5 ? -1 : 1;\n      this.radius = 1 + 3 * this.random;\n      this.color = \"#ff417d\";\n\n      this.ID = setInterval(\n              function () {\n                microparticles.push(\n                        new microParticle(c1.context, {\n                          x: this.x,\n                          y: this.y,\n                        })\n                );\n              }.bind(this),\n              this.random * 20\n      );\n\n      setTimeout(\n              function () {\n                clearInterval(this.ID);\n              }.bind(this),\n              this.life\n      );\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      // this.canvas.lineWidth = 2;\n      this.canvas.shadowOffsetX = 0;\n      this.canvas.shadowOffsetY = 0;\n      // this.canvas.shadowBlur = 6;\n      this.canvas.shadowColor = \"#000000\";\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              this.direction *\n              Math.sin(this.progress / (this.random1 * 430)) *\n              this.s;\n      this.y -= Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        clearInterval(this.ID);\n        return false;\n      }\n\n      if (this.y < 0) {\n        clearInterval(this.ID);\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  class microParticle {\n    constructor(canvas, options) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n\n      this.x = options.x;\n      this.y = options.y;\n      this.s = 2 + Math.random() * 3;\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.radius = 1 + this.random * 0.5;\n      this.color = \"#4EFCFE\"; //this.random > .5 ? \"#a9722c\" : \"#FFFED7\"\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      this.canvas.lineWidth = 2;\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              Math.sin(this.progress / (100 / (this.random1 - this.random2 * 10))) *\n              this.s;\n      this.y += Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        return false;\n      }\n\n      if (this.y > this.h) {\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  var random_life = 1000;\n\n  setInterval(\n          function () {\n            particles.push(new Particle1(canvas));\n            random_life = 2000 * Math.random();\n          }.bind(this),\n          random_life\n  );\n\n  function clear() {\n    let grd = canvas.createRadialGradient(\n            tela.width / 2,\n            tela.height / 2,\n            0,\n            tela.width / 2,\n            tela.height / 2,\n            tela.width\n    );\n    grd.addColorStop(0, \"rgba(20,20,20,1)\");\n    grd.addColorStop(1, \"rgba(0,0,0,0)\");\n    // Fill with gradient\n    canvas.globalAlpha = 0.16;\n    canvas.fillStyle = grd;\n    canvas.fillRect(0, 0, tela.width, tela.height);\n  }\n\n  function blur(ctx, canvas, amt) {\n    // ctx.filter = `blur(${amt}px)`\n    // ctx.drawImage(canvas, 0, 0)\n    // ctx.filter = 'none'\n  }\n\n  function update() {\n    clear();\n    particles = particles.filter(function (p) {\n      return p.move();\n    });\n    microparticles = microparticles.filter(function (mp) {\n      return mp.move();\n    });\n    requestAnimationFrame(update.bind(this));\n  }\n\n  function createCanvas(properties) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = properties.width;\n    //   canvas.style.zIndex = 999;\n    canvas.height = properties.height;\n    let context = canvas.getContext(\"2d\");\n    return {\n      canvas: canvas,\n      context: context,\n    };\n  }\n  update();\n</script>\n\n\n\n</body>\n\n\n\n\n\n","date":"2023-10-26T10:30:51.811Z","updated":"2023-10-26T10:30:51.811Z","path":"ww.html","comments":1,"_id":"cltsgp3ky00023gu3hw2sgxlk","content":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <script src=\"https://www.jq22.com/jquery/jquery-1.10.2.js\"></script>\n  <style type=\"text/css\">\n    @import url(\"https://fonts.googleapis.com/css?family=Montserrat:200,300,400,600\");\n    .more-pens {\n      position: fixed;\n      left: 20px;\n      bottom: 20px;\n      z-index: 10;\n      font-family: \"Montserrat\";\n      font-size: 12px;\n    }\n\n<pre><code>a.white-mode,\na.white-mode:link,\na.white-mode:visited,\na.white-mode:active &#123;\n  font-family: &quot;Montserrat&quot;;\n  font-size: 12px;\n  text-decoration: none;\n  /* background: #212121; */\n  padding: 4px 8px;\n  color: #f7f7f7;\n&#125;\n\na.white-mode:hover,\na.white-mode:link:hover,\na.white-mode:visited:hover,\na.white-mode:active:hover &#123;\n  background: #edf3f8;\n  color: #212121;\n&#125;\n\n.title &#123;\n  z-index: 9999 !important;\n  position: absolute;\n  left: 50%;\n  top: 42%;\n  transform: translateX(-50%) translateY(-50%);\n  font-family: &quot;Montserrat&quot;;\n  text-align: center;\n  width: 100%;\n&#125;\n\n.title h1 &#123;\n  z-index: 99;\n  position: relative;\n  color: #fff;\n  font-weight: 100;\n  font-size: 70px;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  text-shadow: 0 0 10px #ff006c, 0 0 20px #ff006c, 0 0 30px #ff006c,\n  0 0 40px #ff417d, 0 0 70px #ff417d, 0 0 80px #ff417d,\n  0 0 100px #ff417d, 0 0 150px #ff417d;\n&#125;\n\n.title h1 span &#123;\n  z-index: 99;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  color: #ffffff;\n&#125;\n\n.title h3 &#123;\n  z-index: 99;\n  font-weight: 200;\n  font-size: 26px;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  color: #ffffff;\n  letter-spacing: 2px;\n&#125;\n\n/* 爱心css */\ncanvas &#123;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n&#125;\n.img &#123;\n  position: absolute;\n  left: 50%;\n  top: 60%;\n  transform: translate(-50%, -50%);\n  width: 180px;   /* 160 */\n  height: 180px;\n&#125;\n#pinkboard &#123;\n  position: relative;\n  top: 0%;\n  left: 0%;\n  height: 429px;\n&#125;\n.STARDUST1 &#123;\n  position: relative !important;\n  top: -60px;\n&#125;\n.STARDUST2 &#123;\n  position: relative !important;\n  top: -40px;\n&#125;\n.STARDUST3 &#123;\n  position: relative !important;\n  top: -20px;\n&#125;\n/* 星空css */\nhtml,\nbody &#123;\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n&#125;\n\nbody &#123;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n  /* background-color: black; */\n&#125;\n\n.container2 &#123;\n  /* z-index: 8; */\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n&#125;\n\n.content &#123;\n  width: inherit;\n  height: inherit;\n  width: 100%;\n  height: 100%;\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n&#125;\n\n#universe &#123;\n  width: 100%;\n  height: 100%;\n&#125;\n\n#footerContent &#123;\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n&#125;\n\n/* #footer &#123;\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n&#125; */\n\n#scene &#123;\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n&#125;\n\na &#123;\n  text-decoration: none;\n  color: rgba(200, 220, 255, 1);\n  opacity: 0.4;\n  transition: opacity 0.4s ease;\n&#125;\n\na:hover &#123;\n  opacity: 1;\n&#125;\n</code></pre>\n<p>  </style></p>\n</head>\n\n<body>\n<audio autoplay=\"autopaly\">\n  <source src=\"renxi.mp3\" type=\"audio/mp3\" />\n</audio>\n<!-- 星空html -->\n<!-- <div> -->\n<div class=\"container2\">\n  <div class=\"content\">\n    <canvas id=\"universe\"></canvas>\n  </div>\n</div>\n<!-- </div> -->\n<div class=\"title\">\n  <!-- 星团文字html -->\n\n  <!-- 爱心html -->\n<p>  <canvas id=\"pinkboard\"> </canvas><br>  <div class=\"main\"><h1>wei</h1>&gt;</div></p>\n</div>\n\n<!--爱心js  -->\n<script>\n  /*\n   * Settings\n   */\n  var settings = {\n    particles: {\n      length: 500, // maximum amount of particles\n      duration: 2, // particle duration in sec\n      velocity: 100, // particle velocity in pixels/sec\n      effect: -0.75, // play with this for a nice effect\n      size: 30, // particle size in pixels\n    },\n  };\n\n  /*\n   * RequestAnimationFrame polyfill by Erik M?ller\n   */\n  (function () {\n    var b = 0;\n    var c = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n      window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n              window[c[a] + \"CancelAnimationFrame\"] ||\n              window[c[a] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (h, e) {\n        var d = new Date().getTime();\n        var f = Math.max(0, 16 - (d - b));\n        var g = window.setTimeout(function () {\n          h(d + f);\n        }, f);\n        b = d + f;\n        return g;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (d) {\n        clearTimeout(d);\n      };\n    }\n  })();\n\n  /*\n   * Point class\n   */\n  var Point = (function () {\n    function Point(x, y) {\n      this.x = typeof x !== \"undefined\" ? x : 0;\n      this.y = typeof y !== \"undefined\" ? y : 0;\n    }\n    Point.prototype.clone = function () {\n      return new Point(this.x, this.y);\n    };\n    Point.prototype.length = function (length) {\n      if (typeof length == \"undefined\")\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      this.normalize();\n      this.x *= length;\n      this.y *= length;\n      return this;\n    };\n    Point.prototype.normalize = function () {\n      var length = this.length();\n      this.x /= length;\n      this.y /= length;\n      return this;\n    };\n    return Point;\n  })();\n\n  /*\n   * Particle class\n   */\n  var Particle = (function () {\n    function Particle() {\n      this.position = new Point();\n      this.velocity = new Point();\n      this.acceleration = new Point();\n      this.age = 0;\n    }\n    Particle.prototype.initialize = function (x, y, dx, dy) {\n      this.position.x = x;\n      this.position.y = y;\n      this.velocity.x = dx;\n      this.velocity.y = dy;\n      this.acceleration.x = dx * settings.particles.effect;\n      this.acceleration.y = dy * settings.particles.effect;\n      this.age = 0;\n    };\n    Particle.prototype.update = function (deltaTime) {\n      this.position.x += this.velocity.x * deltaTime;\n      this.position.y += this.velocity.y * deltaTime;\n      this.velocity.x += this.acceleration.x * deltaTime;\n      this.velocity.y += this.acceleration.y * deltaTime;\n      this.age += deltaTime;\n    };\n    Particle.prototype.draw = function (context, image) {\n      function ease(t) {\n        return --t * t * t + 1;\n      }\n      var size = image.width * ease(this.age / settings.particles.duration);\n      context.globalAlpha = 1 - this.age / settings.particles.duration;\n      context.drawImage(\n              image,\n              this.position.x - size / 2,\n              this.position.y - size / 2,\n              size,\n              size\n      );\n    };\n    return Particle;\n  })();\n\n  /*\n   * ParticlePool class\n   */\n  var ParticlePool = (function () {\n    var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n    function ParticlePool(length) {\n      // create and populate particle pool\n      particles = new Array(length);\n      for (var i = 0; i < particles.length; i++)\n        particles[i] = new Particle();\n    }\n    ParticlePool.prototype.add = function (x, y, dx, dy) {\n      particles[firstFree].initialize(x, y, dx, dy);\n\n      // handle circular queue\n      firstFree++;\n      if (firstFree == particles.length) firstFree = 0;\n      if (firstActive == firstFree) firstActive++;\n      if (firstActive == particles.length) firstActive = 0;\n    };\n    ParticlePool.prototype.update = function (deltaTime) {\n      var i;\n\n      // update active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].update(deltaTime);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].update(deltaTime);\n        for (i = 0; i < firstFree; i++) particles[i].update(deltaTime);\n      }\n\n      // remove inactive particles\n      while (\n              particles[firstActive].age >= duration &&\n              firstActive != firstFree\n              ) {\n        firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      }\n    };\n    ParticlePool.prototype.draw = function (context, image) {\n      // draw active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].draw(context, image);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].draw(context, image);\n        for (i = 0; i < firstFree; i++) particles[i].draw(context, image);\n      }\n    };\n    return ParticlePool;\n  })();\n\n  /*\n   * Putting it all together\n   */\n  (function (canvas) {\n    var context = canvas.getContext(\"2d\"),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n    // get point on heart with -PI <= t <= PI\n    function pointOnHeart(t) {\n      return new Point(\n              160 * Math.pow(Math.sin(t), 3),\n              130 * Math.cos(t) -\n              50 * Math.cos(2 * t) -\n              20 * Math.cos(3 * t) -\n              10 * Math.cos(4 * t) +\n              25\n      );\n    }\n\n    // creating the particle image using a dummy canvas\n    var image = (function () {\n      var canvas = document.createElement(\"canvas\"),\n              context = canvas.getContext(\"2d\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n      // helper function to create the path\n      function to(t) {\n        var point = pointOnHeart(t);\n        point.x =\n                settings.particles.size / 2 +\n                (point.x * settings.particles.size) / 350;\n        point.y =\n                settings.particles.size / 2 -\n                (point.y * settings.particles.size) / 350;\n        return point;\n      }\n      // create the path\n      context.beginPath();\n      var t = -Math.PI;\n      var point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01; // baby steps!\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n      // create the fill\n      context.fillStyle = \"#ea80b0\";\n      context.fill();\n      // create the image\n      var image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    })();\n\n    // render that thing!\n    function render() {\n      // next animation frame\n      requestAnimationFrame(render);\n\n      // update time\n      var newTime = new Date().getTime() / 1000,\n              deltaTime = newTime - (time || newTime);\n      time = newTime;\n\n      // clear canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // create new particles\n      var amount = particleRate * deltaTime;\n      for (var i = 0; i < amount; i++) {\n        var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        var dir = pos.clone().length(settings.particles.velocity);\n        particles.add(\n                canvas.width / 2 + pos.x,\n                canvas.height / 2 - pos.y,\n                dir.x,\n                -dir.y\n        );\n      }\n\n      // update and draw particles\n      particles.update(deltaTime);\n      particles.draw(context, image);\n    }\n\n    // handle (re-)sizing of the canvas\n    function onResize() {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n    window.onresize = onResize;\n\n    // delay rendering bootstrap\n    setTimeout(function () {\n      onResize();\n      render();\n    }, 10);\n  })(document.getElementById(\"pinkboard\"));\n</script>\n<!-- 星空js -->\n<script>\n  window.requestAnimationFrame =\n          window.requestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.msRequestAnimationFrame;\n\n  var starDensity = 0.216;\n  var speedCoeff = 0.05;\n  var width;\n  var height;\n  var starCount;\n  var circleRadius;\n  var circleCenter;\n  var first = true;\n  var giantColor = \"180,184,240\";\n  var starColor = \"226,225,142\";\n  var cometColor = \"226,225,224\";\n  var canva = document.getElementById(\"universe\");\n  canva.style.zIndex = 200;\n  var stars = [];\n\n  windowResizeHandler();\n  window.addEventListener(\"resize\", windowResizeHandler, false);\n\n  createUniverse();\n\n  function createUniverse() {\n    universe = canva.getContext(\"2d\");\n\n    for (var i = 0; i < starCount; i++) {\n      stars[i] = new Star();\n      stars[i].reset();\n    }\n\n    draw();\n  }\n\n  function draw() {\n    universe.clearRect(0, 0, width, height);\n\n    var starsLength = stars.length;\n\n    for (var i = 0; i < starsLength; i++) {\n      var star = stars[i];\n      star.move();\n      star.fadeIn();\n      star.fadeOut();\n      star.draw();\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  function Star() {\n    this.reset = function () {\n      this.giant = getProbability(3);\n      this.comet = this.giant || first ? false : getProbability(10);\n      this.x = getRandInterval(0, width - 10);\n      this.y = getRandInterval(0, height);\n      this.r = getRandInterval(1.1, 2.6);\n      this.dx =\n              getRandInterval(speedCoeff, 6 * speedCoeff) +\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) +\n              speedCoeff * 2;\n      this.dy =\n              -getRandInterval(speedCoeff, 6 * speedCoeff) -\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n      this.fadingOut = null;\n      this.fadingIn = true;\n      this.opacity = 0;\n      this.opacityTresh = getRandInterval(\n              0.2,\n              1 - (this.comet + 1 - 1) * 0.4\n      );\n      this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * 0.001;\n    };\n\n    this.fadeIn = function () {\n      if (this.fadingIn) {\n        this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n        this.opacity += this.do;\n      }\n    };\n\n    this.fadeOut = function () {\n      if (this.fadingOut) {\n        this.fadingOut = this.opacity < 0 ? false : true;\n        this.opacity -= this.do / 2;\n        if (this.x > width || this.y < 0) {\n          this.fadingOut = false;\n          this.reset();\n        }\n      }\n    };\n\n    this.draw = function () {\n      universe.beginPath();\n\n      if (this.giant) {\n        universe.fillStyle = \"rgba(\" + giantColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n      } else if (this.comet) {\n        universe.fillStyle = \"rgba(\" + cometColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n        //comet tail\n        for (var i = 0; i < 30; i++) {\n          universe.fillStyle =\n                  \"rgba(\" +\n                  cometColor +\n                  \",\" +\n                  (this.opacity - (this.opacity / 20) * i) +\n                  \")\";\n          universe.rect(\n                  this.x - (this.dx / 4) * i,\n                  this.y - (this.dy / 4) * i - 2,\n                  2,\n                  2\n          );\n          universe.fill();\n        }\n      } else {\n        universe.fillStyle = \"rgba(\" + starColor + \",\" + this.opacity + \")\";\n        universe.rect(this.x, this.y, this.r, this.r);\n      }\n\n      universe.closePath();\n      universe.fill();\n    };\n\n    this.move = function () {\n      this.x += this.dx;\n      this.y += this.dy;\n      if (this.fadingOut === false) {\n        this.reset();\n      }\n      if (this.x > width - width / 4 || this.y < 0) {\n        this.fadingOut = true;\n      }\n    };\n\n    (function () {\n      setTimeout(function () {\n        first = false;\n      }, 50);\n    })();\n  }\n\n  function getProbability(percents) {\n    return Math.floor(Math.random() * 1000) + 1 < percents * 10;\n  }\n\n  function getRandInterval(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function windowResizeHandler() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    starCount = width * starDensity;\n    circleRadius = width > height ? height / 2 : width / 2;\n    circleCenter = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    canva.setAttribute(\"width\", width);\n    canva.setAttribute(\"height\", height);\n  }\n</script>\n<!-- 星团js -->\n<script>\n  let particles = [];\n  let microparticles = [];\n\n  const c1 = createCanvas({\n    width: $(window).width(),\n    height: $(window).height(),\n  });\n\n  const tela = c1.canvas;\n  const canvas = c1.context;\n\n  // $(\"body\").append(tela);\n  $(\"body\").append(c1.canvas);\n\n  class Particle1 {\n    constructor(canvas) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n      this.life = 1000 + Math.random() * 3000;\n\n      this.x =\n              $(window).width() / 2 + (Math.random() * 20 - Math.random() * 20);\n      this.y = $(window).height();\n      this.s = 2 + Math.random();\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.direction = this.random > 0.5 ? -1 : 1;\n      this.radius = 1 + 3 * this.random;\n      this.color = \"#ff417d\";\n\n      this.ID = setInterval(\n              function () {\n                microparticles.push(\n                        new microParticle(c1.context, {\n                          x: this.x,\n                          y: this.y,\n                        })\n                );\n              }.bind(this),\n              this.random * 20\n      );\n\n      setTimeout(\n              function () {\n                clearInterval(this.ID);\n              }.bind(this),\n              this.life\n      );\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      // this.canvas.lineWidth = 2;\n      this.canvas.shadowOffsetX = 0;\n      this.canvas.shadowOffsetY = 0;\n      // this.canvas.shadowBlur = 6;\n      this.canvas.shadowColor = \"#000000\";\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              this.direction *\n              Math.sin(this.progress / (this.random1 * 430)) *\n              this.s;\n      this.y -= Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        clearInterval(this.ID);\n        return false;\n      }\n\n      if (this.y < 0) {\n        clearInterval(this.ID);\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  class microParticle {\n    constructor(canvas, options) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n\n      this.x = options.x;\n      this.y = options.y;\n      this.s = 2 + Math.random() * 3;\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.radius = 1 + this.random * 0.5;\n      this.color = \"#4EFCFE\"; //this.random > .5 ? \"#a9722c\" : \"#FFFED7\"\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      this.canvas.lineWidth = 2;\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              Math.sin(this.progress / (100 / (this.random1 - this.random2 * 10))) *\n              this.s;\n      this.y += Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        return false;\n      }\n\n      if (this.y > this.h) {\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  var random_life = 1000;\n\n  setInterval(\n          function () {\n            particles.push(new Particle1(canvas));\n            random_life = 2000 * Math.random();\n          }.bind(this),\n          random_life\n  );\n\n  function clear() {\n    let grd = canvas.createRadialGradient(\n            tela.width / 2,\n            tela.height / 2,\n            0,\n            tela.width / 2,\n            tela.height / 2,\n            tela.width\n    );\n    grd.addColorStop(0, \"rgba(20,20,20,1)\");\n    grd.addColorStop(1, \"rgba(0,0,0,0)\");\n    // Fill with gradient\n    canvas.globalAlpha = 0.16;\n    canvas.fillStyle = grd;\n    canvas.fillRect(0, 0, tela.width, tela.height);\n  }\n\n  function blur(ctx, canvas, amt) {\n    // ctx.filter = `blur(${amt}px)`\n    // ctx.drawImage(canvas, 0, 0)\n    // ctx.filter = 'none'\n  }\n\n  function update() {\n    clear();\n    particles = particles.filter(function (p) {\n      return p.move();\n    });\n    microparticles = microparticles.filter(function (mp) {\n      return mp.move();\n    });\n    requestAnimationFrame(update.bind(this));\n  }\n\n  function createCanvas(properties) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = properties.width;\n    //   canvas.style.zIndex = 999;\n    canvas.height = properties.height;\n    let context = canvas.getContext(\"2d\");\n    return {\n      canvas: canvas,\n      context: context,\n    };\n  }\n  update();\n</script>\n\n\n\n</body>\n\n\n\n\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <script src=\"https://www.jq22.com/jquery/jquery-1.10.2.js\"></script>\n  <style type=\"text/css\">\n    @import url(\"https://fonts.googleapis.com/css?family=Montserrat:200,300,400,600\");\n    .more-pens {\n      position: fixed;\n      left: 20px;\n      bottom: 20px;\n      z-index: 10;\n      font-family: \"Montserrat\";\n      font-size: 12px;\n    }\n\n<pre><code>a.white-mode,\na.white-mode:link,\na.white-mode:visited,\na.white-mode:active &#123;\n  font-family: &quot;Montserrat&quot;;\n  font-size: 12px;\n  text-decoration: none;\n  /* background: #212121; */\n  padding: 4px 8px;\n  color: #f7f7f7;\n&#125;\n\na.white-mode:hover,\na.white-mode:link:hover,\na.white-mode:visited:hover,\na.white-mode:active:hover &#123;\n  background: #edf3f8;\n  color: #212121;\n&#125;\n\n.title &#123;\n  z-index: 9999 !important;\n  position: absolute;\n  left: 50%;\n  top: 42%;\n  transform: translateX(-50%) translateY(-50%);\n  font-family: &quot;Montserrat&quot;;\n  text-align: center;\n  width: 100%;\n&#125;\n\n.title h1 &#123;\n  z-index: 99;\n  position: relative;\n  color: #fff;\n  font-weight: 100;\n  font-size: 70px;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  text-shadow: 0 0 10px #ff006c, 0 0 20px #ff006c, 0 0 30px #ff006c,\n  0 0 40px #ff417d, 0 0 70px #ff417d, 0 0 80px #ff417d,\n  0 0 100px #ff417d, 0 0 150px #ff417d;\n&#125;\n\n.title h1 span &#123;\n  z-index: 99;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  color: #ffffff;\n&#125;\n\n.title h3 &#123;\n  z-index: 99;\n  font-weight: 200;\n  font-size: 26px;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n  color: #ffffff;\n  letter-spacing: 2px;\n&#125;\n\n/* 爱心css */\ncanvas &#123;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n&#125;\n.img &#123;\n  position: absolute;\n  left: 50%;\n  top: 60%;\n  transform: translate(-50%, -50%);\n  width: 180px;   /* 160 */\n  height: 180px;\n&#125;\n#pinkboard &#123;\n  position: relative;\n  top: 0%;\n  left: 0%;\n  height: 429px;\n&#125;\n.STARDUST1 &#123;\n  position: relative !important;\n  top: -60px;\n&#125;\n.STARDUST2 &#123;\n  position: relative !important;\n  top: -40px;\n&#125;\n.STARDUST3 &#123;\n  position: relative !important;\n  top: -20px;\n&#125;\n/* 星空css */\nhtml,\nbody &#123;\n  padding: 0px;\n  margin: 0px;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n&#125;\n\nbody &#123;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  -webkit-filter: contrast(120%);\n  filter: contrast(120%);\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n  /* background-color: black; */\n&#125;\n\n.container2 &#123;\n  /* z-index: 8; */\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n&#125;\n\n.content &#123;\n  width: inherit;\n  height: inherit;\n  width: 100%;\n  height: 100%;\n  background-image: radial-gradient(\n          1600px at 70% 120%,\n          rgba(33, 39, 80, 1) 10%,\n          #020409 100%\n  ) !important;\n&#125;\n\n#universe &#123;\n  width: 100%;\n  height: 100%;\n&#125;\n\n#footerContent &#123;\n  font-family: sans-serif;\n  font-size: 110%;\n  color: rgba(200, 220, 255, 0.3);\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 20px;\n  text-align: center;\n  z-index: 20;\n&#125;\n\n/* #footer &#123;\n  position: absolute;\n  bottom: 0px;\n  height: 300px;\n  width: 100%;\n&#125; */\n\n#scene &#123;\n  height: 100%;\n  position: absolute;\n  left: 50%;\n  margin-left: -800px;\n&#125;\n\na &#123;\n  text-decoration: none;\n  color: rgba(200, 220, 255, 1);\n  opacity: 0.4;\n  transition: opacity 0.4s ease;\n&#125;\n\na:hover &#123;\n  opacity: 1;\n&#125;\n</code></pre>\n<p>  </style></p>\n</head>\n\n<body>\n<audio autoplay=\"autopaly\">\n  <source src=\"renxi.mp3\" type=\"audio/mp3\" />\n</audio>\n<!-- 星空html -->\n<!-- <div> -->\n<div class=\"container2\">\n  <div class=\"content\">\n    <canvas id=\"universe\"></canvas>\n  </div>\n</div>\n<!-- </div> -->\n<div class=\"title\">\n  <!-- 星团文字html -->\n\n  <!-- 爱心html -->\n<p>  <canvas id=\"pinkboard\"> </canvas><br>  <div class=\"main\"><h1>wei</h1>&gt;</div></p>\n</div>\n\n<!--爱心js  -->\n<script>\n  /*\n   * Settings\n   */\n  var settings = {\n    particles: {\n      length: 500, // maximum amount of particles\n      duration: 2, // particle duration in sec\n      velocity: 100, // particle velocity in pixels/sec\n      effect: -0.75, // play with this for a nice effect\n      size: 30, // particle size in pixels\n    },\n  };\n\n  /*\n   * RequestAnimationFrame polyfill by Erik M?ller\n   */\n  (function () {\n    var b = 0;\n    var c = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) {\n      window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n              window[c[a] + \"CancelAnimationFrame\"] ||\n              window[c[a] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (h, e) {\n        var d = new Date().getTime();\n        var f = Math.max(0, 16 - (d - b));\n        var g = window.setTimeout(function () {\n          h(d + f);\n        }, f);\n        b = d + f;\n        return g;\n      };\n    }\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (d) {\n        clearTimeout(d);\n      };\n    }\n  })();\n\n  /*\n   * Point class\n   */\n  var Point = (function () {\n    function Point(x, y) {\n      this.x = typeof x !== \"undefined\" ? x : 0;\n      this.y = typeof y !== \"undefined\" ? y : 0;\n    }\n    Point.prototype.clone = function () {\n      return new Point(this.x, this.y);\n    };\n    Point.prototype.length = function (length) {\n      if (typeof length == \"undefined\")\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      this.normalize();\n      this.x *= length;\n      this.y *= length;\n      return this;\n    };\n    Point.prototype.normalize = function () {\n      var length = this.length();\n      this.x /= length;\n      this.y /= length;\n      return this;\n    };\n    return Point;\n  })();\n\n  /*\n   * Particle class\n   */\n  var Particle = (function () {\n    function Particle() {\n      this.position = new Point();\n      this.velocity = new Point();\n      this.acceleration = new Point();\n      this.age = 0;\n    }\n    Particle.prototype.initialize = function (x, y, dx, dy) {\n      this.position.x = x;\n      this.position.y = y;\n      this.velocity.x = dx;\n      this.velocity.y = dy;\n      this.acceleration.x = dx * settings.particles.effect;\n      this.acceleration.y = dy * settings.particles.effect;\n      this.age = 0;\n    };\n    Particle.prototype.update = function (deltaTime) {\n      this.position.x += this.velocity.x * deltaTime;\n      this.position.y += this.velocity.y * deltaTime;\n      this.velocity.x += this.acceleration.x * deltaTime;\n      this.velocity.y += this.acceleration.y * deltaTime;\n      this.age += deltaTime;\n    };\n    Particle.prototype.draw = function (context, image) {\n      function ease(t) {\n        return --t * t * t + 1;\n      }\n      var size = image.width * ease(this.age / settings.particles.duration);\n      context.globalAlpha = 1 - this.age / settings.particles.duration;\n      context.drawImage(\n              image,\n              this.position.x - size / 2,\n              this.position.y - size / 2,\n              size,\n              size\n      );\n    };\n    return Particle;\n  })();\n\n  /*\n   * ParticlePool class\n   */\n  var ParticlePool = (function () {\n    var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n    function ParticlePool(length) {\n      // create and populate particle pool\n      particles = new Array(length);\n      for (var i = 0; i < particles.length; i++)\n        particles[i] = new Particle();\n    }\n    ParticlePool.prototype.add = function (x, y, dx, dy) {\n      particles[firstFree].initialize(x, y, dx, dy);\n\n      // handle circular queue\n      firstFree++;\n      if (firstFree == particles.length) firstFree = 0;\n      if (firstActive == firstFree) firstActive++;\n      if (firstActive == particles.length) firstActive = 0;\n    };\n    ParticlePool.prototype.update = function (deltaTime) {\n      var i;\n\n      // update active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].update(deltaTime);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].update(deltaTime);\n        for (i = 0; i < firstFree; i++) particles[i].update(deltaTime);\n      }\n\n      // remove inactive particles\n      while (\n              particles[firstActive].age >= duration &&\n              firstActive != firstFree\n              ) {\n        firstActive++;\n        if (firstActive == particles.length) firstActive = 0;\n      }\n    };\n    ParticlePool.prototype.draw = function (context, image) {\n      // draw active particles\n      if (firstActive < firstFree) {\n        for (i = firstActive; i < firstFree; i++)\n          particles[i].draw(context, image);\n      }\n      if (firstFree < firstActive) {\n        for (i = firstActive; i < particles.length; i++)\n          particles[i].draw(context, image);\n        for (i = 0; i < firstFree; i++) particles[i].draw(context, image);\n      }\n    };\n    return ParticlePool;\n  })();\n\n  /*\n   * Putting it all together\n   */\n  (function (canvas) {\n    var context = canvas.getContext(\"2d\"),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n    // get point on heart with -PI <= t <= PI\n    function pointOnHeart(t) {\n      return new Point(\n              160 * Math.pow(Math.sin(t), 3),\n              130 * Math.cos(t) -\n              50 * Math.cos(2 * t) -\n              20 * Math.cos(3 * t) -\n              10 * Math.cos(4 * t) +\n              25\n      );\n    }\n\n    // creating the particle image using a dummy canvas\n    var image = (function () {\n      var canvas = document.createElement(\"canvas\"),\n              context = canvas.getContext(\"2d\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n      // helper function to create the path\n      function to(t) {\n        var point = pointOnHeart(t);\n        point.x =\n                settings.particles.size / 2 +\n                (point.x * settings.particles.size) / 350;\n        point.y =\n                settings.particles.size / 2 -\n                (point.y * settings.particles.size) / 350;\n        return point;\n      }\n      // create the path\n      context.beginPath();\n      var t = -Math.PI;\n      var point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01; // baby steps!\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n      // create the fill\n      context.fillStyle = \"#ea80b0\";\n      context.fill();\n      // create the image\n      var image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    })();\n\n    // render that thing!\n    function render() {\n      // next animation frame\n      requestAnimationFrame(render);\n\n      // update time\n      var newTime = new Date().getTime() / 1000,\n              deltaTime = newTime - (time || newTime);\n      time = newTime;\n\n      // clear canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // create new particles\n      var amount = particleRate * deltaTime;\n      for (var i = 0; i < amount; i++) {\n        var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        var dir = pos.clone().length(settings.particles.velocity);\n        particles.add(\n                canvas.width / 2 + pos.x,\n                canvas.height / 2 - pos.y,\n                dir.x,\n                -dir.y\n        );\n      }\n\n      // update and draw particles\n      particles.update(deltaTime);\n      particles.draw(context, image);\n    }\n\n    // handle (re-)sizing of the canvas\n    function onResize() {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n    window.onresize = onResize;\n\n    // delay rendering bootstrap\n    setTimeout(function () {\n      onResize();\n      render();\n    }, 10);\n  })(document.getElementById(\"pinkboard\"));\n</script>\n<!-- 星空js -->\n<script>\n  window.requestAnimationFrame =\n          window.requestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.msRequestAnimationFrame;\n\n  var starDensity = 0.216;\n  var speedCoeff = 0.05;\n  var width;\n  var height;\n  var starCount;\n  var circleRadius;\n  var circleCenter;\n  var first = true;\n  var giantColor = \"180,184,240\";\n  var starColor = \"226,225,142\";\n  var cometColor = \"226,225,224\";\n  var canva = document.getElementById(\"universe\");\n  canva.style.zIndex = 200;\n  var stars = [];\n\n  windowResizeHandler();\n  window.addEventListener(\"resize\", windowResizeHandler, false);\n\n  createUniverse();\n\n  function createUniverse() {\n    universe = canva.getContext(\"2d\");\n\n    for (var i = 0; i < starCount; i++) {\n      stars[i] = new Star();\n      stars[i].reset();\n    }\n\n    draw();\n  }\n\n  function draw() {\n    universe.clearRect(0, 0, width, height);\n\n    var starsLength = stars.length;\n\n    for (var i = 0; i < starsLength; i++) {\n      var star = stars[i];\n      star.move();\n      star.fadeIn();\n      star.fadeOut();\n      star.draw();\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  function Star() {\n    this.reset = function () {\n      this.giant = getProbability(3);\n      this.comet = this.giant || first ? false : getProbability(10);\n      this.x = getRandInterval(0, width - 10);\n      this.y = getRandInterval(0, height);\n      this.r = getRandInterval(1.1, 2.6);\n      this.dx =\n              getRandInterval(speedCoeff, 6 * speedCoeff) +\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120) +\n              speedCoeff * 2;\n      this.dy =\n              -getRandInterval(speedCoeff, 6 * speedCoeff) -\n              (this.comet + 1 - 1) * speedCoeff * getRandInterval(50, 120);\n      this.fadingOut = null;\n      this.fadingIn = true;\n      this.opacity = 0;\n      this.opacityTresh = getRandInterval(\n              0.2,\n              1 - (this.comet + 1 - 1) * 0.4\n      );\n      this.do = getRandInterval(0.0005, 0.002) + (this.comet + 1 - 1) * 0.001;\n    };\n\n    this.fadeIn = function () {\n      if (this.fadingIn) {\n        this.fadingIn = this.opacity > this.opacityTresh ? false : true;\n        this.opacity += this.do;\n      }\n    };\n\n    this.fadeOut = function () {\n      if (this.fadingOut) {\n        this.fadingOut = this.opacity < 0 ? false : true;\n        this.opacity -= this.do / 2;\n        if (this.x > width || this.y < 0) {\n          this.fadingOut = false;\n          this.reset();\n        }\n      }\n    };\n\n    this.draw = function () {\n      universe.beginPath();\n\n      if (this.giant) {\n        universe.fillStyle = \"rgba(\" + giantColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 2, 0, 2 * Math.PI, false);\n      } else if (this.comet) {\n        universe.fillStyle = \"rgba(\" + cometColor + \",\" + this.opacity + \")\";\n        universe.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, false);\n\n        //comet tail\n        for (var i = 0; i < 30; i++) {\n          universe.fillStyle =\n                  \"rgba(\" +\n                  cometColor +\n                  \",\" +\n                  (this.opacity - (this.opacity / 20) * i) +\n                  \")\";\n          universe.rect(\n                  this.x - (this.dx / 4) * i,\n                  this.y - (this.dy / 4) * i - 2,\n                  2,\n                  2\n          );\n          universe.fill();\n        }\n      } else {\n        universe.fillStyle = \"rgba(\" + starColor + \",\" + this.opacity + \")\";\n        universe.rect(this.x, this.y, this.r, this.r);\n      }\n\n      universe.closePath();\n      universe.fill();\n    };\n\n    this.move = function () {\n      this.x += this.dx;\n      this.y += this.dy;\n      if (this.fadingOut === false) {\n        this.reset();\n      }\n      if (this.x > width - width / 4 || this.y < 0) {\n        this.fadingOut = true;\n      }\n    };\n\n    (function () {\n      setTimeout(function () {\n        first = false;\n      }, 50);\n    })();\n  }\n\n  function getProbability(percents) {\n    return Math.floor(Math.random() * 1000) + 1 < percents * 10;\n  }\n\n  function getRandInterval(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function windowResizeHandler() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    starCount = width * starDensity;\n    circleRadius = width > height ? height / 2 : width / 2;\n    circleCenter = {\n      x: width / 2,\n      y: height / 2,\n    };\n\n    canva.setAttribute(\"width\", width);\n    canva.setAttribute(\"height\", height);\n  }\n</script>\n<!-- 星团js -->\n<script>\n  let particles = [];\n  let microparticles = [];\n\n  const c1 = createCanvas({\n    width: $(window).width(),\n    height: $(window).height(),\n  });\n\n  const tela = c1.canvas;\n  const canvas = c1.context;\n\n  // $(\"body\").append(tela);\n  $(\"body\").append(c1.canvas);\n\n  class Particle1 {\n    constructor(canvas) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n      this.life = 1000 + Math.random() * 3000;\n\n      this.x =\n              $(window).width() / 2 + (Math.random() * 20 - Math.random() * 20);\n      this.y = $(window).height();\n      this.s = 2 + Math.random();\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.direction = this.random > 0.5 ? -1 : 1;\n      this.radius = 1 + 3 * this.random;\n      this.color = \"#ff417d\";\n\n      this.ID = setInterval(\n              function () {\n                microparticles.push(\n                        new microParticle(c1.context, {\n                          x: this.x,\n                          y: this.y,\n                        })\n                );\n              }.bind(this),\n              this.random * 20\n      );\n\n      setTimeout(\n              function () {\n                clearInterval(this.ID);\n              }.bind(this),\n              this.life\n      );\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      // this.canvas.lineWidth = 2;\n      this.canvas.shadowOffsetX = 0;\n      this.canvas.shadowOffsetY = 0;\n      // this.canvas.shadowBlur = 6;\n      this.canvas.shadowColor = \"#000000\";\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              this.direction *\n              Math.sin(this.progress / (this.random1 * 430)) *\n              this.s;\n      this.y -= Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        clearInterval(this.ID);\n        return false;\n      }\n\n      if (this.y < 0) {\n        clearInterval(this.ID);\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  class microParticle {\n    constructor(canvas, options) {\n      this.random = Math.random();\n      this.random1 = Math.random();\n      this.random2 = Math.random();\n      this.progress = 0;\n      this.canvas = canvas;\n\n      this.x = options.x;\n      this.y = options.y;\n      this.s = 2 + Math.random() * 3;\n      this.w = $(window).width();\n      this.h = $(window).height();\n      this.radius = 1 + this.random * 0.5;\n      this.color = \"#4EFCFE\"; //this.random > .5 ? \"#a9722c\" : \"#FFFED7\"\n    }\n\n    render() {\n      this.canvas.beginPath();\n      this.canvas.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n      this.canvas.lineWidth = 2;\n      this.canvas.fillStyle = this.color;\n      this.canvas.fill();\n      this.canvas.closePath();\n    }\n\n    move() {\n      this.x -=\n              Math.sin(this.progress / (100 / (this.random1 - this.random2 * 10))) *\n              this.s;\n      this.y += Math.cos(this.progress / this.h) * this.s;\n\n      if (this.x < 0 || this.x > this.w - this.radius) {\n        return false;\n      }\n\n      if (this.y > this.h) {\n        return false;\n      }\n      this.render();\n      this.progress++;\n      return true;\n    }\n  }\n\n  var random_life = 1000;\n\n  setInterval(\n          function () {\n            particles.push(new Particle1(canvas));\n            random_life = 2000 * Math.random();\n          }.bind(this),\n          random_life\n  );\n\n  function clear() {\n    let grd = canvas.createRadialGradient(\n            tela.width / 2,\n            tela.height / 2,\n            0,\n            tela.width / 2,\n            tela.height / 2,\n            tela.width\n    );\n    grd.addColorStop(0, \"rgba(20,20,20,1)\");\n    grd.addColorStop(1, \"rgba(0,0,0,0)\");\n    // Fill with gradient\n    canvas.globalAlpha = 0.16;\n    canvas.fillStyle = grd;\n    canvas.fillRect(0, 0, tela.width, tela.height);\n  }\n\n  function blur(ctx, canvas, amt) {\n    // ctx.filter = `blur(${amt}px)`\n    // ctx.drawImage(canvas, 0, 0)\n    // ctx.filter = 'none'\n  }\n\n  function update() {\n    clear();\n    particles = particles.filter(function (p) {\n      return p.move();\n    });\n    microparticles = microparticles.filter(function (mp) {\n      return mp.move();\n    });\n    requestAnimationFrame(update.bind(this));\n  }\n\n  function createCanvas(properties) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = properties.width;\n    //   canvas.style.zIndex = 999;\n    canvas.height = properties.height;\n    let context = canvas.getContext(\"2d\");\n    return {\n      canvas: canvas,\n      context: context,\n    };\n  }\n  update();\n</script>\n\n\n\n</body>\n\n\n\n\n\n"},{"title":"about","date":"2018-09-30T09:25:30.000Z","type":"about","layout":"about","_content":"\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---\n\n\n","updated":"2024-03-08T13:36:43.160Z","path":"about/index.html","comments":1,"_id":"cltsgp3l000043gu3eke8an95","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"title":"categories","date":"2018-09-30T09:25:30.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2023-04-06T13:24:26.957Z","path":"categories/index.html","comments":1,"_id":"cltsgp3l100063gu3eq02dj6b","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2018-09-30 17:25:30\ntype: \"contact\"\nlayout: \"contact\"\n---","updated":"2023-04-06T13:26:17.697Z","path":"contact/index.html","comments":1,"_id":"cltsgp3l200083gu3fvel3vd2","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-12-12 21:25:30\ntype: \"friends\"\nlayout: \"friends\"\n---","updated":"2023-04-06T13:26:56.297Z","path":"friends/index.html","comments":1,"_id":"cltsgp3l3000a3gu379da154y","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"title":"tags","date":"2018-09-10T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-10 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2023-04-06T13:25:21.775Z","path":"tags/index.html","comments":1,"_id":"cltsgp3l4000c3gu35gkwbjh1","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":""},{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<h1> 第一个大标题</h1>\n<h2> second title</h2>\n<h3> third title</h3>\n<h4> fourth title</h4>\n<img src=\"\" alt=\"\">\n<!--这里alt就是图片没办法加载然后加载出来的文字文本-->\n<!--alt是什么?-->\n<!--表格的-->\n<%@ %>\n\n</body>\n</html>","source":"tags/html/9/3.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<h1> 第一个大标题</h1>\n<h2> second title</h2>\n<h3> third title</h3>\n<h4> fourth title</h4>\n<img src=\"\" alt=\"\">\n<!--这里alt就是图片没办法加载然后加载出来的文字文本-->\n<!--alt是什么?-->\n<!--表格的-->\n<%@ %>\n\n</body>\n</html>","date":"2023-10-26T10:30:51.810Z","updated":"2023-10-26T10:30:51.810Z","path":"tags/html/9/3.html","title":"","comments":1,"layout":"page","_id":"cltsgp3l5000e3gu3f6iuac5c","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<h1> 第一个大标题</h1>\n<h2> second title</h2>\n<h3> third title</h3>\n<h4> fourth title</h4>\n<img src=\"\" alt=\"\">\n<!--这里alt就是图片没办法加载然后加载出来的文字文本-->\n<!--alt是什么?-->\n<!--表格的-->\n<%@ %>\n\n</body>\n</html>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n<h1> 第一个大标题</h1>\n<h2> second title</h2>\n<h3> third title</h3>\n<h4> fourth title</h4>\n<img src=\"\" alt=\"\">\n<!--这里alt就是图片没办法加载然后加载出来的文字文本-->\n<!--alt是什么?-->\n<!--表格的-->\n<%@ %>\n\n</body>\n</html>"},{"_content":"<!DOCTYPE html>\n<html>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<head>\n    <title>I love you</title>\n</head>\n\n<body>\n<!-- 创建一个canvas元素，用于绘制动态文字效果 -->\n<canvas id=\"canvas\"></canvas>\n\n<style type=\"text/css\">\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n</style>\n\n<script type=\"text/javascript\">\n    // 获取canvas元素和绘图上下文\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // 设置canvas的尺寸为窗口的尺寸\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    // 定义要显示的文字\n    var texts = 'I LOVE YOU'.split('');\n\n    var fontSize = 16; // 文字大小\n    var columns = canvas.width / fontSize; // 列数，根据canvas宽度和文字大小计算得出\n    var drops = []; // 用于存储每列的当前行数，即文字的垂直位置\n\n    // 初始化每列的当前行数为1\n    for (var x = 0; x < columns; x++) {\n        drops[x] = 1;\n    }\n\n    function draw() {\n        // 绘制黑色矩形作为背景，并逐渐使背景由透明变为不透明，实现渐变效果\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // 设置文字的颜色\n        ctx.fillStyle = '#f584b7';\n        ctx.font = fontSize + 'px arial';\n\n        // 逐行输出文字\n        for (var i = 0; i < drops.length; i++) {\n            // 从文字数组中随机选择一个文字\n            var text = texts[Math.floor(Math.random() * texts.length)];\n\n            // 在当前列的位置绘制文字，垂直位置由drops数组决定\n            ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n            // 当文字的垂直位置超过canvas的高度，或者以一定概率触发时，将当前行数重置为1，重新开始绘制文字\n            if (drops[i] * fontSize > canvas.height || Math.random() > 0.95) {\n                drops[i] = 0;\n            }\n\n            // 增加当前行数，使文字下移一行\n            drops[i]++;\n        }\n    }\n\n    // 每33毫秒调用一次draw函数，实现动态效果\n    setInterval(draw, 33);\n</script>\n</body>\n\n\n</html>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<!--跳动爱心-->\n\n\n<HEAD>\n    <TITLE> love</TITLE>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <META NAME=\"Generator\" CONTENT=\"EditPlus\">\n    <META NAME=\"Author\" CONTENT=\"\">\n    <META NAME=\"Keywords\" CONTENT=\"\">\n    <META NAME=\"Description\" CONTENT=\"\">\n    <meta charset=\"UTF-8\">\n    <style>\n        /* 设置html和body元素的高度为100%，去除默认的内外边距，背景颜色为黑色 */\n        html,\n        body {\n            height: 100%;\n            padding: 0;\n            margin: 0;\n            background: rgb(0, 0, 0);\n        }\n\n        /* 设置canvas元素的定位方式为绝对定位，宽度和高度都为100% */\n        canvas {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* 设置id为\"child\"的元素的定位方式为固定定位，居中显示 */\n        #child {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            margin-top: -75px;\n            margin-left: -100px;\n        }\n\n        /* 设置h4元素的样式，包括字体、大小、颜色，相对定位，微调位置 */\n        h4 {\n            font-family: \"STKaiti\";\n            font-size: 40px;\n            color: #f584b7;\n            position: relative;\n            top: -70px;\n            left: -65px;\n        }\n    </style>\n</head>\n\n\n<body>\n<div id=\"child\">\n    <h4></h4>\n</div>\n<!--这里写名字❤！！！-->\n<canvas id=\"pinkboard\"></canvas>\n<!-- <canvas id= \"canvas\"></canvas>  -->\n<script>\n    /*\n   * Settings\n   */\n    var settings = {\n        particles: {\n            length: 500, // maximum amount of particles\n            duration: 2, // particle duration in sec\n            velocity: 100, // particle velocity in pixels/sec\n            effect: -0.75, // play with this for a nice effect\n            size: 30, // particle size in pixels\n        },\n    };\n\n    /*\n     * RequestAnimationFrame polyfill by Erik Möller\n     */\n    (function () { var b = 0; var c = [\"ms\", \"moz\", \"webkit\", \"o\"]; for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) { window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"]; window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"] } if (!window.requestAnimationFrame) { window.requestAnimationFrame = function (h, e) { var d = new Date().getTime(); var f = Math.max(0, 16 - (d - b)); var g = window.setTimeout(function () { h(d + f) }, f); b = d + f; return g } } if (!window.cancelAnimationFrame) { window.cancelAnimationFrame = function (d) { clearTimeout(d) } } }());\n\n    /*\n     * Point class\n     */\n    var Point = (function () {\n        function Point(x, y) {\n            this.x = (typeof x !== 'undefined') ? x : 0;\n            this.y = (typeof y !== 'undefined') ? y : 0;\n        }\n        Point.prototype.clone = function () {\n            return new Point(this.x, this.y);\n        };\n        Point.prototype.length = function (length) {\n            if (typeof length == 'undefined')\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            this.normalize();\n            this.x *= length;\n            this.y *= length;\n            return this;\n        };\n        Point.prototype.normalize = function () {\n            var length = this.length();\n            this.x /= length;\n            this.y /= length;\n            return this;\n        };\n        return Point;\n    })();\n\n    /*\n     * Particle class\n     */\n    var Particle = (function () {\n        function Particle() {\n            this.position = new Point();\n            this.velocity = new Point();\n            this.acceleration = new Point();\n            this.age = 0;\n        }\n        Particle.prototype.initialize = function (x, y, dx, dy) {\n            this.position.x = x;\n            this.position.y = y;\n            this.velocity.x = dx;\n            this.velocity.y = dy;\n            this.acceleration.x = dx * settings.particles.effect;\n            this.acceleration.y = dy * settings.particles.effect;\n            this.age = 0;\n        };\n        Particle.prototype.update = function (deltaTime) {\n            this.position.x += this.velocity.x * deltaTime;\n            this.position.y += this.velocity.y * deltaTime;\n            this.velocity.x += this.acceleration.x * deltaTime;\n            this.velocity.y += this.acceleration.y * deltaTime;\n            this.age += deltaTime;\n        };\n        Particle.prototype.draw = function (context, image) {\n            function ease(t) {\n                return (--t) * t * t + 1;\n            }\n            var size = image.width * ease(this.age / settings.particles.duration);\n            context.globalAlpha = 1 - this.age / settings.particles.duration;\n            context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n        };\n        return Particle;\n    })();\n\n    /*\n     * ParticlePool class\n     */\n    var ParticlePool = (function () {\n        var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n        function ParticlePool(length) {\n            // create and populate particle pool\n            particles = new Array(length);\n            for (var i = 0; i < particles.length; i++)\n                particles[i] = new Particle();\n        }\n        ParticlePool.prototype.add = function (x, y, dx, dy) {\n            particles[firstFree].initialize(x, y, dx, dy);\n\n            // handle circular queue\n            firstFree++;\n            if (firstFree == particles.length) firstFree = 0;\n            if (firstActive == firstFree) firstActive++;\n            if (firstActive == particles.length) firstActive = 0;\n        };\n        ParticlePool.prototype.update = function (deltaTime) {\n            var i;\n\n            // update active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].update(deltaTime);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n\n            // remove inactive particles\n            while (particles[firstActive].age >= duration && firstActive != firstFree) {\n                firstActive++;\n                if (firstActive == particles.length) firstActive = 0;\n            }\n\n\n        };\n        ParticlePool.prototype.draw = function (context, image) {\n            // draw active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].draw(context, image);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n        };\n        return ParticlePool;\n    })();\n\n    /*\n     * Putting it all together\n     */\n    (function (canvas) {\n        var context = canvas.getContext('2d'),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n        // get point on heart with -PI <= t <= PI\n        function pointOnHeart(t) {\n            return new Point(\n                160 * Math.pow(Math.sin(t), 3),\n                130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\n            );\n        }\n\n        // creating the particle image using a dummy canvas\n        var image = (function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n            canvas.width = settings.particles.size;\n            canvas.height = settings.particles.size;\n            // helper function to create the path\n            function to(t) {\n                var point = pointOnHeart(t);\n                point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n                point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n                return point;\n            }\n            // create the path\n            context.beginPath();\n            var t = -Math.PI;\n            var point = to(t);\n            context.moveTo(point.x, point.y);\n            while (t < Math.PI) {\n                t += 0.01; // baby steps!\n                point = to(t);\n                context.lineTo(point.x, point.y);\n            }\n            context.closePath();\n            // create the fill\n            context.fillStyle = '#ea80b0';\n            context.fill();\n            // create the image\n            var image = new Image();\n            image.src = canvas.toDataURL();\n            return image;\n        })();\n\n        // render that thing!\n        function render() {\n            // next animation frame\n            requestAnimationFrame(render);\n\n            // update time\n            var newTime = new Date().getTime() / 1000,\n                deltaTime = newTime - (time || newTime);\n            time = newTime;\n\n            // clear canvas\n            context.clearRect(0, 0, canvas.width, canvas.height);\n\n            // create new particles\n            var amount = particleRate * deltaTime;\n            for (var i = 0; i < amount; i++) {\n                var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n                var dir = pos.clone().length(settings.particles.velocity);\n                particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n            }\n\n            // update and draw particles\n            particles.update(deltaTime);\n            particles.draw(context, image);\n        }\n\n        // handle (re-)sizing of the canvas\n        function onResize() {\n            canvas.width = canvas.clientWidth;\n            canvas.height = canvas.clientHeight;\n        }\n        window.onresize = onResize;\n\n        // delay rendering bootstrap\n        setTimeout(function () {\n            onResize();\n            render();\n        }, 10);\n    })(document.getElementById('pinkboard'));\n\n\n\n\n</script>\n\n</BODY>\n\n\n</HTML>","source":"ZONE/love.html","raw":"<!DOCTYPE html>\n<html>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<head>\n    <title>I love you</title>\n</head>\n\n<body>\n<!-- 创建一个canvas元素，用于绘制动态文字效果 -->\n<canvas id=\"canvas\"></canvas>\n\n<style type=\"text/css\">\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n</style>\n\n<script type=\"text/javascript\">\n    // 获取canvas元素和绘图上下文\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // 设置canvas的尺寸为窗口的尺寸\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    // 定义要显示的文字\n    var texts = 'I LOVE YOU'.split('');\n\n    var fontSize = 16; // 文字大小\n    var columns = canvas.width / fontSize; // 列数，根据canvas宽度和文字大小计算得出\n    var drops = []; // 用于存储每列的当前行数，即文字的垂直位置\n\n    // 初始化每列的当前行数为1\n    for (var x = 0; x < columns; x++) {\n        drops[x] = 1;\n    }\n\n    function draw() {\n        // 绘制黑色矩形作为背景，并逐渐使背景由透明变为不透明，实现渐变效果\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // 设置文字的颜色\n        ctx.fillStyle = '#f584b7';\n        ctx.font = fontSize + 'px arial';\n\n        // 逐行输出文字\n        for (var i = 0; i < drops.length; i++) {\n            // 从文字数组中随机选择一个文字\n            var text = texts[Math.floor(Math.random() * texts.length)];\n\n            // 在当前列的位置绘制文字，垂直位置由drops数组决定\n            ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n            // 当文字的垂直位置超过canvas的高度，或者以一定概率触发时，将当前行数重置为1，重新开始绘制文字\n            if (drops[i] * fontSize > canvas.height || Math.random() > 0.95) {\n                drops[i] = 0;\n            }\n\n            // 增加当前行数，使文字下移一行\n            drops[i]++;\n        }\n    }\n\n    // 每33毫秒调用一次draw函数，实现动态效果\n    setInterval(draw, 33);\n</script>\n</body>\n\n\n</html>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<!--跳动爱心-->\n\n\n<HEAD>\n    <TITLE> love</TITLE>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <META NAME=\"Generator\" CONTENT=\"EditPlus\">\n    <META NAME=\"Author\" CONTENT=\"\">\n    <META NAME=\"Keywords\" CONTENT=\"\">\n    <META NAME=\"Description\" CONTENT=\"\">\n    <meta charset=\"UTF-8\">\n    <style>\n        /* 设置html和body元素的高度为100%，去除默认的内外边距，背景颜色为黑色 */\n        html,\n        body {\n            height: 100%;\n            padding: 0;\n            margin: 0;\n            background: rgb(0, 0, 0);\n        }\n\n        /* 设置canvas元素的定位方式为绝对定位，宽度和高度都为100% */\n        canvas {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* 设置id为\"child\"的元素的定位方式为固定定位，居中显示 */\n        #child {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            margin-top: -75px;\n            margin-left: -100px;\n        }\n\n        /* 设置h4元素的样式，包括字体、大小、颜色，相对定位，微调位置 */\n        h4 {\n            font-family: \"STKaiti\";\n            font-size: 40px;\n            color: #f584b7;\n            position: relative;\n            top: -70px;\n            left: -65px;\n        }\n    </style>\n</head>\n\n\n<body>\n<div id=\"child\">\n    <h4></h4>\n</div>\n<!--这里写名字❤！！！-->\n<canvas id=\"pinkboard\"></canvas>\n<!-- <canvas id= \"canvas\"></canvas>  -->\n<script>\n    /*\n   * Settings\n   */\n    var settings = {\n        particles: {\n            length: 500, // maximum amount of particles\n            duration: 2, // particle duration in sec\n            velocity: 100, // particle velocity in pixels/sec\n            effect: -0.75, // play with this for a nice effect\n            size: 30, // particle size in pixels\n        },\n    };\n\n    /*\n     * RequestAnimationFrame polyfill by Erik Möller\n     */\n    (function () { var b = 0; var c = [\"ms\", \"moz\", \"webkit\", \"o\"]; for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) { window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"]; window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"] } if (!window.requestAnimationFrame) { window.requestAnimationFrame = function (h, e) { var d = new Date().getTime(); var f = Math.max(0, 16 - (d - b)); var g = window.setTimeout(function () { h(d + f) }, f); b = d + f; return g } } if (!window.cancelAnimationFrame) { window.cancelAnimationFrame = function (d) { clearTimeout(d) } } }());\n\n    /*\n     * Point class\n     */\n    var Point = (function () {\n        function Point(x, y) {\n            this.x = (typeof x !== 'undefined') ? x : 0;\n            this.y = (typeof y !== 'undefined') ? y : 0;\n        }\n        Point.prototype.clone = function () {\n            return new Point(this.x, this.y);\n        };\n        Point.prototype.length = function (length) {\n            if (typeof length == 'undefined')\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            this.normalize();\n            this.x *= length;\n            this.y *= length;\n            return this;\n        };\n        Point.prototype.normalize = function () {\n            var length = this.length();\n            this.x /= length;\n            this.y /= length;\n            return this;\n        };\n        return Point;\n    })();\n\n    /*\n     * Particle class\n     */\n    var Particle = (function () {\n        function Particle() {\n            this.position = new Point();\n            this.velocity = new Point();\n            this.acceleration = new Point();\n            this.age = 0;\n        }\n        Particle.prototype.initialize = function (x, y, dx, dy) {\n            this.position.x = x;\n            this.position.y = y;\n            this.velocity.x = dx;\n            this.velocity.y = dy;\n            this.acceleration.x = dx * settings.particles.effect;\n            this.acceleration.y = dy * settings.particles.effect;\n            this.age = 0;\n        };\n        Particle.prototype.update = function (deltaTime) {\n            this.position.x += this.velocity.x * deltaTime;\n            this.position.y += this.velocity.y * deltaTime;\n            this.velocity.x += this.acceleration.x * deltaTime;\n            this.velocity.y += this.acceleration.y * deltaTime;\n            this.age += deltaTime;\n        };\n        Particle.prototype.draw = function (context, image) {\n            function ease(t) {\n                return (--t) * t * t + 1;\n            }\n            var size = image.width * ease(this.age / settings.particles.duration);\n            context.globalAlpha = 1 - this.age / settings.particles.duration;\n            context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n        };\n        return Particle;\n    })();\n\n    /*\n     * ParticlePool class\n     */\n    var ParticlePool = (function () {\n        var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n        function ParticlePool(length) {\n            // create and populate particle pool\n            particles = new Array(length);\n            for (var i = 0; i < particles.length; i++)\n                particles[i] = new Particle();\n        }\n        ParticlePool.prototype.add = function (x, y, dx, dy) {\n            particles[firstFree].initialize(x, y, dx, dy);\n\n            // handle circular queue\n            firstFree++;\n            if (firstFree == particles.length) firstFree = 0;\n            if (firstActive == firstFree) firstActive++;\n            if (firstActive == particles.length) firstActive = 0;\n        };\n        ParticlePool.prototype.update = function (deltaTime) {\n            var i;\n\n            // update active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].update(deltaTime);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n\n            // remove inactive particles\n            while (particles[firstActive].age >= duration && firstActive != firstFree) {\n                firstActive++;\n                if (firstActive == particles.length) firstActive = 0;\n            }\n\n\n        };\n        ParticlePool.prototype.draw = function (context, image) {\n            // draw active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].draw(context, image);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n        };\n        return ParticlePool;\n    })();\n\n    /*\n     * Putting it all together\n     */\n    (function (canvas) {\n        var context = canvas.getContext('2d'),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n        // get point on heart with -PI <= t <= PI\n        function pointOnHeart(t) {\n            return new Point(\n                160 * Math.pow(Math.sin(t), 3),\n                130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\n            );\n        }\n\n        // creating the particle image using a dummy canvas\n        var image = (function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n            canvas.width = settings.particles.size;\n            canvas.height = settings.particles.size;\n            // helper function to create the path\n            function to(t) {\n                var point = pointOnHeart(t);\n                point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n                point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n                return point;\n            }\n            // create the path\n            context.beginPath();\n            var t = -Math.PI;\n            var point = to(t);\n            context.moveTo(point.x, point.y);\n            while (t < Math.PI) {\n                t += 0.01; // baby steps!\n                point = to(t);\n                context.lineTo(point.x, point.y);\n            }\n            context.closePath();\n            // create the fill\n            context.fillStyle = '#ea80b0';\n            context.fill();\n            // create the image\n            var image = new Image();\n            image.src = canvas.toDataURL();\n            return image;\n        })();\n\n        // render that thing!\n        function render() {\n            // next animation frame\n            requestAnimationFrame(render);\n\n            // update time\n            var newTime = new Date().getTime() / 1000,\n                deltaTime = newTime - (time || newTime);\n            time = newTime;\n\n            // clear canvas\n            context.clearRect(0, 0, canvas.width, canvas.height);\n\n            // create new particles\n            var amount = particleRate * deltaTime;\n            for (var i = 0; i < amount; i++) {\n                var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n                var dir = pos.clone().length(settings.particles.velocity);\n                particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n            }\n\n            // update and draw particles\n            particles.update(deltaTime);\n            particles.draw(context, image);\n        }\n\n        // handle (re-)sizing of the canvas\n        function onResize() {\n            canvas.width = canvas.clientWidth;\n            canvas.height = canvas.clientHeight;\n        }\n        window.onresize = onResize;\n\n        // delay rendering bootstrap\n        setTimeout(function () {\n            onResize();\n            render();\n        }, 10);\n    })(document.getElementById('pinkboard'));\n\n\n\n\n</script>\n\n</BODY>\n\n\n</HTML>","date":"2024-03-15T10:51:47.528Z","updated":"2023-10-26T10:30:51.803Z","path":"ZONE/love.html","_id":"cltsjhbqe0000vgu334t09mgd","title":"","comments":1,"layout":"page","content":"<!DOCTYPE html>\n<html>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<head>\n    <title>I love you</title>\n</head>\n\n<body>\n<!-- 创建一个canvas元素，用于绘制动态文字效果 -->\n<canvas id=\"canvas\"></canvas>\n\n<style type=\"text/css\">\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n</style>\n\n<script type=\"text/javascript\">\n    // 获取canvas元素和绘图上下文\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // 设置canvas的尺寸为窗口的尺寸\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    // 定义要显示的文字\n    var texts = 'I LOVE YOU'.split('');\n\n    var fontSize = 16; // 文字大小\n    var columns = canvas.width / fontSize; // 列数，根据canvas宽度和文字大小计算得出\n    var drops = []; // 用于存储每列的当前行数，即文字的垂直位置\n\n    // 初始化每列的当前行数为1\n    for (var x = 0; x < columns; x++) {\n        drops[x] = 1;\n    }\n\n    function draw() {\n        // 绘制黑色矩形作为背景，并逐渐使背景由透明变为不透明，实现渐变效果\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // 设置文字的颜色\n        ctx.fillStyle = '#f584b7';\n        ctx.font = fontSize + 'px arial';\n\n        // 逐行输出文字\n        for (var i = 0; i < drops.length; i++) {\n            // 从文字数组中随机选择一个文字\n            var text = texts[Math.floor(Math.random() * texts.length)];\n\n            // 在当前列的位置绘制文字，垂直位置由drops数组决定\n            ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n            // 当文字的垂直位置超过canvas的高度，或者以一定概率触发时，将当前行数重置为1，重新开始绘制文字\n            if (drops[i] * fontSize > canvas.height || Math.random() > 0.95) {\n                drops[i] = 0;\n            }\n\n            // 增加当前行数，使文字下移一行\n            drops[i]++;\n        }\n    }\n\n    // 每33毫秒调用一次draw函数，实现动态效果\n    setInterval(draw, 33);\n</script>\n</body>\n\n\n</html>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<!--跳动爱心-->\n\n\n<HEAD>\n    <TITLE> love</TITLE>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <META NAME=\"Generator\" CONTENT=\"EditPlus\">\n    <META NAME=\"Author\" CONTENT=\"\">\n    <META NAME=\"Keywords\" CONTENT=\"\">\n    <META NAME=\"Description\" CONTENT=\"\">\n    <meta charset=\"UTF-8\">\n    <style>\n        /* 设置html和body元素的高度为100%，去除默认的内外边距，背景颜色为黑色 */\n        html,\n        body {\n            height: 100%;\n            padding: 0;\n            margin: 0;\n            background: rgb(0, 0, 0);\n        }\n\n        /* 设置canvas元素的定位方式为绝对定位，宽度和高度都为100% */\n        canvas {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* 设置id为\"child\"的元素的定位方式为固定定位，居中显示 */\n        #child {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            margin-top: -75px;\n            margin-left: -100px;\n        }\n\n        /* 设置h4元素的样式，包括字体、大小、颜色，相对定位，微调位置 */\n        h4 {\n            font-family: \"STKaiti\";\n            font-size: 40px;\n            color: #f584b7;\n            position: relative;\n            top: -70px;\n            left: -65px;\n        }\n    </style>\n</head>\n\n\n<body>\n<div id=\"child\">\n    <h4></h4>\n</div>\n<!--这里写名字❤！！！-->\n<canvas id=\"pinkboard\"></canvas>\n<!-- <canvas id= \"canvas\"></canvas>  -->\n<script>\n    /*\n   * Settings\n   */\n    var settings = {\n        particles: {\n            length: 500, // maximum amount of particles\n            duration: 2, // particle duration in sec\n            velocity: 100, // particle velocity in pixels/sec\n            effect: -0.75, // play with this for a nice effect\n            size: 30, // particle size in pixels\n        },\n    };\n\n    /*\n     * RequestAnimationFrame polyfill by Erik Möller\n     */\n    (function () { var b = 0; var c = [\"ms\", \"moz\", \"webkit\", \"o\"]; for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) { window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"]; window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"] } if (!window.requestAnimationFrame) { window.requestAnimationFrame = function (h, e) { var d = new Date().getTime(); var f = Math.max(0, 16 - (d - b)); var g = window.setTimeout(function () { h(d + f) }, f); b = d + f; return g } } if (!window.cancelAnimationFrame) { window.cancelAnimationFrame = function (d) { clearTimeout(d) } } }());\n\n    /*\n     * Point class\n     */\n    var Point = (function () {\n        function Point(x, y) {\n            this.x = (typeof x !== 'undefined') ? x : 0;\n            this.y = (typeof y !== 'undefined') ? y : 0;\n        }\n        Point.prototype.clone = function () {\n            return new Point(this.x, this.y);\n        };\n        Point.prototype.length = function (length) {\n            if (typeof length == 'undefined')\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            this.normalize();\n            this.x *= length;\n            this.y *= length;\n            return this;\n        };\n        Point.prototype.normalize = function () {\n            var length = this.length();\n            this.x /= length;\n            this.y /= length;\n            return this;\n        };\n        return Point;\n    })();\n\n    /*\n     * Particle class\n     */\n    var Particle = (function () {\n        function Particle() {\n            this.position = new Point();\n            this.velocity = new Point();\n            this.acceleration = new Point();\n            this.age = 0;\n        }\n        Particle.prototype.initialize = function (x, y, dx, dy) {\n            this.position.x = x;\n            this.position.y = y;\n            this.velocity.x = dx;\n            this.velocity.y = dy;\n            this.acceleration.x = dx * settings.particles.effect;\n            this.acceleration.y = dy * settings.particles.effect;\n            this.age = 0;\n        };\n        Particle.prototype.update = function (deltaTime) {\n            this.position.x += this.velocity.x * deltaTime;\n            this.position.y += this.velocity.y * deltaTime;\n            this.velocity.x += this.acceleration.x * deltaTime;\n            this.velocity.y += this.acceleration.y * deltaTime;\n            this.age += deltaTime;\n        };\n        Particle.prototype.draw = function (context, image) {\n            function ease(t) {\n                return (--t) * t * t + 1;\n            }\n            var size = image.width * ease(this.age / settings.particles.duration);\n            context.globalAlpha = 1 - this.age / settings.particles.duration;\n            context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n        };\n        return Particle;\n    })();\n\n    /*\n     * ParticlePool class\n     */\n    var ParticlePool = (function () {\n        var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n        function ParticlePool(length) {\n            // create and populate particle pool\n            particles = new Array(length);\n            for (var i = 0; i < particles.length; i++)\n                particles[i] = new Particle();\n        }\n        ParticlePool.prototype.add = function (x, y, dx, dy) {\n            particles[firstFree].initialize(x, y, dx, dy);\n\n            // handle circular queue\n            firstFree++;\n            if (firstFree == particles.length) firstFree = 0;\n            if (firstActive == firstFree) firstActive++;\n            if (firstActive == particles.length) firstActive = 0;\n        };\n        ParticlePool.prototype.update = function (deltaTime) {\n            var i;\n\n            // update active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].update(deltaTime);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n\n            // remove inactive particles\n            while (particles[firstActive].age >= duration && firstActive != firstFree) {\n                firstActive++;\n                if (firstActive == particles.length) firstActive = 0;\n            }\n\n\n        };\n        ParticlePool.prototype.draw = function (context, image) {\n            // draw active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].draw(context, image);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n        };\n        return ParticlePool;\n    })();\n\n    /*\n     * Putting it all together\n     */\n    (function (canvas) {\n        var context = canvas.getContext('2d'),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n        // get point on heart with -PI <= t <= PI\n        function pointOnHeart(t) {\n            return new Point(\n                160 * Math.pow(Math.sin(t), 3),\n                130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\n            );\n        }\n\n        // creating the particle image using a dummy canvas\n        var image = (function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n            canvas.width = settings.particles.size;\n            canvas.height = settings.particles.size;\n            // helper function to create the path\n            function to(t) {\n                var point = pointOnHeart(t);\n                point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n                point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n                return point;\n            }\n            // create the path\n            context.beginPath();\n            var t = -Math.PI;\n            var point = to(t);\n            context.moveTo(point.x, point.y);\n            while (t < Math.PI) {\n                t += 0.01; // baby steps!\n                point = to(t);\n                context.lineTo(point.x, point.y);\n            }\n            context.closePath();\n            // create the fill\n            context.fillStyle = '#ea80b0';\n            context.fill();\n            // create the image\n            var image = new Image();\n            image.src = canvas.toDataURL();\n            return image;\n        })();\n\n        // render that thing!\n        function render() {\n            // next animation frame\n            requestAnimationFrame(render);\n\n            // update time\n            var newTime = new Date().getTime() / 1000,\n                deltaTime = newTime - (time || newTime);\n            time = newTime;\n\n            // clear canvas\n            context.clearRect(0, 0, canvas.width, canvas.height);\n\n            // create new particles\n            var amount = particleRate * deltaTime;\n            for (var i = 0; i < amount; i++) {\n                var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n                var dir = pos.clone().length(settings.particles.velocity);\n                particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n            }\n\n            // update and draw particles\n            particles.update(deltaTime);\n            particles.draw(context, image);\n        }\n\n        // handle (re-)sizing of the canvas\n        function onResize() {\n            canvas.width = canvas.clientWidth;\n            canvas.height = canvas.clientHeight;\n        }\n        window.onresize = onResize;\n\n        // delay rendering bootstrap\n        setTimeout(function () {\n            onResize();\n            render();\n        }, 10);\n    })(document.getElementById('pinkboard'));\n\n\n\n\n</script>\n\n</BODY>\n\n\n</HTML>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n<head>\n    <title>I love you</title>\n</head>\n\n<body>\n<!-- 创建一个canvas元素，用于绘制动态文字效果 -->\n<canvas id=\"canvas\"></canvas>\n\n<style type=\"text/css\">\n    body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n</style>\n\n<script type=\"text/javascript\">\n    // 获取canvas元素和绘图上下文\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // 设置canvas的尺寸为窗口的尺寸\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    // 定义要显示的文字\n    var texts = 'I LOVE YOU'.split('');\n\n    var fontSize = 16; // 文字大小\n    var columns = canvas.width / fontSize; // 列数，根据canvas宽度和文字大小计算得出\n    var drops = []; // 用于存储每列的当前行数，即文字的垂直位置\n\n    // 初始化每列的当前行数为1\n    for (var x = 0; x < columns; x++) {\n        drops[x] = 1;\n    }\n\n    function draw() {\n        // 绘制黑色矩形作为背景，并逐渐使背景由透明变为不透明，实现渐变效果\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // 设置文字的颜色\n        ctx.fillStyle = '#f584b7';\n        ctx.font = fontSize + 'px arial';\n\n        // 逐行输出文字\n        for (var i = 0; i < drops.length; i++) {\n            // 从文字数组中随机选择一个文字\n            var text = texts[Math.floor(Math.random() * texts.length)];\n\n            // 在当前列的位置绘制文字，垂直位置由drops数组决定\n            ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n\n            // 当文字的垂直位置超过canvas的高度，或者以一定概率触发时，将当前行数重置为1，重新开始绘制文字\n            if (drops[i] * fontSize > canvas.height || Math.random() > 0.95) {\n                drops[i] = 0;\n            }\n\n            // 增加当前行数，使文字下移一行\n            drops[i]++;\n        }\n    }\n\n    // 每33毫秒调用一次draw函数，实现动态效果\n    setInterval(draw, 33);\n</script>\n</body>\n\n\n</html>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<!--跳动爱心-->\n\n\n<HEAD>\n    <TITLE> love</TITLE>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <META NAME=\"Generator\" CONTENT=\"EditPlus\">\n    <META NAME=\"Author\" CONTENT=\"\">\n    <META NAME=\"Keywords\" CONTENT=\"\">\n    <META NAME=\"Description\" CONTENT=\"\">\n    <meta charset=\"UTF-8\">\n    <style>\n        /* 设置html和body元素的高度为100%，去除默认的内外边距，背景颜色为黑色 */\n        html,\n        body {\n            height: 100%;\n            padding: 0;\n            margin: 0;\n            background: rgb(0, 0, 0);\n        }\n\n        /* 设置canvas元素的定位方式为绝对定位，宽度和高度都为100% */\n        canvas {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n        }\n\n        /* 设置id为\"child\"的元素的定位方式为固定定位，居中显示 */\n        #child {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            margin-top: -75px;\n            margin-left: -100px;\n        }\n\n        /* 设置h4元素的样式，包括字体、大小、颜色，相对定位，微调位置 */\n        h4 {\n            font-family: \"STKaiti\";\n            font-size: 40px;\n            color: #f584b7;\n            position: relative;\n            top: -70px;\n            left: -65px;\n        }\n    </style>\n</head>\n\n\n<body>\n<div id=\"child\">\n    <h4></h4>\n</div>\n<!--这里写名字❤！！！-->\n<canvas id=\"pinkboard\"></canvas>\n<!-- <canvas id= \"canvas\"></canvas>  -->\n<script>\n    /*\n   * Settings\n   */\n    var settings = {\n        particles: {\n            length: 500, // maximum amount of particles\n            duration: 2, // particle duration in sec\n            velocity: 100, // particle velocity in pixels/sec\n            effect: -0.75, // play with this for a nice effect\n            size: 30, // particle size in pixels\n        },\n    };\n\n    /*\n     * RequestAnimationFrame polyfill by Erik Möller\n     */\n    (function () { var b = 0; var c = [\"ms\", \"moz\", \"webkit\", \"o\"]; for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) { window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"]; window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"] } if (!window.requestAnimationFrame) { window.requestAnimationFrame = function (h, e) { var d = new Date().getTime(); var f = Math.max(0, 16 - (d - b)); var g = window.setTimeout(function () { h(d + f) }, f); b = d + f; return g } } if (!window.cancelAnimationFrame) { window.cancelAnimationFrame = function (d) { clearTimeout(d) } } }());\n\n    /*\n     * Point class\n     */\n    var Point = (function () {\n        function Point(x, y) {\n            this.x = (typeof x !== 'undefined') ? x : 0;\n            this.y = (typeof y !== 'undefined') ? y : 0;\n        }\n        Point.prototype.clone = function () {\n            return new Point(this.x, this.y);\n        };\n        Point.prototype.length = function (length) {\n            if (typeof length == 'undefined')\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            this.normalize();\n            this.x *= length;\n            this.y *= length;\n            return this;\n        };\n        Point.prototype.normalize = function () {\n            var length = this.length();\n            this.x /= length;\n            this.y /= length;\n            return this;\n        };\n        return Point;\n    })();\n\n    /*\n     * Particle class\n     */\n    var Particle = (function () {\n        function Particle() {\n            this.position = new Point();\n            this.velocity = new Point();\n            this.acceleration = new Point();\n            this.age = 0;\n        }\n        Particle.prototype.initialize = function (x, y, dx, dy) {\n            this.position.x = x;\n            this.position.y = y;\n            this.velocity.x = dx;\n            this.velocity.y = dy;\n            this.acceleration.x = dx * settings.particles.effect;\n            this.acceleration.y = dy * settings.particles.effect;\n            this.age = 0;\n        };\n        Particle.prototype.update = function (deltaTime) {\n            this.position.x += this.velocity.x * deltaTime;\n            this.position.y += this.velocity.y * deltaTime;\n            this.velocity.x += this.acceleration.x * deltaTime;\n            this.velocity.y += this.acceleration.y * deltaTime;\n            this.age += deltaTime;\n        };\n        Particle.prototype.draw = function (context, image) {\n            function ease(t) {\n                return (--t) * t * t + 1;\n            }\n            var size = image.width * ease(this.age / settings.particles.duration);\n            context.globalAlpha = 1 - this.age / settings.particles.duration;\n            context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n        };\n        return Particle;\n    })();\n\n    /*\n     * ParticlePool class\n     */\n    var ParticlePool = (function () {\n        var particles,\n            firstActive = 0,\n            firstFree = 0,\n            duration = settings.particles.duration;\n\n        function ParticlePool(length) {\n            // create and populate particle pool\n            particles = new Array(length);\n            for (var i = 0; i < particles.length; i++)\n                particles[i] = new Particle();\n        }\n        ParticlePool.prototype.add = function (x, y, dx, dy) {\n            particles[firstFree].initialize(x, y, dx, dy);\n\n            // handle circular queue\n            firstFree++;\n            if (firstFree == particles.length) firstFree = 0;\n            if (firstActive == firstFree) firstActive++;\n            if (firstActive == particles.length) firstActive = 0;\n        };\n        ParticlePool.prototype.update = function (deltaTime) {\n            var i;\n\n            // update active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].update(deltaTime);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].update(deltaTime);\n            }\n\n            // remove inactive particles\n            while (particles[firstActive].age >= duration && firstActive != firstFree) {\n                firstActive++;\n                if (firstActive == particles.length) firstActive = 0;\n            }\n\n\n        };\n        ParticlePool.prototype.draw = function (context, image) {\n            // draw active particles\n            if (firstActive < firstFree) {\n                for (i = firstActive; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n            if (firstFree < firstActive) {\n                for (i = firstActive; i < particles.length; i++)\n                    particles[i].draw(context, image);\n                for (i = 0; i < firstFree; i++)\n                    particles[i].draw(context, image);\n            }\n        };\n        return ParticlePool;\n    })();\n\n    /*\n     * Putting it all together\n     */\n    (function (canvas) {\n        var context = canvas.getContext('2d'),\n            particles = new ParticlePool(settings.particles.length),\n            particleRate = settings.particles.length / settings.particles.duration, // particles/sec\n            time;\n\n        // get point on heart with -PI <= t <= PI\n        function pointOnHeart(t) {\n            return new Point(\n                160 * Math.pow(Math.sin(t), 3),\n                130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\n            );\n        }\n\n        // creating the particle image using a dummy canvas\n        var image = (function () {\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n            canvas.width = settings.particles.size;\n            canvas.height = settings.particles.size;\n            // helper function to create the path\n            function to(t) {\n                var point = pointOnHeart(t);\n                point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n                point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n                return point;\n            }\n            // create the path\n            context.beginPath();\n            var t = -Math.PI;\n            var point = to(t);\n            context.moveTo(point.x, point.y);\n            while (t < Math.PI) {\n                t += 0.01; // baby steps!\n                point = to(t);\n                context.lineTo(point.x, point.y);\n            }\n            context.closePath();\n            // create the fill\n            context.fillStyle = '#ea80b0';\n            context.fill();\n            // create the image\n            var image = new Image();\n            image.src = canvas.toDataURL();\n            return image;\n        })();\n\n        // render that thing!\n        function render() {\n            // next animation frame\n            requestAnimationFrame(render);\n\n            // update time\n            var newTime = new Date().getTime() / 1000,\n                deltaTime = newTime - (time || newTime);\n            time = newTime;\n\n            // clear canvas\n            context.clearRect(0, 0, canvas.width, canvas.height);\n\n            // create new particles\n            var amount = particleRate * deltaTime;\n            for (var i = 0; i < amount; i++) {\n                var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n                var dir = pos.clone().length(settings.particles.velocity);\n                particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n            }\n\n            // update and draw particles\n            particles.update(deltaTime);\n            particles.draw(context, image);\n        }\n\n        // handle (re-)sizing of the canvas\n        function onResize() {\n            canvas.width = canvas.clientWidth;\n            canvas.height = canvas.clientHeight;\n        }\n        window.onresize = onResize;\n\n        // delay rendering bootstrap\n        setTimeout(function () {\n            onResize();\n            render();\n        }, 10);\n    })(document.getElementById('pinkboard'));\n\n\n\n\n</script>\n\n</BODY>\n\n\n</HTML>"}],"Post":[{"title":"Studyplan","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-05-03T16:10:39.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"当然可以，以下是中文版的 React 文档链接：\n\n学习 JavaScript 基础知识\n\n可以参考 MDN 的 JavaScript 文档：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\n学习 React 基础知识\n\n可以参考 React 官方文档：https://zh-hans.reactjs.org/docs/getting-started.html\n学习 React 中的状态管理和数据流\n\n可以参考 React Hooks 官方文档：https://zh-hans.reactjs.org/docs/hooks-intro.html 和 Redux 中文文档：https://www.redux.org.cn/\n学习 React 中的路由和导航\n\n可以参考 React Router 官方文档：https://reactrouter.com/web/guides/quick-start\n学习 React 中的样式和布局\n\n可以参考 Styled Components 官方文档：https://styled-components.com/docs\n学习 React 中的测试和调试\n\n可以参考 Jest 官方文档：https://jestjs.io/docs/getting-started 和 React Testing Library 官方文档：https://testing-library.com/docs/react-testing-library/intro/\n学习 React 中的性能优化和最佳实践\n\n可以参考 React 官方文档的性能优化章节：https://zh-hans.reactjs.org/docs/optimizing-performance.html\n希望这些中文文档链接能对你有所帮助。\n\n我还有一本js的红宝书但是我不知道就是我具体要学习里面的那些内容,我是想做开发的\n\n《JavaScript高级程序设计（红宝书）》是一本经典的 JavaScript 学习教材，涵盖了 JavaScript 的核心概念和高级特性。如果你想成为一名开发者，掌握 JavaScript 是必不可少的。\n\n以下是建议的学习顺序和重点：\n\n基本语法和数据类型\n了解 JavaScript 的基本语法和数据类型，包括变量、数据类型、运算符、控制语句等。\n\n函数和作用域\n学习 JavaScript 的函数和作用域，包括函数声明和表达式、闭包、this、作用域链等。\n\n对象和面向对象编程\n学习 JavaScript 的对象和面向对象编程，包括对象字面量、构造函数、原型和原型链、继承等。\n\n异步编程和事件处理\n学习 JavaScript 的异步编程和事件处理，包括回调函数、Promise、async/await、事件处理器等。\n\nDOM 和浏览器编程\n学习 JavaScript 对 DOM 的操作和浏览器编程，包括文档对象模型、事件处理器、表单验证等。\n\nAjax 和跨域请求\n学习 JavaScript 的 Ajax 和跨域请求，包括XMLHttpRequest对象、fetch API、JSONP、CORS等。\n\nES6 和新特性\n学习 JavaScript 的 ES6 和新特性，包括箭头函数、模板字面量、解构赋值、let/const、class、模块化等。\n\n除了以上的内容，你也可以根据自己的实际需求和项目要求进行针对性的学习和应用。\n\n另外，建议你在学习 JavaScript 时也同时学习一个前端框架，比如 React、Vue、Angular 等，这样可以让你更快地应用和巩固所学的知识，并且提高开发效率和质量。\n\n一边学习框架的意识是啥,我该怎么做\n\n学习框架的意识是指在学习框架时，不仅要学习框架本身的语法和特性，还要理解框架的设计思想和使用场景。这样可以更好地理解和应用框架，同时也可以提高自己的代码质量和开发效率。\n\n下面是一些建议，可以帮助你在学习框架时培养框架意识：\n\n理解框架的设计思想和哲学\n每个框架都有自己的设计思想和哲学，比如 React 的组件化、Vue 的响应式数据绑定等。了解这些设计思想可以帮助你更好地理解框架的用法和优点。\n\n学习框架的核心概念和特性\n学习框架时，要重点掌握框架的核心概念和特性，比如 React 的虚拟 DOM、Vue 的生命周期等。这些概念和特性是框架的基础，也是后续学习和应用的基础。\n\n理解框架的使用场景和限制\n框架并不是万能的，它们各有适用的场景和限制。比如 React 更适用于大型应用的组件化开发，而 Vue 更适用于快速开发小型应用。了解这些使用场景和限制可以帮助你更好地选择和应用框架。\n\n学习框架的周边生态和工具\n每个框架都有自己的周边生态和工具，比如 React 的 React Router、Redux，Vue 的 Vuex、Vue Router 等。学习这些周边生态和工具可以帮助你更好地使用框架，同时也可以拓展自己的技能栈。\n\n阅读框架的源代码和文档\n阅读框架的源代码和文档可以帮助你更深入地了解框架的实现和用法。特别是在遇到问题时，阅读源代码和文档可以帮助你更快地找到解决方案。\n\n总之，学习框架不仅是学习语法和特性，更是一种开发思维和方法论的培养。希望以上建议能够对你有所帮助。\n\n你能介绍一些常用的框架吗？\n\n当今前端开发中，有很多优秀的框架供我们选择。以下是一些常用的框架：\n\nReact：由 Facebook 推出的一款组件化 UI 框架，主要用于构建大型单页面应用，具有高度的灵活性和可重用性。\n\nVue：一个渐进式的 JavaScript 框架，易于上手，具有响应式数据绑定和组件化等特性，适合用于中小型项目的开发。\n\nAngular：由 Google 推出的一款全面的前端框架，具有强大的工具链和生态系统，适合用于大型应用的开发。\n\njQuery：一款轻量级的 JavaScript 库，主要用于 DOM 操作和事件处理等，适合用于快速开发和简单项目的实现。\n\nBootstrap：一个流行的前端框架，包含了 HTML、CSS 和 JavaScript 组件，提供了快速开发网站的工具和模板。\n\nExpress：一个基于 Node.js 平台的 Web 应用程序框架，具有简单、灵活、高效等特点，适用于快速构建 Web 应用程序和 API。\n\n除了以上的框架，还有很多其他的优秀框架，比如 Ember.js、Backbone.js、Svelte 等。选择框架时，需要根据实际项目的需求、团队的技术水平和个人的喜好等因素进行综合考虑。","source":"_posts/Studyplan.md","raw":"---\ntitle: Studyplan\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-05-04 00:10:39\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n当然可以，以下是中文版的 React 文档链接：\n\n学习 JavaScript 基础知识\n\n可以参考 MDN 的 JavaScript 文档：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\n学习 React 基础知识\n\n可以参考 React 官方文档：https://zh-hans.reactjs.org/docs/getting-started.html\n学习 React 中的状态管理和数据流\n\n可以参考 React Hooks 官方文档：https://zh-hans.reactjs.org/docs/hooks-intro.html 和 Redux 中文文档：https://www.redux.org.cn/\n学习 React 中的路由和导航\n\n可以参考 React Router 官方文档：https://reactrouter.com/web/guides/quick-start\n学习 React 中的样式和布局\n\n可以参考 Styled Components 官方文档：https://styled-components.com/docs\n学习 React 中的测试和调试\n\n可以参考 Jest 官方文档：https://jestjs.io/docs/getting-started 和 React Testing Library 官方文档：https://testing-library.com/docs/react-testing-library/intro/\n学习 React 中的性能优化和最佳实践\n\n可以参考 React 官方文档的性能优化章节：https://zh-hans.reactjs.org/docs/optimizing-performance.html\n希望这些中文文档链接能对你有所帮助。\n\n我还有一本js的红宝书但是我不知道就是我具体要学习里面的那些内容,我是想做开发的\n\n《JavaScript高级程序设计（红宝书）》是一本经典的 JavaScript 学习教材，涵盖了 JavaScript 的核心概念和高级特性。如果你想成为一名开发者，掌握 JavaScript 是必不可少的。\n\n以下是建议的学习顺序和重点：\n\n基本语法和数据类型\n了解 JavaScript 的基本语法和数据类型，包括变量、数据类型、运算符、控制语句等。\n\n函数和作用域\n学习 JavaScript 的函数和作用域，包括函数声明和表达式、闭包、this、作用域链等。\n\n对象和面向对象编程\n学习 JavaScript 的对象和面向对象编程，包括对象字面量、构造函数、原型和原型链、继承等。\n\n异步编程和事件处理\n学习 JavaScript 的异步编程和事件处理，包括回调函数、Promise、async/await、事件处理器等。\n\nDOM 和浏览器编程\n学习 JavaScript 对 DOM 的操作和浏览器编程，包括文档对象模型、事件处理器、表单验证等。\n\nAjax 和跨域请求\n学习 JavaScript 的 Ajax 和跨域请求，包括XMLHttpRequest对象、fetch API、JSONP、CORS等。\n\nES6 和新特性\n学习 JavaScript 的 ES6 和新特性，包括箭头函数、模板字面量、解构赋值、let/const、class、模块化等。\n\n除了以上的内容，你也可以根据自己的实际需求和项目要求进行针对性的学习和应用。\n\n另外，建议你在学习 JavaScript 时也同时学习一个前端框架，比如 React、Vue、Angular 等，这样可以让你更快地应用和巩固所学的知识，并且提高开发效率和质量。\n\n一边学习框架的意识是啥,我该怎么做\n\n学习框架的意识是指在学习框架时，不仅要学习框架本身的语法和特性，还要理解框架的设计思想和使用场景。这样可以更好地理解和应用框架，同时也可以提高自己的代码质量和开发效率。\n\n下面是一些建议，可以帮助你在学习框架时培养框架意识：\n\n理解框架的设计思想和哲学\n每个框架都有自己的设计思想和哲学，比如 React 的组件化、Vue 的响应式数据绑定等。了解这些设计思想可以帮助你更好地理解框架的用法和优点。\n\n学习框架的核心概念和特性\n学习框架时，要重点掌握框架的核心概念和特性，比如 React 的虚拟 DOM、Vue 的生命周期等。这些概念和特性是框架的基础，也是后续学习和应用的基础。\n\n理解框架的使用场景和限制\n框架并不是万能的，它们各有适用的场景和限制。比如 React 更适用于大型应用的组件化开发，而 Vue 更适用于快速开发小型应用。了解这些使用场景和限制可以帮助你更好地选择和应用框架。\n\n学习框架的周边生态和工具\n每个框架都有自己的周边生态和工具，比如 React 的 React Router、Redux，Vue 的 Vuex、Vue Router 等。学习这些周边生态和工具可以帮助你更好地使用框架，同时也可以拓展自己的技能栈。\n\n阅读框架的源代码和文档\n阅读框架的源代码和文档可以帮助你更深入地了解框架的实现和用法。特别是在遇到问题时，阅读源代码和文档可以帮助你更快地找到解决方案。\n\n总之，学习框架不仅是学习语法和特性，更是一种开发思维和方法论的培养。希望以上建议能够对你有所帮助。\n\n你能介绍一些常用的框架吗？\n\n当今前端开发中，有很多优秀的框架供我们选择。以下是一些常用的框架：\n\nReact：由 Facebook 推出的一款组件化 UI 框架，主要用于构建大型单页面应用，具有高度的灵活性和可重用性。\n\nVue：一个渐进式的 JavaScript 框架，易于上手，具有响应式数据绑定和组件化等特性，适合用于中小型项目的开发。\n\nAngular：由 Google 推出的一款全面的前端框架，具有强大的工具链和生态系统，适合用于大型应用的开发。\n\njQuery：一款轻量级的 JavaScript 库，主要用于 DOM 操作和事件处理等，适合用于快速开发和简单项目的实现。\n\nBootstrap：一个流行的前端框架，包含了 HTML、CSS 和 JavaScript 组件，提供了快速开发网站的工具和模板。\n\nExpress：一个基于 Node.js 平台的 Web 应用程序框架，具有简单、灵活、高效等特点，适用于快速构建 Web 应用程序和 API。\n\n除了以上的框架，还有很多其他的优秀框架，比如 Ember.js、Backbone.js、Svelte 等。选择框架时，需要根据实际项目的需求、团队的技术水平和个人的喜好等因素进行综合考虑。","slug":"Studyplan","published":1,"updated":"2023-10-26T10:30:51.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3kv00013gu31dawd8n5","content":"<p>当然可以，以下是中文版的 React 文档链接：</p>\n<p>学习 JavaScript 基础知识</p>\n<p>可以参考 MDN 的 JavaScript 文档：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a><br>学习 React 基础知识</p>\n<p>可以参考 React 官方文档：<a href=\"https://zh-hans.reactjs.org/docs/getting-started.html\">https://zh-hans.reactjs.org/docs/getting-started.html</a><br>学习 React 中的状态管理和数据流</p>\n<p>可以参考 React Hooks 官方文档：<a href=\"https://zh-hans.reactjs.org/docs/hooks-intro.html\">https://zh-hans.reactjs.org/docs/hooks-intro.html</a> 和 Redux 中文文档：<a href=\"https://www.redux.org.cn/\">https://www.redux.org.cn/</a><br>学习 React 中的路由和导航</p>\n<p>可以参考 React Router 官方文档：<a href=\"https://reactrouter.com/web/guides/quick-start\">https://reactrouter.com/web/guides/quick-start</a><br>学习 React 中的样式和布局</p>\n<p>可以参考 Styled Components 官方文档：<a href=\"https://styled-components.com/docs\">https://styled-components.com/docs</a><br>学习 React 中的测试和调试</p>\n<p>可以参考 Jest 官方文档：<a href=\"https://jestjs.io/docs/getting-started\">https://jestjs.io/docs/getting-started</a> 和 React Testing Library 官方文档：<a href=\"https://testing-library.com/docs/react-testing-library/intro/\">https://testing-library.com/docs/react-testing-library/intro/</a><br>学习 React 中的性能优化和最佳实践</p>\n<p>可以参考 React 官方文档的性能优化章节：<a href=\"https://zh-hans.reactjs.org/docs/optimizing-performance.html\">https://zh-hans.reactjs.org/docs/optimizing-performance.html</a><br>希望这些中文文档链接能对你有所帮助。</p>\n<p>我还有一本js的红宝书但是我不知道就是我具体要学习里面的那些内容,我是想做开发的</p>\n<p>《JavaScript高级程序设计（红宝书）》是一本经典的 JavaScript 学习教材，涵盖了 JavaScript 的核心概念和高级特性。如果你想成为一名开发者，掌握 JavaScript 是必不可少的。</p>\n<p>以下是建议的学习顺序和重点：</p>\n<p>基本语法和数据类型<br>了解 JavaScript 的基本语法和数据类型，包括变量、数据类型、运算符、控制语句等。</p>\n<p>函数和作用域<br>学习 JavaScript 的函数和作用域，包括函数声明和表达式、闭包、this、作用域链等。</p>\n<p>对象和面向对象编程<br>学习 JavaScript 的对象和面向对象编程，包括对象字面量、构造函数、原型和原型链、继承等。</p>\n<p>异步编程和事件处理<br>学习 JavaScript 的异步编程和事件处理，包括回调函数、Promise、async/await、事件处理器等。</p>\n<p>DOM 和浏览器编程<br>学习 JavaScript 对 DOM 的操作和浏览器编程，包括文档对象模型、事件处理器、表单验证等。</p>\n<p>Ajax 和跨域请求<br>学习 JavaScript 的 Ajax 和跨域请求，包括XMLHttpRequest对象、fetch API、JSONP、CORS等。</p>\n<p>ES6 和新特性<br>学习 JavaScript 的 ES6 和新特性，包括箭头函数、模板字面量、解构赋值、let/const、class、模块化等。</p>\n<p>除了以上的内容，你也可以根据自己的实际需求和项目要求进行针对性的学习和应用。</p>\n<p>另外，建议你在学习 JavaScript 时也同时学习一个前端框架，比如 React、Vue、Angular 等，这样可以让你更快地应用和巩固所学的知识，并且提高开发效率和质量。</p>\n<p>一边学习框架的意识是啥,我该怎么做</p>\n<p>学习框架的意识是指在学习框架时，不仅要学习框架本身的语法和特性，还要理解框架的设计思想和使用场景。这样可以更好地理解和应用框架，同时也可以提高自己的代码质量和开发效率。</p>\n<p>下面是一些建议，可以帮助你在学习框架时培养框架意识：</p>\n<p>理解框架的设计思想和哲学<br>每个框架都有自己的设计思想和哲学，比如 React 的组件化、Vue 的响应式数据绑定等。了解这些设计思想可以帮助你更好地理解框架的用法和优点。</p>\n<p>学习框架的核心概念和特性<br>学习框架时，要重点掌握框架的核心概念和特性，比如 React 的虚拟 DOM、Vue 的生命周期等。这些概念和特性是框架的基础，也是后续学习和应用的基础。</p>\n<p>理解框架的使用场景和限制<br>框架并不是万能的，它们各有适用的场景和限制。比如 React 更适用于大型应用的组件化开发，而 Vue 更适用于快速开发小型应用。了解这些使用场景和限制可以帮助你更好地选择和应用框架。</p>\n<p>学习框架的周边生态和工具<br>每个框架都有自己的周边生态和工具，比如 React 的 React Router、Redux，Vue 的 Vuex、Vue Router 等。学习这些周边生态和工具可以帮助你更好地使用框架，同时也可以拓展自己的技能栈。</p>\n<p>阅读框架的源代码和文档<br>阅读框架的源代码和文档可以帮助你更深入地了解框架的实现和用法。特别是在遇到问题时，阅读源代码和文档可以帮助你更快地找到解决方案。</p>\n<p>总之，学习框架不仅是学习语法和特性，更是一种开发思维和方法论的培养。希望以上建议能够对你有所帮助。</p>\n<p>你能介绍一些常用的框架吗？</p>\n<p>当今前端开发中，有很多优秀的框架供我们选择。以下是一些常用的框架：</p>\n<p>React：由 Facebook 推出的一款组件化 UI 框架，主要用于构建大型单页面应用，具有高度的灵活性和可重用性。</p>\n<p>Vue：一个渐进式的 JavaScript 框架，易于上手，具有响应式数据绑定和组件化等特性，适合用于中小型项目的开发。</p>\n<p>Angular：由 Google 推出的一款全面的前端框架，具有强大的工具链和生态系统，适合用于大型应用的开发。</p>\n<p>jQuery：一款轻量级的 JavaScript 库，主要用于 DOM 操作和事件处理等，适合用于快速开发和简单项目的实现。</p>\n<p>Bootstrap：一个流行的前端框架，包含了 HTML、CSS 和 JavaScript 组件，提供了快速开发网站的工具和模板。</p>\n<p>Express：一个基于 Node.js 平台的 Web 应用程序框架，具有简单、灵活、高效等特点，适用于快速构建 Web 应用程序和 API。</p>\n<p>除了以上的框架，还有很多其他的优秀框架，比如 Ember.js、Backbone.js、Svelte 等。选择框架时，需要根据实际项目的需求、团队的技术水平和个人的喜好等因素进行综合考虑。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<p>当然可以，以下是中文版的 React 文档链接：</p>\n<p>学习 JavaScript 基础知识</p>\n<p>可以参考 MDN 的 JavaScript 文档：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a><br>学习 React 基础知识</p>\n<p>可以参考 React 官方文档：<a href=\"https://zh-hans.reactjs.org/docs/getting-started.html\">https://zh-hans.reactjs.org/docs/getting-started.html</a><br>学习 React 中的状态管理和数据流</p>\n<p>可以参考 React Hooks 官方文档：<a href=\"https://zh-hans.reactjs.org/docs/hooks-intro.html\">https://zh-hans.reactjs.org/docs/hooks-intro.html</a> 和 Redux 中文文档：<a href=\"https://www.redux.org.cn/\">https://www.redux.org.cn/</a><br>学习 React 中的路由和导航</p>\n<p>可以参考 React Router 官方文档：<a href=\"https://reactrouter.com/web/guides/quick-start\">https://reactrouter.com/web/guides/quick-start</a><br>学习 React 中的样式和布局</p>\n<p>可以参考 Styled Components 官方文档：<a href=\"https://styled-components.com/docs\">https://styled-components.com/docs</a><br>学习 React 中的测试和调试</p>\n<p>可以参考 Jest 官方文档：<a href=\"https://jestjs.io/docs/getting-started\">https://jestjs.io/docs/getting-started</a> 和 React Testing Library 官方文档：<a href=\"https://testing-library.com/docs/react-testing-library/intro/\">https://testing-library.com/docs/react-testing-library/intro/</a><br>学习 React 中的性能优化和最佳实践</p>\n<p>可以参考 React 官方文档的性能优化章节：<a href=\"https://zh-hans.reactjs.org/docs/optimizing-performance.html\">https://zh-hans.reactjs.org/docs/optimizing-performance.html</a><br>希望这些中文文档链接能对你有所帮助。</p>\n<p>我还有一本js的红宝书但是我不知道就是我具体要学习里面的那些内容,我是想做开发的</p>\n<p>《JavaScript高级程序设计（红宝书）》是一本经典的 JavaScript 学习教材，涵盖了 JavaScript 的核心概念和高级特性。如果你想成为一名开发者，掌握 JavaScript 是必不可少的。</p>\n<p>以下是建议的学习顺序和重点：</p>\n<p>基本语法和数据类型<br>了解 JavaScript 的基本语法和数据类型，包括变量、数据类型、运算符、控制语句等。</p>\n<p>函数和作用域<br>学习 JavaScript 的函数和作用域，包括函数声明和表达式、闭包、this、作用域链等。</p>\n<p>对象和面向对象编程<br>学习 JavaScript 的对象和面向对象编程，包括对象字面量、构造函数、原型和原型链、继承等。</p>\n<p>异步编程和事件处理<br>学习 JavaScript 的异步编程和事件处理，包括回调函数、Promise、async/await、事件处理器等。</p>\n<p>DOM 和浏览器编程<br>学习 JavaScript 对 DOM 的操作和浏览器编程，包括文档对象模型、事件处理器、表单验证等。</p>\n<p>Ajax 和跨域请求<br>学习 JavaScript 的 Ajax 和跨域请求，包括XMLHttpRequest对象、fetch API、JSONP、CORS等。</p>\n<p>ES6 和新特性<br>学习 JavaScript 的 ES6 和新特性，包括箭头函数、模板字面量、解构赋值、let/const、class、模块化等。</p>\n<p>除了以上的内容，你也可以根据自己的实际需求和项目要求进行针对性的学习和应用。</p>\n<p>另外，建议你在学习 JavaScript 时也同时学习一个前端框架，比如 React、Vue、Angular 等，这样可以让你更快地应用和巩固所学的知识，并且提高开发效率和质量。</p>\n<p>一边学习框架的意识是啥,我该怎么做</p>\n<p>学习框架的意识是指在学习框架时，不仅要学习框架本身的语法和特性，还要理解框架的设计思想和使用场景。这样可以更好地理解和应用框架，同时也可以提高自己的代码质量和开发效率。</p>\n<p>下面是一些建议，可以帮助你在学习框架时培养框架意识：</p>\n<p>理解框架的设计思想和哲学<br>每个框架都有自己的设计思想和哲学，比如 React 的组件化、Vue 的响应式数据绑定等。了解这些设计思想可以帮助你更好地理解框架的用法和优点。</p>\n<p>学习框架的核心概念和特性<br>学习框架时，要重点掌握框架的核心概念和特性，比如 React 的虚拟 DOM、Vue 的生命周期等。这些概念和特性是框架的基础，也是后续学习和应用的基础。</p>\n<p>理解框架的使用场景和限制<br>框架并不是万能的，它们各有适用的场景和限制。比如 React 更适用于大型应用的组件化开发，而 Vue 更适用于快速开发小型应用。了解这些使用场景和限制可以帮助你更好地选择和应用框架。</p>\n<p>学习框架的周边生态和工具<br>每个框架都有自己的周边生态和工具，比如 React 的 React Router、Redux，Vue 的 Vuex、Vue Router 等。学习这些周边生态和工具可以帮助你更好地使用框架，同时也可以拓展自己的技能栈。</p>\n<p>阅读框架的源代码和文档<br>阅读框架的源代码和文档可以帮助你更深入地了解框架的实现和用法。特别是在遇到问题时，阅读源代码和文档可以帮助你更快地找到解决方案。</p>\n<p>总之，学习框架不仅是学习语法和特性，更是一种开发思维和方法论的培养。希望以上建议能够对你有所帮助。</p>\n<p>你能介绍一些常用的框架吗？</p>\n<p>当今前端开发中，有很多优秀的框架供我们选择。以下是一些常用的框架：</p>\n<p>React：由 Facebook 推出的一款组件化 UI 框架，主要用于构建大型单页面应用，具有高度的灵活性和可重用性。</p>\n<p>Vue：一个渐进式的 JavaScript 框架，易于上手，具有响应式数据绑定和组件化等特性，适合用于中小型项目的开发。</p>\n<p>Angular：由 Google 推出的一款全面的前端框架，具有强大的工具链和生态系统，适合用于大型应用的开发。</p>\n<p>jQuery：一款轻量级的 JavaScript 库，主要用于 DOM 操作和事件处理等，适合用于快速开发和简单项目的实现。</p>\n<p>Bootstrap：一个流行的前端框架，包含了 HTML、CSS 和 JavaScript 组件，提供了快速开发网站的工具和模板。</p>\n<p>Express：一个基于 Node.js 平台的 Web 应用程序框架，具有简单、灵活、高效等特点，适用于快速构建 Web 应用程序和 API。</p>\n<p>除了以上的框架，还有很多其他的优秀框架，比如 Ember.js、Backbone.js、Svelte 等。选择框架时，需要根据实际项目的需求、团队的技术水平和个人的喜好等因素进行综合考虑。</p>\n"},{"title":"RecoderDemo","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-10-25T03:13:26.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"\n ```python\nimport sys\nimport queue\nimport threading\nimport time\nimport os\nimport cv2\nfrom PyQt5 import QtWidgets, QtGui, QtCore\n\n\n# 总结,进度条点击事件实现了,但是对应的视频跳转还没有实现\n# 视频图像的大小也不能随窗口变化而变化\n# 倍速的话倒是简单实现,但是整体的倍速实现是依靠time.sleep实现的,还是稍微有点事件延长\n#整体实现就是依靠cv2里面的一些线程处理,然后跳出内嵌循环实现视频列表和inddex的变化,外部的话就是self.currentindex变化\n# Create a video buffer queue\nvideo_queue = queue.Queue(10)\nfps = 30\nframe_delay = 0.25 / fps\n# 这个类是实现在进度条点击就跳转到点击位置\nclass SliderCustom(QtWidgets.QSlider):\n    def mousePressEvent(self, event):\n        if event.button() == QtCore.Qt.LeftButton and not self.isSliderDown():\n            opt = QtWidgets.QStyleOptionSlider()\n            self.initStyleOption(opt)\n            sliderRect = self.style().subControlRect(\n                QtWidgets.QStyle.CC_Slider, opt,\n                QtWidgets.QStyle.SC_SliderHandle, self)\n            if event.pos() not in sliderRect:\n                # the mouse is not over the handle, let's move it; this is based\n                # on the original C++ code that moves the handle when the\n                # \"absolute button\" is pressed\n                grooveRect = self.style().subControlRect(\n                    QtWidgets.QStyle.CC_Slider, opt,\n                    QtWidgets.QStyle.SC_SliderGroove, self)\n                center = sliderRect.center() - sliderRect.topLeft()\n                pos = event.pos() - center\n                if self.orientation() == QtCore.Qt.Horizontal:\n                    sliderLength = sliderRect.width()\n                    sliderMin = grooveRect.x()\n                    sliderMax = grooveRect.right() - sliderLength + 1\n                    pos = pos.x()\n                else:\n                    sliderLength = sliderRect.height()\n                    sliderMin = grooveRect.y()\n                    sliderMax = grooveRect.bottom() - sliderLength + 1\n                    pos = pos.y()\n                value = self.style().sliderValueFromPosition(\n                    self.minimum(), self.maximum(), pos - sliderMin,\n                    sliderMax - sliderMin, opt.upsideDown\n                )\n                self.setSliderPosition(value)\n        super().mousePressEvent(event)\nclass VideoPlayer(QtWidgets.QWidget):\n    def __init__(self):\n        super(VideoPlayer, self).__init__()\n        self.cleaned_files = None\n        self.opened_files = []\n        self.file_contents = None\n        self.file_path = None\n        self.file_name = None\n        self.script_dir = None\n        self.paused = False\n        self.playing = False\n        self.current_file_index = 0  # 当前播放的文件索引\n        self.index_next_event = threading.Event()\n        self.index_forward_event = threading.Event()\n        self.index_click_event = threading.Event()\n        self.pause_event = threading.Event()\n        self.stop_event = threading.Event()\n        self.lock = threading.Lock()# 线程锁\n        self.initUI()\n\n    def initUI(self):\n        # ... (原始初始化代码)\n        self.setWindowTitle(\"Video Player\")\n        self.setGeometry(100, 100, 2000, 900)\n\n        # Create a QHBoxLayout for the main layout\n        self.mainlayout = QtWidgets.QHBoxLayout()\n\n        # Create a QVBoxLayout for the left side (you can adjust the proportions as needed)\n        self.leftlayout = QtWidgets.QVBoxLayout()\n        self.leftlayout.addWidget(QtWidgets.QLabel(\"Left Side Content\"))  # Add any content you want on the left\n\n        # Create a QVBoxLayout for the right side\n        self.rightlayout = QtWidgets.QVBoxLayout()\n\n        self.videoLabel = QtWidgets.QLabel(self)\n        self.videoLabel.setScaledContents(True)\n        self.videoLabel.setStyleSheet(\"background-color: black;\")\n        self.rightlayout.addWidget(self.videoLabel)\n\n        # Create a QHBoxLayout for the buttons and progress bar\n        buttonbox = QtWidgets.QHBoxLayout()\n\n        # Create start and stop buttons\n        # Create a \"Next\" button\n        self.forwardButton = QtWidgets.QPushButton(\"Forward\", self)\n        self.forwardButton.clicked.connect(self.forward_video)\n        self.nextButton = QtWidgets.QPushButton(\"Next\", self)\n        self.nextButton.clicked.connect(self.play_next_video)\n        self.startButton = QtWidgets.QPushButton(\"Start\", self)\n        self.stopButton = QtWidgets.QPushButton(\"Stop\", self)\n        self.startButton.clicked.connect(self.start_video)\n        self.stopButton.clicked.connect(self.stop_video)\n\n        # Create a QSlider for the progress bar\n        self.progressBar = SliderCustom(QtCore.Qt.Horizontal)\n        self.progressBar.setRange(0, 100)\n        self.progressBar.setValue(0)\n\n        # Add the buttons and progress bar to the buttonbox\n        self.playPauseButton = QtWidgets.QPushButton(\"Play/Pause\", self)\n        self.playPauseButton.clicked.connect(self.toggle_play_pause)\n\n        buttonbox.addWidget(self.startButton)\n        buttonbox.addWidget(self.stopButton)\n        buttonbox.addWidget(self.playPauseButton)\n        buttonbox.addWidget(self.forwardButton)\n        buttonbox.addWidget(self.nextButton)\n        buttonbox.addWidget(self.progressBar)\n\n        # Add the buttonbox to the right layout\n        self.rightlayout.addLayout(buttonbox)\n\n        # Create an \"Open File\" button\n        self.openFileButton = QtWidgets.QPushButton(\"Open File\")\n        self.openFileButton.clicked.connect(self.open_file_dialog)\n        self.leftlayout.addWidget(self.openFileButton)\n\n        # Create a QListWidget to display opened files\n        self.fileListWidget = QtWidgets.QListWidget()\n        self.leftlayout.addWidget(self.fileListWidget)\n\n        # Add the left and right layouts to the main layout\n        self.mainlayout.addLayout(self.leftlayout, 1)\n        self.mainlayout.addLayout(self.rightlayout, 7)\n\n        # Set the main layout for the widget\n        self.setLayout(self.mainlayout)\n        # open \"PathList.txt\" in self.opened_files\n        self.script_dir = os.path.dirname(__file__)\n        self.file_name = \"PathList.txt\"\n        self.file_path = os.path.join(self.script_dir, self.file_name)\n        if not os.path.exists(self.file_path):\n            with open(self.file_path, 'w'):\n                pass\n        with open(self.file_path, 'r') as file:\n            self.file_contents = file.read().splitlines()\n        self.cleaned_files = [file.strip('\"') for file in self.file_contents]\n        self.opened_files.extend(self.cleaned_files)\n        self.update_file_list(self.opened_files)\n        self.fileListWidget.itemClicked.connect(self.handle_file_click)\n\n        # Connect closeEvent to custom slot\n        self.closeEvent = self.on_close\n\n    def start_video(self):\n        if video_queue.empty():\n            self.video_thread = threading.Thread(target=self.add_video_to_queue)\n            self.video_thread.daemon = True\n            self.video_thread.start()\n\n            self.play_thread = threading.Thread(target=self.play_video_from_queue)\n            self.play_thread.daemon = True\n            self.play_thread.start()\n\n    def play_next_video(self):\n        self.index_next_event.set()\n\n    def forward_video(self):\n        self.index_forward_event.set()\n    def handle_file_click(self, item):\n        file_index = self.fileListWidget.currentRow()\n        # 这里是从零开始的\n        # Pause video processing thread\n        self.pause_event.set()\n        while not video_queue.empty():\n            video_queue.get()\n        with self.lock:\n            self.current_file_index = file_index\n        self.index_click_event.set()\n        # Resume video processing thread\n        self.pause_event.clear()\n\n\n    def stop_video(self):\n        self.stop_event.set()\n        if hasattr(self, 'video_thread') and self.video_thread.is_alive():\n            self.video_thread.join()\n        if hasattr(self, 'play_thread') and self.play_thread.is_alive():\n            self.play_thread.join()\n        cv2.destroyAllWindows()\n        QtWidgets.QApplication.quit()\n        sys.exit(app.exec_())\n         # Gracefully exit the application\n\n    def add_video_to_queue(self):\n        i = 0\n        index = self.current_file_index\n        if index < 0:\n            index = 0\n        else:\n            if index + 1 > len(self.opened_files):\n                index = len(self.opened_files) - 1\n        video_files = self.opened_files[index:]\n\n        while index < len(video_files) and not self.stop_event.is_set():\n            if self.pause_event.is_set():\n                time.sleep(0.1)\n                continue\n            # if self.stop_event.is_set():\n            #     print('退出')\n            #     break\n\n            i += 1\n            print(i)\n            video_file = video_files[index]\n            cap = cv2.VideoCapture(video_file)\n            total_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)\n            current_frame = 0\n\n            while not self.stop_event.is_set():\n                try:\n                    if self.playing:\n                        time.sleep(0.1)\n                        continue\n                    if self.index_next_event.is_set():\n                        self.index_next_event.clear()\n                        break\n                    if self.index_click_event.is_set():\n                        self.index_click_event.clear()\n                        index = self.current_file_index - 1\n\n                        break\n                    if self.index_forward_event.is_set():\n                        self.index_forward_event.clear()\n                        index -= 2\n                        if index < -1:\n                            index = len(video_files) - 2\n                        break\n\n                    ret, frame = cap.read()\n                except:\n                    continue\n                if not ret:\n                    break\n                video_queue.put(frame)\n                current_frame += 1\n                progress = int((current_frame / total_frames) * 100)\n                self.update_progress(progress)\n\n                if video_queue.full():\n                    time.sleep(frame_delay)\n            # 点击事件以后就开始,在这里开始\n            if index == len(self.opened_files) - 1:\n                index = 0\n            else:\n                index += 1\n            cap.release()\n\n\n\n    def play_video_from_queue(self):\n        t1 = time.perf_counter()\n        while not self.stop_event.is_set():\n            if self.playing:\n                time.sleep(0.1)\n                continue\n            if self.pause_event.is_set():\n                time.sleep(0.1)\n                continue\n            # if self.stop_event.is_set():\n            #     break\n            frame = video_queue.get()\n            imS = cv2.resize(frame, (700, 500))\n            imS = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n            qimg = QtGui.QImage(imS.data, imS.shape[1], imS.shape[0], QtGui.QImage.Format_RGB888)\n            pixmap = QtGui.QPixmap.fromImage(qimg)\n            self.videoLabel.setPixmap(pixmap)\n            if self.current_file_index == len(self.opened_files) - 1:\n                self.current_file_index = 0\n\n            time.sleep(frame_delay)\n    #进度条函数\n    def update_progress(self, progress):\n        self.progressBar.setValue(progress)\n    #open_file_button\n    def open_file_dialog(self):\n        file_dialog = QtWidgets.QFileDialog(self)\n        file_dialog.setNameFilter(\"Video files (*.mp4 *.avi *.mkv)\")\n        file_dialog.setFileMode(QtWidgets.QFileDialog.ExistingFiles)\n        if file_dialog.exec_():\n            selected_files = file_dialog.selectedFiles()\n            self.opened_files.extend(selected_files)\n            # 添加选择的视频文件\n            self.update_file_list(selected_files)\n            # 添加进去左边的列表里面\n    #button_play_pause\n    def toggle_play_pause(self):\n        if self.playing:\n            self.playing = False\n        else:\n            self.playing = True\n    #add_path to fileList\n    def update_file_list(self, files):\n        for file in files:\n            item = QtWidgets.QListWidgetItem(file)\n            self.fileListWidget.addItem(item)\n    # xx close button\n    def on_close(self, event):\n\n        self.stop_video()\n\n\nif __name__ == \"__main__\":\n    app = QtWidgets.QApplication(sys.argv)\n    player = VideoPlayer()\n    player.show()\n    sys.exit(app.exec_())\n\n```\n\n```angular2html\n# -*- coding: utf-8 -*-\nimport platform\nimport os\nimport sys\nimport cv2\nimport time\n\nfrom PyQt5 import QtWidgets, QtGui, QtCore\nimport vlc\nimport queue\nimport cv2\n\nvideo_queue = queue.Queue(10)\nfps = 30  # 正常视频的帧率，这里假设为30帧/秒\nframe_delay = 1 / fps  # 计算每帧之间的延迟时间\nt1 = 0\nt2 = 0\nclass Player(QtWidgets.QMainWindow):\n    def __init__(self, master=None):\n        QtWidgets.QMainWindow.__init__(self, master)\n        self.setWindowTitle(\"Media Player\")\n\n        self.instance = vlc.Instance()\n        self.media = None\n        self.mediaplayer = self.instance.media_player_new()\n\n\n        self.create_ui()\n        self.is_paused = False\n        self.playlist = []   # 存储播放列表中的多个文件\n        self.current_media_index = 0  # 跟踪当前播放的文件索引\n\n        # self.playlist2 = self.instance.media_list_new()\n        # self.media_player = self.instance.media_list_player_new()\n        # self.media1 = self.instance.media_new_path(\"D:\\wolf1.mp4\")\n        # self.playlist2.add_media(self.media1)\n        # self.media2 = self.instance.media_new_path(\"D:\\wolf2.mp4\")\n        # self.playlist2.add_media(self.media1)\n        # self.media_player.set_media_list(self.playlist2)\n        # self.media_player.play()\n        # time.sleep(5)\n\n    def create_ui(self):\n        self.widget = QtWidgets.QWidget(self)\n        # widget videoframe positionslider hbuttonbox\n        # hbuttonbox vboxlayout\n        self.setCentralWidget(self.widget)\n\n        if platform.system() == \"Darwin\":\n            self.videoframe = QtWidgets.QMacCocoaViewContainer(0)\n        else:\n            self.videoframe = QtWidgets.QFrame()\n\n        self.palette = self.videoframe.palette()\n        self.palette.setColor(QtGui.QPalette.Window, QtGui.QColor(0, 0, 0))\n        self.videoframe.setPalette(self.palette)\n        self.videoframe.setAutoFillBackground(True)\n        self.videoframe.setGeometry(0, 0, self.width(), self.height())\n\n        self.positionslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)\n        self.positionslider.setToolTip(\"Position\")\n        self.positionslider.setMaximum(1000)\n        self.positionslider.sliderMoved.connect(self.set_position)\n        self.positionslider.sliderPressed.connect(self.set_position)\n        # 创建视频文件列表\n        self.video_list_widget = QtWidgets.QListWidget()\n        self.video_list_widget.itemClicked.connect(self.play_selected_video)  # 连接列表项点击事件\n        self.vboxlayoutleft = QtWidgets.QVBoxLayout()\n        self.vboxlayoutleft.addWidget(self.video_list_widget)\n\n        self.hbuttonbox = QtWidgets.QHBoxLayout()\n        self.playbutton = QtWidgets.QPushButton(\"Play\")\n        self.hbuttonbox.addWidget(self.playbutton)\n        self.playbutton.clicked.connect(self.play_pause)\n\n        self.stopbutton = QtWidgets.QPushButton(\"Stop\")\n        self.hbuttonbox.addWidget(self.stopbutton)\n        self.stopbutton.clicked.connect(self.stop)\n\n        self.hbuttonbox.addStretch(1)\n        self.volumeslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)\n        self.volumeslider.setMaximum(100)\n        self.volumeslider.setValue(self.mediaplayer.audio_get_volume())\n        self.volumeslider.setToolTip(\"Volume\")\n        self.hbuttonbox.addWidget(self.volumeslider)\n        self.volumeslider.valueChanged.connect(self.set_volume)\n\n        self.vboxlayout = QtWidgets.QVBoxLayout()\n        self.vboxlayout.addWidget(self.videoframe)\n        self.vboxlayout.addWidget(self.positionslider)\n        self.vboxlayout.addLayout(self.hbuttonbox)\n\n        # self.widget.setLayout(self.vboxlayout)\n        # 将视频输出窗口设置为 videoframe\n        self.mediaplayer.set_hwnd(self.videoframe.winId())\n\n        # 将视频文件列表布局添加到主布局中的左侧\n        self.hboxlayout = QtWidgets.QHBoxLayout()\n        self.hboxlayout.addLayout(self.vboxlayoutleft,1)\n        self.hboxlayout.addLayout(self.vboxlayout,2)\n        self.widget.setLayout(self.hboxlayout)\n\n        menu_bar = self.menuBar()\n\n        file_menu = menu_bar.addMenu(\"File\")\n\n        open_action = QtWidgets.QAction(\"Load Video\", self)\n        close_action = QtWidgets.QAction(\"Close App\", self)\n        file_menu.addAction(open_action)\n        file_menu.addAction(close_action)\n\n        open_action.triggered.connect(self.open_file)\n        close_action.triggered.connect(sys.exit)\n\n        self.timer = QtCore.QTimer(self)\n        self.timer.setInterval(100)\n        self.timer.timeout.connect(self.update_ui)\n\n    # 创建函数来处理视频播放列表点击事件\n    def play_selected_video(self, item):\n        selected_index = self.video_list_widget.indexFromItem(item).row()\n        if 0 <= selected_index < len(self.playlist):\n            self.play_media(selected_index)\n    def play_pause(self):\n        if self.mediaplayer.is_playing():\n            self.mediaplayer.pause()\n            self.playbutton.setText(\"Play\")\n            self.is_paused = True\n            self.timer.stop()\n        else:\n            if self.mediaplayer.play() == -1:\n                self.open_file()\n                return\n\n            self.mediaplayer.play()\n            self.playbutton.setText(\"Pause\")\n            self.timer.start()\n            self.is_paused = False\n\n    def stop(self):\n        self.mediaplayer.stop()\n        self.playbutton.setText(\"Play\")\n\n    def open_file(self):\n        dialog_txt = \"Choose Media Files\"\n        filenames, _ = QtWidgets.QFileDialog.getOpenFileNames(self, dialog_txt, os.path.expanduser('~'))\n        if not filenames:\n            return\n        self.playlist.extend(filenames)\n        if not self.media:\n            self.play_media(0)\n            t1 = time.perf_counter()\n\n            # 获取主窗口的位置和大小\n        main_window_rect = self.geometry()\n\n        # 设置视频窗口的位置和大小\n        self.videoframe.setGeometry(main_window_rect.x(), main_window_rect.y(), main_window_rect.width(),\n                                    main_window_rect.height())\n\n    def play_media(self, index):\n        if index < len(self.playlist):\n            self.current_media_index = index\n            filename = self.playlist[index]\n            self.media = self.instance.media_new(filename)\n            self.mediaplayer.set_media(self.media)\n            self.media.parse()\n            self.setWindowTitle(self.media.get_meta(0))\n            self.play_pause()\n\n    def set_volume(self, volume):\n        self.mediaplayer.audio_set_volume(volume)\n\n    def set_position(self):\n        self.timer.stop()\n        pos = self.positionslider.value()\n        self.mediaplayer.set_position(pos / 1000.0)\n        self.timer.start()\n\n    def update_ui(self):\n        media_pos = int(self.mediaplayer.get_position() * 1000)\n        self.positionslider.setValue(media_pos)\n        if not self.mediaplayer.is_playing() and not self.is_paused:\n            if self.current_media_index < len(self.playlist) - 1:\n                self.play_media(self.current_media_index + 1)\n            else:\n                self.timer.stop()\n                self.stop()\n\ndef main():\n    app = QtWidgets.QApplication(sys.argv)\n    player = Player()\n    player.show()\n    player.resize(640, 480)\n\n    print('程序运行时间:%s毫秒' % ((t2 - t1)))\n    sys.exit(app.exec_())\n\nif __name__ == \"__main__\":\n    main()\n\n\n```\n","source":"_posts/RecoderDemo.md","raw":"---\ntitle: RecoderDemo\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-10-25 11:13:26\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n\n ```python\nimport sys\nimport queue\nimport threading\nimport time\nimport os\nimport cv2\nfrom PyQt5 import QtWidgets, QtGui, QtCore\n\n\n# 总结,进度条点击事件实现了,但是对应的视频跳转还没有实现\n# 视频图像的大小也不能随窗口变化而变化\n# 倍速的话倒是简单实现,但是整体的倍速实现是依靠time.sleep实现的,还是稍微有点事件延长\n#整体实现就是依靠cv2里面的一些线程处理,然后跳出内嵌循环实现视频列表和inddex的变化,外部的话就是self.currentindex变化\n# Create a video buffer queue\nvideo_queue = queue.Queue(10)\nfps = 30\nframe_delay = 0.25 / fps\n# 这个类是实现在进度条点击就跳转到点击位置\nclass SliderCustom(QtWidgets.QSlider):\n    def mousePressEvent(self, event):\n        if event.button() == QtCore.Qt.LeftButton and not self.isSliderDown():\n            opt = QtWidgets.QStyleOptionSlider()\n            self.initStyleOption(opt)\n            sliderRect = self.style().subControlRect(\n                QtWidgets.QStyle.CC_Slider, opt,\n                QtWidgets.QStyle.SC_SliderHandle, self)\n            if event.pos() not in sliderRect:\n                # the mouse is not over the handle, let's move it; this is based\n                # on the original C++ code that moves the handle when the\n                # \"absolute button\" is pressed\n                grooveRect = self.style().subControlRect(\n                    QtWidgets.QStyle.CC_Slider, opt,\n                    QtWidgets.QStyle.SC_SliderGroove, self)\n                center = sliderRect.center() - sliderRect.topLeft()\n                pos = event.pos() - center\n                if self.orientation() == QtCore.Qt.Horizontal:\n                    sliderLength = sliderRect.width()\n                    sliderMin = grooveRect.x()\n                    sliderMax = grooveRect.right() - sliderLength + 1\n                    pos = pos.x()\n                else:\n                    sliderLength = sliderRect.height()\n                    sliderMin = grooveRect.y()\n                    sliderMax = grooveRect.bottom() - sliderLength + 1\n                    pos = pos.y()\n                value = self.style().sliderValueFromPosition(\n                    self.minimum(), self.maximum(), pos - sliderMin,\n                    sliderMax - sliderMin, opt.upsideDown\n                )\n                self.setSliderPosition(value)\n        super().mousePressEvent(event)\nclass VideoPlayer(QtWidgets.QWidget):\n    def __init__(self):\n        super(VideoPlayer, self).__init__()\n        self.cleaned_files = None\n        self.opened_files = []\n        self.file_contents = None\n        self.file_path = None\n        self.file_name = None\n        self.script_dir = None\n        self.paused = False\n        self.playing = False\n        self.current_file_index = 0  # 当前播放的文件索引\n        self.index_next_event = threading.Event()\n        self.index_forward_event = threading.Event()\n        self.index_click_event = threading.Event()\n        self.pause_event = threading.Event()\n        self.stop_event = threading.Event()\n        self.lock = threading.Lock()# 线程锁\n        self.initUI()\n\n    def initUI(self):\n        # ... (原始初始化代码)\n        self.setWindowTitle(\"Video Player\")\n        self.setGeometry(100, 100, 2000, 900)\n\n        # Create a QHBoxLayout for the main layout\n        self.mainlayout = QtWidgets.QHBoxLayout()\n\n        # Create a QVBoxLayout for the left side (you can adjust the proportions as needed)\n        self.leftlayout = QtWidgets.QVBoxLayout()\n        self.leftlayout.addWidget(QtWidgets.QLabel(\"Left Side Content\"))  # Add any content you want on the left\n\n        # Create a QVBoxLayout for the right side\n        self.rightlayout = QtWidgets.QVBoxLayout()\n\n        self.videoLabel = QtWidgets.QLabel(self)\n        self.videoLabel.setScaledContents(True)\n        self.videoLabel.setStyleSheet(\"background-color: black;\")\n        self.rightlayout.addWidget(self.videoLabel)\n\n        # Create a QHBoxLayout for the buttons and progress bar\n        buttonbox = QtWidgets.QHBoxLayout()\n\n        # Create start and stop buttons\n        # Create a \"Next\" button\n        self.forwardButton = QtWidgets.QPushButton(\"Forward\", self)\n        self.forwardButton.clicked.connect(self.forward_video)\n        self.nextButton = QtWidgets.QPushButton(\"Next\", self)\n        self.nextButton.clicked.connect(self.play_next_video)\n        self.startButton = QtWidgets.QPushButton(\"Start\", self)\n        self.stopButton = QtWidgets.QPushButton(\"Stop\", self)\n        self.startButton.clicked.connect(self.start_video)\n        self.stopButton.clicked.connect(self.stop_video)\n\n        # Create a QSlider for the progress bar\n        self.progressBar = SliderCustom(QtCore.Qt.Horizontal)\n        self.progressBar.setRange(0, 100)\n        self.progressBar.setValue(0)\n\n        # Add the buttons and progress bar to the buttonbox\n        self.playPauseButton = QtWidgets.QPushButton(\"Play/Pause\", self)\n        self.playPauseButton.clicked.connect(self.toggle_play_pause)\n\n        buttonbox.addWidget(self.startButton)\n        buttonbox.addWidget(self.stopButton)\n        buttonbox.addWidget(self.playPauseButton)\n        buttonbox.addWidget(self.forwardButton)\n        buttonbox.addWidget(self.nextButton)\n        buttonbox.addWidget(self.progressBar)\n\n        # Add the buttonbox to the right layout\n        self.rightlayout.addLayout(buttonbox)\n\n        # Create an \"Open File\" button\n        self.openFileButton = QtWidgets.QPushButton(\"Open File\")\n        self.openFileButton.clicked.connect(self.open_file_dialog)\n        self.leftlayout.addWidget(self.openFileButton)\n\n        # Create a QListWidget to display opened files\n        self.fileListWidget = QtWidgets.QListWidget()\n        self.leftlayout.addWidget(self.fileListWidget)\n\n        # Add the left and right layouts to the main layout\n        self.mainlayout.addLayout(self.leftlayout, 1)\n        self.mainlayout.addLayout(self.rightlayout, 7)\n\n        # Set the main layout for the widget\n        self.setLayout(self.mainlayout)\n        # open \"PathList.txt\" in self.opened_files\n        self.script_dir = os.path.dirname(__file__)\n        self.file_name = \"PathList.txt\"\n        self.file_path = os.path.join(self.script_dir, self.file_name)\n        if not os.path.exists(self.file_path):\n            with open(self.file_path, 'w'):\n                pass\n        with open(self.file_path, 'r') as file:\n            self.file_contents = file.read().splitlines()\n        self.cleaned_files = [file.strip('\"') for file in self.file_contents]\n        self.opened_files.extend(self.cleaned_files)\n        self.update_file_list(self.opened_files)\n        self.fileListWidget.itemClicked.connect(self.handle_file_click)\n\n        # Connect closeEvent to custom slot\n        self.closeEvent = self.on_close\n\n    def start_video(self):\n        if video_queue.empty():\n            self.video_thread = threading.Thread(target=self.add_video_to_queue)\n            self.video_thread.daemon = True\n            self.video_thread.start()\n\n            self.play_thread = threading.Thread(target=self.play_video_from_queue)\n            self.play_thread.daemon = True\n            self.play_thread.start()\n\n    def play_next_video(self):\n        self.index_next_event.set()\n\n    def forward_video(self):\n        self.index_forward_event.set()\n    def handle_file_click(self, item):\n        file_index = self.fileListWidget.currentRow()\n        # 这里是从零开始的\n        # Pause video processing thread\n        self.pause_event.set()\n        while not video_queue.empty():\n            video_queue.get()\n        with self.lock:\n            self.current_file_index = file_index\n        self.index_click_event.set()\n        # Resume video processing thread\n        self.pause_event.clear()\n\n\n    def stop_video(self):\n        self.stop_event.set()\n        if hasattr(self, 'video_thread') and self.video_thread.is_alive():\n            self.video_thread.join()\n        if hasattr(self, 'play_thread') and self.play_thread.is_alive():\n            self.play_thread.join()\n        cv2.destroyAllWindows()\n        QtWidgets.QApplication.quit()\n        sys.exit(app.exec_())\n         # Gracefully exit the application\n\n    def add_video_to_queue(self):\n        i = 0\n        index = self.current_file_index\n        if index < 0:\n            index = 0\n        else:\n            if index + 1 > len(self.opened_files):\n                index = len(self.opened_files) - 1\n        video_files = self.opened_files[index:]\n\n        while index < len(video_files) and not self.stop_event.is_set():\n            if self.pause_event.is_set():\n                time.sleep(0.1)\n                continue\n            # if self.stop_event.is_set():\n            #     print('退出')\n            #     break\n\n            i += 1\n            print(i)\n            video_file = video_files[index]\n            cap = cv2.VideoCapture(video_file)\n            total_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)\n            current_frame = 0\n\n            while not self.stop_event.is_set():\n                try:\n                    if self.playing:\n                        time.sleep(0.1)\n                        continue\n                    if self.index_next_event.is_set():\n                        self.index_next_event.clear()\n                        break\n                    if self.index_click_event.is_set():\n                        self.index_click_event.clear()\n                        index = self.current_file_index - 1\n\n                        break\n                    if self.index_forward_event.is_set():\n                        self.index_forward_event.clear()\n                        index -= 2\n                        if index < -1:\n                            index = len(video_files) - 2\n                        break\n\n                    ret, frame = cap.read()\n                except:\n                    continue\n                if not ret:\n                    break\n                video_queue.put(frame)\n                current_frame += 1\n                progress = int((current_frame / total_frames) * 100)\n                self.update_progress(progress)\n\n                if video_queue.full():\n                    time.sleep(frame_delay)\n            # 点击事件以后就开始,在这里开始\n            if index == len(self.opened_files) - 1:\n                index = 0\n            else:\n                index += 1\n            cap.release()\n\n\n\n    def play_video_from_queue(self):\n        t1 = time.perf_counter()\n        while not self.stop_event.is_set():\n            if self.playing:\n                time.sleep(0.1)\n                continue\n            if self.pause_event.is_set():\n                time.sleep(0.1)\n                continue\n            # if self.stop_event.is_set():\n            #     break\n            frame = video_queue.get()\n            imS = cv2.resize(frame, (700, 500))\n            imS = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\n            qimg = QtGui.QImage(imS.data, imS.shape[1], imS.shape[0], QtGui.QImage.Format_RGB888)\n            pixmap = QtGui.QPixmap.fromImage(qimg)\n            self.videoLabel.setPixmap(pixmap)\n            if self.current_file_index == len(self.opened_files) - 1:\n                self.current_file_index = 0\n\n            time.sleep(frame_delay)\n    #进度条函数\n    def update_progress(self, progress):\n        self.progressBar.setValue(progress)\n    #open_file_button\n    def open_file_dialog(self):\n        file_dialog = QtWidgets.QFileDialog(self)\n        file_dialog.setNameFilter(\"Video files (*.mp4 *.avi *.mkv)\")\n        file_dialog.setFileMode(QtWidgets.QFileDialog.ExistingFiles)\n        if file_dialog.exec_():\n            selected_files = file_dialog.selectedFiles()\n            self.opened_files.extend(selected_files)\n            # 添加选择的视频文件\n            self.update_file_list(selected_files)\n            # 添加进去左边的列表里面\n    #button_play_pause\n    def toggle_play_pause(self):\n        if self.playing:\n            self.playing = False\n        else:\n            self.playing = True\n    #add_path to fileList\n    def update_file_list(self, files):\n        for file in files:\n            item = QtWidgets.QListWidgetItem(file)\n            self.fileListWidget.addItem(item)\n    # xx close button\n    def on_close(self, event):\n\n        self.stop_video()\n\n\nif __name__ == \"__main__\":\n    app = QtWidgets.QApplication(sys.argv)\n    player = VideoPlayer()\n    player.show()\n    sys.exit(app.exec_())\n\n```\n\n```angular2html\n# -*- coding: utf-8 -*-\nimport platform\nimport os\nimport sys\nimport cv2\nimport time\n\nfrom PyQt5 import QtWidgets, QtGui, QtCore\nimport vlc\nimport queue\nimport cv2\n\nvideo_queue = queue.Queue(10)\nfps = 30  # 正常视频的帧率，这里假设为30帧/秒\nframe_delay = 1 / fps  # 计算每帧之间的延迟时间\nt1 = 0\nt2 = 0\nclass Player(QtWidgets.QMainWindow):\n    def __init__(self, master=None):\n        QtWidgets.QMainWindow.__init__(self, master)\n        self.setWindowTitle(\"Media Player\")\n\n        self.instance = vlc.Instance()\n        self.media = None\n        self.mediaplayer = self.instance.media_player_new()\n\n\n        self.create_ui()\n        self.is_paused = False\n        self.playlist = []   # 存储播放列表中的多个文件\n        self.current_media_index = 0  # 跟踪当前播放的文件索引\n\n        # self.playlist2 = self.instance.media_list_new()\n        # self.media_player = self.instance.media_list_player_new()\n        # self.media1 = self.instance.media_new_path(\"D:\\wolf1.mp4\")\n        # self.playlist2.add_media(self.media1)\n        # self.media2 = self.instance.media_new_path(\"D:\\wolf2.mp4\")\n        # self.playlist2.add_media(self.media1)\n        # self.media_player.set_media_list(self.playlist2)\n        # self.media_player.play()\n        # time.sleep(5)\n\n    def create_ui(self):\n        self.widget = QtWidgets.QWidget(self)\n        # widget videoframe positionslider hbuttonbox\n        # hbuttonbox vboxlayout\n        self.setCentralWidget(self.widget)\n\n        if platform.system() == \"Darwin\":\n            self.videoframe = QtWidgets.QMacCocoaViewContainer(0)\n        else:\n            self.videoframe = QtWidgets.QFrame()\n\n        self.palette = self.videoframe.palette()\n        self.palette.setColor(QtGui.QPalette.Window, QtGui.QColor(0, 0, 0))\n        self.videoframe.setPalette(self.palette)\n        self.videoframe.setAutoFillBackground(True)\n        self.videoframe.setGeometry(0, 0, self.width(), self.height())\n\n        self.positionslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)\n        self.positionslider.setToolTip(\"Position\")\n        self.positionslider.setMaximum(1000)\n        self.positionslider.sliderMoved.connect(self.set_position)\n        self.positionslider.sliderPressed.connect(self.set_position)\n        # 创建视频文件列表\n        self.video_list_widget = QtWidgets.QListWidget()\n        self.video_list_widget.itemClicked.connect(self.play_selected_video)  # 连接列表项点击事件\n        self.vboxlayoutleft = QtWidgets.QVBoxLayout()\n        self.vboxlayoutleft.addWidget(self.video_list_widget)\n\n        self.hbuttonbox = QtWidgets.QHBoxLayout()\n        self.playbutton = QtWidgets.QPushButton(\"Play\")\n        self.hbuttonbox.addWidget(self.playbutton)\n        self.playbutton.clicked.connect(self.play_pause)\n\n        self.stopbutton = QtWidgets.QPushButton(\"Stop\")\n        self.hbuttonbox.addWidget(self.stopbutton)\n        self.stopbutton.clicked.connect(self.stop)\n\n        self.hbuttonbox.addStretch(1)\n        self.volumeslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)\n        self.volumeslider.setMaximum(100)\n        self.volumeslider.setValue(self.mediaplayer.audio_get_volume())\n        self.volumeslider.setToolTip(\"Volume\")\n        self.hbuttonbox.addWidget(self.volumeslider)\n        self.volumeslider.valueChanged.connect(self.set_volume)\n\n        self.vboxlayout = QtWidgets.QVBoxLayout()\n        self.vboxlayout.addWidget(self.videoframe)\n        self.vboxlayout.addWidget(self.positionslider)\n        self.vboxlayout.addLayout(self.hbuttonbox)\n\n        # self.widget.setLayout(self.vboxlayout)\n        # 将视频输出窗口设置为 videoframe\n        self.mediaplayer.set_hwnd(self.videoframe.winId())\n\n        # 将视频文件列表布局添加到主布局中的左侧\n        self.hboxlayout = QtWidgets.QHBoxLayout()\n        self.hboxlayout.addLayout(self.vboxlayoutleft,1)\n        self.hboxlayout.addLayout(self.vboxlayout,2)\n        self.widget.setLayout(self.hboxlayout)\n\n        menu_bar = self.menuBar()\n\n        file_menu = menu_bar.addMenu(\"File\")\n\n        open_action = QtWidgets.QAction(\"Load Video\", self)\n        close_action = QtWidgets.QAction(\"Close App\", self)\n        file_menu.addAction(open_action)\n        file_menu.addAction(close_action)\n\n        open_action.triggered.connect(self.open_file)\n        close_action.triggered.connect(sys.exit)\n\n        self.timer = QtCore.QTimer(self)\n        self.timer.setInterval(100)\n        self.timer.timeout.connect(self.update_ui)\n\n    # 创建函数来处理视频播放列表点击事件\n    def play_selected_video(self, item):\n        selected_index = self.video_list_widget.indexFromItem(item).row()\n        if 0 <= selected_index < len(self.playlist):\n            self.play_media(selected_index)\n    def play_pause(self):\n        if self.mediaplayer.is_playing():\n            self.mediaplayer.pause()\n            self.playbutton.setText(\"Play\")\n            self.is_paused = True\n            self.timer.stop()\n        else:\n            if self.mediaplayer.play() == -1:\n                self.open_file()\n                return\n\n            self.mediaplayer.play()\n            self.playbutton.setText(\"Pause\")\n            self.timer.start()\n            self.is_paused = False\n\n    def stop(self):\n        self.mediaplayer.stop()\n        self.playbutton.setText(\"Play\")\n\n    def open_file(self):\n        dialog_txt = \"Choose Media Files\"\n        filenames, _ = QtWidgets.QFileDialog.getOpenFileNames(self, dialog_txt, os.path.expanduser('~'))\n        if not filenames:\n            return\n        self.playlist.extend(filenames)\n        if not self.media:\n            self.play_media(0)\n            t1 = time.perf_counter()\n\n            # 获取主窗口的位置和大小\n        main_window_rect = self.geometry()\n\n        # 设置视频窗口的位置和大小\n        self.videoframe.setGeometry(main_window_rect.x(), main_window_rect.y(), main_window_rect.width(),\n                                    main_window_rect.height())\n\n    def play_media(self, index):\n        if index < len(self.playlist):\n            self.current_media_index = index\n            filename = self.playlist[index]\n            self.media = self.instance.media_new(filename)\n            self.mediaplayer.set_media(self.media)\n            self.media.parse()\n            self.setWindowTitle(self.media.get_meta(0))\n            self.play_pause()\n\n    def set_volume(self, volume):\n        self.mediaplayer.audio_set_volume(volume)\n\n    def set_position(self):\n        self.timer.stop()\n        pos = self.positionslider.value()\n        self.mediaplayer.set_position(pos / 1000.0)\n        self.timer.start()\n\n    def update_ui(self):\n        media_pos = int(self.mediaplayer.get_position() * 1000)\n        self.positionslider.setValue(media_pos)\n        if not self.mediaplayer.is_playing() and not self.is_paused:\n            if self.current_media_index < len(self.playlist) - 1:\n                self.play_media(self.current_media_index + 1)\n            else:\n                self.timer.stop()\n                self.stop()\n\ndef main():\n    app = QtWidgets.QApplication(sys.argv)\n    player = Player()\n    player.show()\n    player.resize(640, 480)\n\n    print('程序运行时间:%s毫秒' % ((t2 - t1)))\n    sys.exit(app.exec_())\n\nif __name__ == \"__main__\":\n    main()\n\n\n```\n","slug":"RecoderDemo","published":1,"updated":"2023-10-26T10:30:51.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3ky00033gu39q4b2uvj","content":" <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> queue</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5 <span class=\"keyword\">import</span> QtWidgets, QtGui, QtCore</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 总结,进度条点击事件实现了,但是对应的视频跳转还没有实现</span></span><br><span class=\"line\"><span class=\"comment\"># 视频图像的大小也不能随窗口变化而变化</span></span><br><span class=\"line\"><span class=\"comment\"># 倍速的话倒是简单实现,但是整体的倍速实现是依靠time.sleep实现的,还是稍微有点事件延长</span></span><br><span class=\"line\"><span class=\"comment\">#整体实现就是依靠cv2里面的一些线程处理,然后跳出内嵌循环实现视频列表和inddex的变化,外部的话就是self.currentindex变化</span></span><br><span class=\"line\"><span class=\"comment\"># Create a video buffer queue</span></span><br><span class=\"line\">video_queue = queue.Queue(<span class=\"number\">10</span>)</span><br><span class=\"line\">fps = <span class=\"number\">30</span></span><br><span class=\"line\">frame_delay = <span class=\"number\">0.25</span> / fps</span><br><span class=\"line\"><span class=\"comment\"># 这个类是实现在进度条点击就跳转到点击位置</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SliderCustom</span>(QtWidgets.QSlider):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">mousePressEvent</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> event.button() == QtCore.Qt.LeftButton <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> self.isSliderDown():</span><br><span class=\"line\">            opt = QtWidgets.QStyleOptionSlider()</span><br><span class=\"line\">            self.initStyleOption(opt)</span><br><span class=\"line\">            sliderRect = self.style().subControlRect(</span><br><span class=\"line\">                QtWidgets.QStyle.CC_Slider, opt,</span><br><span class=\"line\">                QtWidgets.QStyle.SC_SliderHandle, self)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> event.pos() <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> sliderRect:</span><br><span class=\"line\">                <span class=\"comment\"># the mouse is not over the handle, let&#x27;s move it; this is based</span></span><br><span class=\"line\">                <span class=\"comment\"># on the original C++ code that moves the handle when the</span></span><br><span class=\"line\">                <span class=\"comment\"># &quot;absolute button&quot; is pressed</span></span><br><span class=\"line\">                grooveRect = self.style().subControlRect(</span><br><span class=\"line\">                    QtWidgets.QStyle.CC_Slider, opt,</span><br><span class=\"line\">                    QtWidgets.QStyle.SC_SliderGroove, self)</span><br><span class=\"line\">                center = sliderRect.center() - sliderRect.topLeft()</span><br><span class=\"line\">                pos = event.pos() - center</span><br><span class=\"line\">                <span class=\"keyword\">if</span> self.orientation() == QtCore.Qt.Horizontal:</span><br><span class=\"line\">                    sliderLength = sliderRect.width()</span><br><span class=\"line\">                    sliderMin = grooveRect.x()</span><br><span class=\"line\">                    sliderMax = grooveRect.right() - sliderLength + <span class=\"number\">1</span></span><br><span class=\"line\">                    pos = pos.x()</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    sliderLength = sliderRect.height()</span><br><span class=\"line\">                    sliderMin = grooveRect.y()</span><br><span class=\"line\">                    sliderMax = grooveRect.bottom() - sliderLength + <span class=\"number\">1</span></span><br><span class=\"line\">                    pos = pos.y()</span><br><span class=\"line\">                value = self.style().sliderValueFromPosition(</span><br><span class=\"line\">                    self.minimum(), self.maximum(), pos - sliderMin,</span><br><span class=\"line\">                    sliderMax - sliderMin, opt.upsideDown</span><br><span class=\"line\">                )</span><br><span class=\"line\">                self.setSliderPosition(value)</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().mousePressEvent(event)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">VideoPlayer</span>(QtWidgets.QWidget):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(VideoPlayer, self).__init__()</span><br><span class=\"line\">        self.cleaned_files = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.opened_files = []</span><br><span class=\"line\">        self.file_contents = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.file_path = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.file_name = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.script_dir = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.paused = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.playing = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.current_file_index = <span class=\"number\">0</span>  <span class=\"comment\"># 当前播放的文件索引</span></span><br><span class=\"line\">        self.index_next_event = threading.Event()</span><br><span class=\"line\">        self.index_forward_event = threading.Event()</span><br><span class=\"line\">        self.index_click_event = threading.Event()</span><br><span class=\"line\">        self.pause_event = threading.Event()</span><br><span class=\"line\">        self.stop_event = threading.Event()</span><br><span class=\"line\">        self.lock = threading.Lock()<span class=\"comment\"># 线程锁</span></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># ... (原始初始化代码)</span></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&quot;Video Player&quot;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">2000</span>, <span class=\"number\">900</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QHBoxLayout for the main layout</span></span><br><span class=\"line\">        self.mainlayout = QtWidgets.QHBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QVBoxLayout for the left side (you can adjust the proportions as needed)</span></span><br><span class=\"line\">        self.leftlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.leftlayout.addWidget(QtWidgets.QLabel(<span class=\"string\">&quot;Left Side Content&quot;</span>))  <span class=\"comment\"># Add any content you want on the left</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QVBoxLayout for the right side</span></span><br><span class=\"line\">        self.rightlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.videoLabel = QtWidgets.QLabel(self)</span><br><span class=\"line\">        self.videoLabel.setScaledContents(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        self.videoLabel.setStyleSheet(<span class=\"string\">&quot;background-color: black;&quot;</span>)</span><br><span class=\"line\">        self.rightlayout.addWidget(self.videoLabel)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QHBoxLayout for the buttons and progress bar</span></span><br><span class=\"line\">        buttonbox = QtWidgets.QHBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create start and stop buttons</span></span><br><span class=\"line\">        <span class=\"comment\"># Create a &quot;Next&quot; button</span></span><br><span class=\"line\">        self.forwardButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Forward&quot;</span>, self)</span><br><span class=\"line\">        self.forwardButton.clicked.connect(self.forward_video)</span><br><span class=\"line\">        self.nextButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Next&quot;</span>, self)</span><br><span class=\"line\">        self.nextButton.clicked.connect(self.play_next_video)</span><br><span class=\"line\">        self.startButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Start&quot;</span>, self)</span><br><span class=\"line\">        self.stopButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Stop&quot;</span>, self)</span><br><span class=\"line\">        self.startButton.clicked.connect(self.start_video)</span><br><span class=\"line\">        self.stopButton.clicked.connect(self.stop_video)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QSlider for the progress bar</span></span><br><span class=\"line\">        self.progressBar = SliderCustom(QtCore.Qt.Horizontal)</span><br><span class=\"line\">        self.progressBar.setRange(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">        self.progressBar.setValue(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the buttons and progress bar to the buttonbox</span></span><br><span class=\"line\">        self.playPauseButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Play/Pause&quot;</span>, self)</span><br><span class=\"line\">        self.playPauseButton.clicked.connect(self.toggle_play_pause)</span><br><span class=\"line\"></span><br><span class=\"line\">        buttonbox.addWidget(self.startButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.stopButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.playPauseButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.forwardButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.nextButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.progressBar)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the buttonbox to the right layout</span></span><br><span class=\"line\">        self.rightlayout.addLayout(buttonbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create an &quot;Open File&quot; button</span></span><br><span class=\"line\">        self.openFileButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Open File&quot;</span>)</span><br><span class=\"line\">        self.openFileButton.clicked.connect(self.open_file_dialog)</span><br><span class=\"line\">        self.leftlayout.addWidget(self.openFileButton)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QListWidget to display opened files</span></span><br><span class=\"line\">        self.fileListWidget = QtWidgets.QListWidget()</span><br><span class=\"line\">        self.leftlayout.addWidget(self.fileListWidget)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the left and right layouts to the main layout</span></span><br><span class=\"line\">        self.mainlayout.addLayout(self.leftlayout, <span class=\"number\">1</span>)</span><br><span class=\"line\">        self.mainlayout.addLayout(self.rightlayout, <span class=\"number\">7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Set the main layout for the widget</span></span><br><span class=\"line\">        self.setLayout(self.mainlayout)</span><br><span class=\"line\">        <span class=\"comment\"># open &quot;PathList.txt&quot; in self.opened_files</span></span><br><span class=\"line\">        self.script_dir = os.path.dirname(__file__)</span><br><span class=\"line\">        self.file_name = <span class=\"string\">&quot;PathList.txt&quot;</span></span><br><span class=\"line\">        self.file_path = os.path.join(self.script_dir, self.file_name)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(self.file_path):</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(self.file_path, <span class=\"string\">&#x27;w&#x27;</span>):</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(self.file_path, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            self.file_contents = file.read().splitlines()</span><br><span class=\"line\">        self.cleaned_files = [file.strip(<span class=\"string\">&#x27;&quot;&#x27;</span>) <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> self.file_contents]</span><br><span class=\"line\">        self.opened_files.extend(self.cleaned_files)</span><br><span class=\"line\">        self.update_file_list(self.opened_files)</span><br><span class=\"line\">        self.fileListWidget.itemClicked.connect(self.handle_file_click)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Connect closeEvent to custom slot</span></span><br><span class=\"line\">        self.closeEvent = self.on_close</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">start_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> video_queue.empty():</span><br><span class=\"line\">            self.video_thread = threading.Thread(target=self.add_video_to_queue)</span><br><span class=\"line\">            self.video_thread.daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.video_thread.start()</span><br><span class=\"line\"></span><br><span class=\"line\">            self.play_thread = threading.Thread(target=self.play_video_from_queue)</span><br><span class=\"line\">            self.play_thread.daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.play_thread.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play_next_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.index_next_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.index_forward_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle_file_click</span>(<span class=\"params\">self, item</span>):</span><br><span class=\"line\">        file_index = self.fileListWidget.currentRow()</span><br><span class=\"line\">        <span class=\"comment\"># 这里是从零开始的</span></span><br><span class=\"line\">        <span class=\"comment\"># Pause video processing thread</span></span><br><span class=\"line\">        self.pause_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> video_queue.empty():</span><br><span class=\"line\">            video_queue.get()</span><br><span class=\"line\">        <span class=\"keyword\">with</span> self.lock:</span><br><span class=\"line\">            self.current_file_index = file_index</span><br><span class=\"line\">        self.index_click_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"comment\"># Resume video processing thread</span></span><br><span class=\"line\">        self.pause_event.clear()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">stop_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.stop_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(self, <span class=\"string\">&#x27;video_thread&#x27;</span>) <span class=\"keyword\">and</span> self.video_thread.is_alive():</span><br><span class=\"line\">            self.video_thread.join()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(self, <span class=\"string\">&#x27;play_thread&#x27;</span>) <span class=\"keyword\">and</span> self.play_thread.is_alive():</span><br><span class=\"line\">            self.play_thread.join()</span><br><span class=\"line\">        cv2.destroyAllWindows()</span><br><span class=\"line\">        QtWidgets.QApplication.quit()</span><br><span class=\"line\">        sys.exit(app.exec_())</span><br><span class=\"line\">         <span class=\"comment\"># Gracefully exit the application</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_video_to_queue</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        i = <span class=\"number\">0</span></span><br><span class=\"line\">        index = self.current_file_index</span><br><span class=\"line\">        <span class=\"keyword\">if</span> index &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index + <span class=\"number\">1</span> &gt; <span class=\"built_in\">len</span>(self.opened_files):</span><br><span class=\"line\">                index = <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span></span><br><span class=\"line\">        video_files = self.opened_files[index:]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> index &lt; <span class=\"built_in\">len</span>(video_files) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.pause_event.is_set():</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"comment\"># if self.stop_event.is_set():</span></span><br><span class=\"line\">            <span class=\"comment\">#     print(&#x27;退出&#x27;)</span></span><br><span class=\"line\">            <span class=\"comment\">#     break</span></span><br><span class=\"line\"></span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">            video_file = video_files[index]</span><br><span class=\"line\">            cap = cv2.VideoCapture(video_file)</span><br><span class=\"line\">            total_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)</span><br><span class=\"line\">            current_frame = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">                <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">                        time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_next_event.is_set():</span><br><span class=\"line\">                        self.index_next_event.clear()</span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_click_event.is_set():</span><br><span class=\"line\">                        self.index_click_event.clear()</span><br><span class=\"line\">                        index = self.current_file_index - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_forward_event.is_set():</span><br><span class=\"line\">                        self.index_forward_event.clear()</span><br><span class=\"line\">                        index -= <span class=\"number\">2</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> index &lt; -<span class=\"number\">1</span>:</span><br><span class=\"line\">                            index = <span class=\"built_in\">len</span>(video_files) - <span class=\"number\">2</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    ret, frame = cap.read()</span><br><span class=\"line\">                <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ret:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                video_queue.put(frame)</span><br><span class=\"line\">                current_frame += <span class=\"number\">1</span></span><br><span class=\"line\">                progress = <span class=\"built_in\">int</span>((current_frame / total_frames) * <span class=\"number\">100</span>)</span><br><span class=\"line\">                self.update_progress(progress)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> video_queue.full():</span><br><span class=\"line\">                    time.sleep(frame_delay)</span><br><span class=\"line\">            <span class=\"comment\"># 点击事件以后就开始,在这里开始</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> index == <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span>:</span><br><span class=\"line\">                index = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                index += <span class=\"number\">1</span></span><br><span class=\"line\">            cap.release()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play_video_from_queue</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        t1 = time.perf_counter()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.pause_event.is_set():</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"comment\"># if self.stop_event.is_set():</span></span><br><span class=\"line\">            <span class=\"comment\">#     break</span></span><br><span class=\"line\">            frame = video_queue.get()</span><br><span class=\"line\">            imS = cv2.resize(frame, (<span class=\"number\">700</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">            imS = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)</span><br><span class=\"line\">            qimg = QtGui.QImage(imS.data, imS.shape[<span class=\"number\">1</span>], imS.shape[<span class=\"number\">0</span>], QtGui.QImage.Format_RGB888)</span><br><span class=\"line\">            pixmap = QtGui.QPixmap.fromImage(qimg)</span><br><span class=\"line\">            self.videoLabel.setPixmap(pixmap)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.current_file_index == <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span>:</span><br><span class=\"line\">                self.current_file_index = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            time.sleep(frame_delay)</span><br><span class=\"line\">    <span class=\"comment\">#进度条函数</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_progress</span>(<span class=\"params\">self, progress</span>):</span><br><span class=\"line\">        self.progressBar.setValue(progress)</span><br><span class=\"line\">    <span class=\"comment\">#open_file_button</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">open_file_dialog</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        file_dialog = QtWidgets.QFileDialog(self)</span><br><span class=\"line\">        file_dialog.setNameFilter(<span class=\"string\">&quot;Video files (*.mp4 *.avi *.mkv)&quot;</span>)</span><br><span class=\"line\">        file_dialog.setFileMode(QtWidgets.QFileDialog.ExistingFiles)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> file_dialog.exec_():</span><br><span class=\"line\">            selected_files = file_dialog.selectedFiles()</span><br><span class=\"line\">            self.opened_files.extend(selected_files)</span><br><span class=\"line\">            <span class=\"comment\"># 添加选择的视频文件</span></span><br><span class=\"line\">            self.update_file_list(selected_files)</span><br><span class=\"line\">            <span class=\"comment\"># 添加进去左边的列表里面</span></span><br><span class=\"line\">    <span class=\"comment\">#button_play_pause</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">toggle_play_pause</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">            self.playing = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.playing = <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"comment\">#add_path to fileList</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_file_list</span>(<span class=\"params\">self, files</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">            item = QtWidgets.QListWidgetItem(file)</span><br><span class=\"line\">            self.fileListWidget.addItem(item)</span><br><span class=\"line\">    <span class=\"comment\"># xx close button</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">on_close</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        self.stop_video()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app = QtWidgets.QApplication(sys.argv)</span><br><span class=\"line\">    player = VideoPlayer()</span><br><span class=\"line\">    player.show()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\">import platform</span><br><span class=\"line\">import os</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">from PyQt5 import QtWidgets, QtGui, QtCore</span><br><span class=\"line\">import vlc</span><br><span class=\"line\">import queue</span><br><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\">video_queue = queue.Queue(10)</span><br><span class=\"line\">fps = 30  # 正常视频的帧率，这里假设为30帧/秒</span><br><span class=\"line\">frame_delay = 1 / fps  # 计算每帧之间的延迟时间</span><br><span class=\"line\">t1 = 0</span><br><span class=\"line\">t2 = 0</span><br><span class=\"line\">class Player(QtWidgets.QMainWindow):</span><br><span class=\"line\">    def __init__(self, master=None):</span><br><span class=\"line\">        QtWidgets.QMainWindow.__init__(self, master)</span><br><span class=\"line\">        self.setWindowTitle(&quot;Media Player&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.instance = vlc.Instance()</span><br><span class=\"line\">        self.media = None</span><br><span class=\"line\">        self.mediaplayer = self.instance.media_player_new()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        self.create_ui()</span><br><span class=\"line\">        self.is_paused = False</span><br><span class=\"line\">        self.playlist = []   # 存储播放列表中的多个文件</span><br><span class=\"line\">        self.current_media_index = 0  # 跟踪当前播放的文件索引</span><br><span class=\"line\"></span><br><span class=\"line\">        # self.playlist2 = self.instance.media_list_new()</span><br><span class=\"line\">        # self.media_player = self.instance.media_list_player_new()</span><br><span class=\"line\">        # self.media1 = self.instance.media_new_path(&quot;D:\\wolf1.mp4&quot;)</span><br><span class=\"line\">        # self.playlist2.add_media(self.media1)</span><br><span class=\"line\">        # self.media2 = self.instance.media_new_path(&quot;D:\\wolf2.mp4&quot;)</span><br><span class=\"line\">        # self.playlist2.add_media(self.media1)</span><br><span class=\"line\">        # self.media_player.set_media_list(self.playlist2)</span><br><span class=\"line\">        # self.media_player.play()</span><br><span class=\"line\">        # time.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\">    def create_ui(self):</span><br><span class=\"line\">        self.widget = QtWidgets.QWidget(self)</span><br><span class=\"line\">        # widget videoframe positionslider hbuttonbox</span><br><span class=\"line\">        # hbuttonbox vboxlayout</span><br><span class=\"line\">        self.setCentralWidget(self.widget)</span><br><span class=\"line\"></span><br><span class=\"line\">        if platform.system() == &quot;Darwin&quot;:</span><br><span class=\"line\">            self.videoframe = QtWidgets.QMacCocoaViewContainer(0)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            self.videoframe = QtWidgets.QFrame()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.palette = self.videoframe.palette()</span><br><span class=\"line\">        self.palette.setColor(QtGui.QPalette.Window, QtGui.QColor(0, 0, 0))</span><br><span class=\"line\">        self.videoframe.setPalette(self.palette)</span><br><span class=\"line\">        self.videoframe.setAutoFillBackground(True)</span><br><span class=\"line\">        self.videoframe.setGeometry(0, 0, self.width(), self.height())</span><br><span class=\"line\"></span><br><span class=\"line\">        self.positionslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)</span><br><span class=\"line\">        self.positionslider.setToolTip(&quot;Position&quot;)</span><br><span class=\"line\">        self.positionslider.setMaximum(1000)</span><br><span class=\"line\">        self.positionslider.sliderMoved.connect(self.set_position)</span><br><span class=\"line\">        self.positionslider.sliderPressed.connect(self.set_position)</span><br><span class=\"line\">        # 创建视频文件列表</span><br><span class=\"line\">        self.video_list_widget = QtWidgets.QListWidget()</span><br><span class=\"line\">        self.video_list_widget.itemClicked.connect(self.play_selected_video)  # 连接列表项点击事件</span><br><span class=\"line\">        self.vboxlayoutleft = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.vboxlayoutleft.addWidget(self.video_list_widget)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.hbuttonbox = QtWidgets.QHBoxLayout()</span><br><span class=\"line\">        self.playbutton = QtWidgets.QPushButton(&quot;Play&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.playbutton)</span><br><span class=\"line\">        self.playbutton.clicked.connect(self.play_pause)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.stopbutton = QtWidgets.QPushButton(&quot;Stop&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.stopbutton)</span><br><span class=\"line\">        self.stopbutton.clicked.connect(self.stop)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.hbuttonbox.addStretch(1)</span><br><span class=\"line\">        self.volumeslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)</span><br><span class=\"line\">        self.volumeslider.setMaximum(100)</span><br><span class=\"line\">        self.volumeslider.setValue(self.mediaplayer.audio_get_volume())</span><br><span class=\"line\">        self.volumeslider.setToolTip(&quot;Volume&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.volumeslider)</span><br><span class=\"line\">        self.volumeslider.valueChanged.connect(self.set_volume)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.vboxlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.vboxlayout.addWidget(self.videoframe)</span><br><span class=\"line\">        self.vboxlayout.addWidget(self.positionslider)</span><br><span class=\"line\">        self.vboxlayout.addLayout(self.hbuttonbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        # self.widget.setLayout(self.vboxlayout)</span><br><span class=\"line\">        # 将视频输出窗口设置为 videoframe</span><br><span class=\"line\">        self.mediaplayer.set_hwnd(self.videoframe.winId())</span><br><span class=\"line\"></span><br><span class=\"line\">        # 将视频文件列表布局添加到主布局中的左侧</span><br><span class=\"line\">        self.hboxlayout = QtWidgets.QHBoxLayout()</span><br><span class=\"line\">        self.hboxlayout.addLayout(self.vboxlayoutleft,1)</span><br><span class=\"line\">        self.hboxlayout.addLayout(self.vboxlayout,2)</span><br><span class=\"line\">        self.widget.setLayout(self.hboxlayout)</span><br><span class=\"line\"></span><br><span class=\"line\">        menu_bar = self.menuBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        file_menu = menu_bar.addMenu(&quot;File&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        open_action = QtWidgets.QAction(&quot;Load Video&quot;, self)</span><br><span class=\"line\">        close_action = QtWidgets.QAction(&quot;Close App&quot;, self)</span><br><span class=\"line\">        file_menu.addAction(open_action)</span><br><span class=\"line\">        file_menu.addAction(close_action)</span><br><span class=\"line\"></span><br><span class=\"line\">        open_action.triggered.connect(self.open_file)</span><br><span class=\"line\">        close_action.triggered.connect(sys.exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.timer = QtCore.QTimer(self)</span><br><span class=\"line\">        self.timer.setInterval(100)</span><br><span class=\"line\">        self.timer.timeout.connect(self.update_ui)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建函数来处理视频播放列表点击事件</span><br><span class=\"line\">    def play_selected_video(self, item):</span><br><span class=\"line\">        selected_index = self.video_list_widget.indexFromItem(item).row()</span><br><span class=\"line\">        if 0 &lt;= selected_index &lt; len(self.playlist):</span><br><span class=\"line\">            self.play_media(selected_index)</span><br><span class=\"line\">    def play_pause(self):</span><br><span class=\"line\">        if self.mediaplayer.is_playing():</span><br><span class=\"line\">            self.mediaplayer.pause()</span><br><span class=\"line\">            self.playbutton.setText(&quot;Play&quot;)</span><br><span class=\"line\">            self.is_paused = True</span><br><span class=\"line\">            self.timer.stop()</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            if self.mediaplayer.play() == -1:</span><br><span class=\"line\">                self.open_file()</span><br><span class=\"line\">                return</span><br><span class=\"line\"></span><br><span class=\"line\">            self.mediaplayer.play()</span><br><span class=\"line\">            self.playbutton.setText(&quot;Pause&quot;)</span><br><span class=\"line\">            self.timer.start()</span><br><span class=\"line\">            self.is_paused = False</span><br><span class=\"line\"></span><br><span class=\"line\">    def stop(self):</span><br><span class=\"line\">        self.mediaplayer.stop()</span><br><span class=\"line\">        self.playbutton.setText(&quot;Play&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def open_file(self):</span><br><span class=\"line\">        dialog_txt = &quot;Choose Media Files&quot;</span><br><span class=\"line\">        filenames, _ = QtWidgets.QFileDialog.getOpenFileNames(self, dialog_txt, os.path.expanduser(&#x27;~&#x27;))</span><br><span class=\"line\">        if not filenames:</span><br><span class=\"line\">            return</span><br><span class=\"line\">        self.playlist.extend(filenames)</span><br><span class=\"line\">        if not self.media:</span><br><span class=\"line\">            self.play_media(0)</span><br><span class=\"line\">            t1 = time.perf_counter()</span><br><span class=\"line\"></span><br><span class=\"line\">            # 获取主窗口的位置和大小</span><br><span class=\"line\">        main_window_rect = self.geometry()</span><br><span class=\"line\"></span><br><span class=\"line\">        # 设置视频窗口的位置和大小</span><br><span class=\"line\">        self.videoframe.setGeometry(main_window_rect.x(), main_window_rect.y(), main_window_rect.width(),</span><br><span class=\"line\">                                    main_window_rect.height())</span><br><span class=\"line\"></span><br><span class=\"line\">    def play_media(self, index):</span><br><span class=\"line\">        if index &lt; len(self.playlist):</span><br><span class=\"line\">            self.current_media_index = index</span><br><span class=\"line\">            filename = self.playlist[index]</span><br><span class=\"line\">            self.media = self.instance.media_new(filename)</span><br><span class=\"line\">            self.mediaplayer.set_media(self.media)</span><br><span class=\"line\">            self.media.parse()</span><br><span class=\"line\">            self.setWindowTitle(self.media.get_meta(0))</span><br><span class=\"line\">            self.play_pause()</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_volume(self, volume):</span><br><span class=\"line\">        self.mediaplayer.audio_set_volume(volume)</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_position(self):</span><br><span class=\"line\">        self.timer.stop()</span><br><span class=\"line\">        pos = self.positionslider.value()</span><br><span class=\"line\">        self.mediaplayer.set_position(pos / 1000.0)</span><br><span class=\"line\">        self.timer.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    def update_ui(self):</span><br><span class=\"line\">        media_pos = int(self.mediaplayer.get_position() * 1000)</span><br><span class=\"line\">        self.positionslider.setValue(media_pos)</span><br><span class=\"line\">        if not self.mediaplayer.is_playing() and not self.is_paused:</span><br><span class=\"line\">            if self.current_media_index &lt; len(self.playlist) - 1:</span><br><span class=\"line\">                self.play_media(self.current_media_index + 1)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                self.timer.stop()</span><br><span class=\"line\">                self.stop()</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    app = QtWidgets.QApplication(sys.argv)</span><br><span class=\"line\">    player = Player()</span><br><span class=\"line\">    player.show()</span><br><span class=\"line\">    player.resize(640, 480)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;程序运行时间:%s毫秒&#x27; % ((t2 - t1)))</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":" <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> queue</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5 <span class=\"keyword\">import</span> QtWidgets, QtGui, QtCore</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 总结,进度条点击事件实现了,但是对应的视频跳转还没有实现</span></span><br><span class=\"line\"><span class=\"comment\"># 视频图像的大小也不能随窗口变化而变化</span></span><br><span class=\"line\"><span class=\"comment\"># 倍速的话倒是简单实现,但是整体的倍速实现是依靠time.sleep实现的,还是稍微有点事件延长</span></span><br><span class=\"line\"><span class=\"comment\">#整体实现就是依靠cv2里面的一些线程处理,然后跳出内嵌循环实现视频列表和inddex的变化,外部的话就是self.currentindex变化</span></span><br><span class=\"line\"><span class=\"comment\"># Create a video buffer queue</span></span><br><span class=\"line\">video_queue = queue.Queue(<span class=\"number\">10</span>)</span><br><span class=\"line\">fps = <span class=\"number\">30</span></span><br><span class=\"line\">frame_delay = <span class=\"number\">0.25</span> / fps</span><br><span class=\"line\"><span class=\"comment\"># 这个类是实现在进度条点击就跳转到点击位置</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SliderCustom</span>(QtWidgets.QSlider):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">mousePressEvent</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> event.button() == QtCore.Qt.LeftButton <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> self.isSliderDown():</span><br><span class=\"line\">            opt = QtWidgets.QStyleOptionSlider()</span><br><span class=\"line\">            self.initStyleOption(opt)</span><br><span class=\"line\">            sliderRect = self.style().subControlRect(</span><br><span class=\"line\">                QtWidgets.QStyle.CC_Slider, opt,</span><br><span class=\"line\">                QtWidgets.QStyle.SC_SliderHandle, self)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> event.pos() <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> sliderRect:</span><br><span class=\"line\">                <span class=\"comment\"># the mouse is not over the handle, let&#x27;s move it; this is based</span></span><br><span class=\"line\">                <span class=\"comment\"># on the original C++ code that moves the handle when the</span></span><br><span class=\"line\">                <span class=\"comment\"># &quot;absolute button&quot; is pressed</span></span><br><span class=\"line\">                grooveRect = self.style().subControlRect(</span><br><span class=\"line\">                    QtWidgets.QStyle.CC_Slider, opt,</span><br><span class=\"line\">                    QtWidgets.QStyle.SC_SliderGroove, self)</span><br><span class=\"line\">                center = sliderRect.center() - sliderRect.topLeft()</span><br><span class=\"line\">                pos = event.pos() - center</span><br><span class=\"line\">                <span class=\"keyword\">if</span> self.orientation() == QtCore.Qt.Horizontal:</span><br><span class=\"line\">                    sliderLength = sliderRect.width()</span><br><span class=\"line\">                    sliderMin = grooveRect.x()</span><br><span class=\"line\">                    sliderMax = grooveRect.right() - sliderLength + <span class=\"number\">1</span></span><br><span class=\"line\">                    pos = pos.x()</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    sliderLength = sliderRect.height()</span><br><span class=\"line\">                    sliderMin = grooveRect.y()</span><br><span class=\"line\">                    sliderMax = grooveRect.bottom() - sliderLength + <span class=\"number\">1</span></span><br><span class=\"line\">                    pos = pos.y()</span><br><span class=\"line\">                value = self.style().sliderValueFromPosition(</span><br><span class=\"line\">                    self.minimum(), self.maximum(), pos - sliderMin,</span><br><span class=\"line\">                    sliderMax - sliderMin, opt.upsideDown</span><br><span class=\"line\">                )</span><br><span class=\"line\">                self.setSliderPosition(value)</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().mousePressEvent(event)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">VideoPlayer</span>(QtWidgets.QWidget):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(VideoPlayer, self).__init__()</span><br><span class=\"line\">        self.cleaned_files = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.opened_files = []</span><br><span class=\"line\">        self.file_contents = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.file_path = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.file_name = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.script_dir = <span class=\"literal\">None</span></span><br><span class=\"line\">        self.paused = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.playing = <span class=\"literal\">False</span></span><br><span class=\"line\">        self.current_file_index = <span class=\"number\">0</span>  <span class=\"comment\"># 当前播放的文件索引</span></span><br><span class=\"line\">        self.index_next_event = threading.Event()</span><br><span class=\"line\">        self.index_forward_event = threading.Event()</span><br><span class=\"line\">        self.index_click_event = threading.Event()</span><br><span class=\"line\">        self.pause_event = threading.Event()</span><br><span class=\"line\">        self.stop_event = threading.Event()</span><br><span class=\"line\">        self.lock = threading.Lock()<span class=\"comment\"># 线程锁</span></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUI</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># ... (原始初始化代码)</span></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&quot;Video Player&quot;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">2000</span>, <span class=\"number\">900</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QHBoxLayout for the main layout</span></span><br><span class=\"line\">        self.mainlayout = QtWidgets.QHBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QVBoxLayout for the left side (you can adjust the proportions as needed)</span></span><br><span class=\"line\">        self.leftlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.leftlayout.addWidget(QtWidgets.QLabel(<span class=\"string\">&quot;Left Side Content&quot;</span>))  <span class=\"comment\"># Add any content you want on the left</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QVBoxLayout for the right side</span></span><br><span class=\"line\">        self.rightlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.videoLabel = QtWidgets.QLabel(self)</span><br><span class=\"line\">        self.videoLabel.setScaledContents(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        self.videoLabel.setStyleSheet(<span class=\"string\">&quot;background-color: black;&quot;</span>)</span><br><span class=\"line\">        self.rightlayout.addWidget(self.videoLabel)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QHBoxLayout for the buttons and progress bar</span></span><br><span class=\"line\">        buttonbox = QtWidgets.QHBoxLayout()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create start and stop buttons</span></span><br><span class=\"line\">        <span class=\"comment\"># Create a &quot;Next&quot; button</span></span><br><span class=\"line\">        self.forwardButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Forward&quot;</span>, self)</span><br><span class=\"line\">        self.forwardButton.clicked.connect(self.forward_video)</span><br><span class=\"line\">        self.nextButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Next&quot;</span>, self)</span><br><span class=\"line\">        self.nextButton.clicked.connect(self.play_next_video)</span><br><span class=\"line\">        self.startButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Start&quot;</span>, self)</span><br><span class=\"line\">        self.stopButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Stop&quot;</span>, self)</span><br><span class=\"line\">        self.startButton.clicked.connect(self.start_video)</span><br><span class=\"line\">        self.stopButton.clicked.connect(self.stop_video)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QSlider for the progress bar</span></span><br><span class=\"line\">        self.progressBar = SliderCustom(QtCore.Qt.Horizontal)</span><br><span class=\"line\">        self.progressBar.setRange(<span class=\"number\">0</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">        self.progressBar.setValue(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the buttons and progress bar to the buttonbox</span></span><br><span class=\"line\">        self.playPauseButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Play/Pause&quot;</span>, self)</span><br><span class=\"line\">        self.playPauseButton.clicked.connect(self.toggle_play_pause)</span><br><span class=\"line\"></span><br><span class=\"line\">        buttonbox.addWidget(self.startButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.stopButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.playPauseButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.forwardButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.nextButton)</span><br><span class=\"line\">        buttonbox.addWidget(self.progressBar)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the buttonbox to the right layout</span></span><br><span class=\"line\">        self.rightlayout.addLayout(buttonbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create an &quot;Open File&quot; button</span></span><br><span class=\"line\">        self.openFileButton = QtWidgets.QPushButton(<span class=\"string\">&quot;Open File&quot;</span>)</span><br><span class=\"line\">        self.openFileButton.clicked.connect(self.open_file_dialog)</span><br><span class=\"line\">        self.leftlayout.addWidget(self.openFileButton)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create a QListWidget to display opened files</span></span><br><span class=\"line\">        self.fileListWidget = QtWidgets.QListWidget()</span><br><span class=\"line\">        self.leftlayout.addWidget(self.fileListWidget)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Add the left and right layouts to the main layout</span></span><br><span class=\"line\">        self.mainlayout.addLayout(self.leftlayout, <span class=\"number\">1</span>)</span><br><span class=\"line\">        self.mainlayout.addLayout(self.rightlayout, <span class=\"number\">7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Set the main layout for the widget</span></span><br><span class=\"line\">        self.setLayout(self.mainlayout)</span><br><span class=\"line\">        <span class=\"comment\"># open &quot;PathList.txt&quot; in self.opened_files</span></span><br><span class=\"line\">        self.script_dir = os.path.dirname(__file__)</span><br><span class=\"line\">        self.file_name = <span class=\"string\">&quot;PathList.txt&quot;</span></span><br><span class=\"line\">        self.file_path = os.path.join(self.script_dir, self.file_name)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(self.file_path):</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(self.file_path, <span class=\"string\">&#x27;w&#x27;</span>):</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(self.file_path, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">            self.file_contents = file.read().splitlines()</span><br><span class=\"line\">        self.cleaned_files = [file.strip(<span class=\"string\">&#x27;&quot;&#x27;</span>) <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> self.file_contents]</span><br><span class=\"line\">        self.opened_files.extend(self.cleaned_files)</span><br><span class=\"line\">        self.update_file_list(self.opened_files)</span><br><span class=\"line\">        self.fileListWidget.itemClicked.connect(self.handle_file_click)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Connect closeEvent to custom slot</span></span><br><span class=\"line\">        self.closeEvent = self.on_close</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">start_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> video_queue.empty():</span><br><span class=\"line\">            self.video_thread = threading.Thread(target=self.add_video_to_queue)</span><br><span class=\"line\">            self.video_thread.daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.video_thread.start()</span><br><span class=\"line\"></span><br><span class=\"line\">            self.play_thread = threading.Thread(target=self.play_video_from_queue)</span><br><span class=\"line\">            self.play_thread.daemon = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.play_thread.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play_next_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.index_next_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.index_forward_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle_file_click</span>(<span class=\"params\">self, item</span>):</span><br><span class=\"line\">        file_index = self.fileListWidget.currentRow()</span><br><span class=\"line\">        <span class=\"comment\"># 这里是从零开始的</span></span><br><span class=\"line\">        <span class=\"comment\"># Pause video processing thread</span></span><br><span class=\"line\">        self.pause_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> video_queue.empty():</span><br><span class=\"line\">            video_queue.get()</span><br><span class=\"line\">        <span class=\"keyword\">with</span> self.lock:</span><br><span class=\"line\">            self.current_file_index = file_index</span><br><span class=\"line\">        self.index_click_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"comment\"># Resume video processing thread</span></span><br><span class=\"line\">        self.pause_event.clear()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">stop_video</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.stop_event.<span class=\"built_in\">set</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(self, <span class=\"string\">&#x27;video_thread&#x27;</span>) <span class=\"keyword\">and</span> self.video_thread.is_alive():</span><br><span class=\"line\">            self.video_thread.join()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(self, <span class=\"string\">&#x27;play_thread&#x27;</span>) <span class=\"keyword\">and</span> self.play_thread.is_alive():</span><br><span class=\"line\">            self.play_thread.join()</span><br><span class=\"line\">        cv2.destroyAllWindows()</span><br><span class=\"line\">        QtWidgets.QApplication.quit()</span><br><span class=\"line\">        sys.exit(app.exec_())</span><br><span class=\"line\">         <span class=\"comment\"># Gracefully exit the application</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_video_to_queue</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        i = <span class=\"number\">0</span></span><br><span class=\"line\">        index = self.current_file_index</span><br><span class=\"line\">        <span class=\"keyword\">if</span> index &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index + <span class=\"number\">1</span> &gt; <span class=\"built_in\">len</span>(self.opened_files):</span><br><span class=\"line\">                index = <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span></span><br><span class=\"line\">        video_files = self.opened_files[index:]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> index &lt; <span class=\"built_in\">len</span>(video_files) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.pause_event.is_set():</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"comment\"># if self.stop_event.is_set():</span></span><br><span class=\"line\">            <span class=\"comment\">#     print(&#x27;退出&#x27;)</span></span><br><span class=\"line\">            <span class=\"comment\">#     break</span></span><br><span class=\"line\"></span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">            video_file = video_files[index]</span><br><span class=\"line\">            cap = cv2.VideoCapture(video_file)</span><br><span class=\"line\">            total_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)</span><br><span class=\"line\">            current_frame = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">                <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">                        time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_next_event.is_set():</span><br><span class=\"line\">                        self.index_next_event.clear()</span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_click_event.is_set():</span><br><span class=\"line\">                        self.index_click_event.clear()</span><br><span class=\"line\">                        index = self.current_file_index - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> self.index_forward_event.is_set():</span><br><span class=\"line\">                        self.index_forward_event.clear()</span><br><span class=\"line\">                        index -= <span class=\"number\">2</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> index &lt; -<span class=\"number\">1</span>:</span><br><span class=\"line\">                            index = <span class=\"built_in\">len</span>(video_files) - <span class=\"number\">2</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    ret, frame = cap.read()</span><br><span class=\"line\">                <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ret:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                video_queue.put(frame)</span><br><span class=\"line\">                current_frame += <span class=\"number\">1</span></span><br><span class=\"line\">                progress = <span class=\"built_in\">int</span>((current_frame / total_frames) * <span class=\"number\">100</span>)</span><br><span class=\"line\">                self.update_progress(progress)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> video_queue.full():</span><br><span class=\"line\">                    time.sleep(frame_delay)</span><br><span class=\"line\">            <span class=\"comment\"># 点击事件以后就开始,在这里开始</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> index == <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span>:</span><br><span class=\"line\">                index = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                index += <span class=\"number\">1</span></span><br><span class=\"line\">            cap.release()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play_video_from_queue</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        t1 = time.perf_counter()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">not</span> self.stop_event.is_set():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.pause_event.is_set():</span><br><span class=\"line\">                time.sleep(<span class=\"number\">0.1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"comment\"># if self.stop_event.is_set():</span></span><br><span class=\"line\">            <span class=\"comment\">#     break</span></span><br><span class=\"line\">            frame = video_queue.get()</span><br><span class=\"line\">            imS = cv2.resize(frame, (<span class=\"number\">700</span>, <span class=\"number\">500</span>))</span><br><span class=\"line\">            imS = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)</span><br><span class=\"line\">            qimg = QtGui.QImage(imS.data, imS.shape[<span class=\"number\">1</span>], imS.shape[<span class=\"number\">0</span>], QtGui.QImage.Format_RGB888)</span><br><span class=\"line\">            pixmap = QtGui.QPixmap.fromImage(qimg)</span><br><span class=\"line\">            self.videoLabel.setPixmap(pixmap)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.current_file_index == <span class=\"built_in\">len</span>(self.opened_files) - <span class=\"number\">1</span>:</span><br><span class=\"line\">                self.current_file_index = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            time.sleep(frame_delay)</span><br><span class=\"line\">    <span class=\"comment\">#进度条函数</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_progress</span>(<span class=\"params\">self, progress</span>):</span><br><span class=\"line\">        self.progressBar.setValue(progress)</span><br><span class=\"line\">    <span class=\"comment\">#open_file_button</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">open_file_dialog</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        file_dialog = QtWidgets.QFileDialog(self)</span><br><span class=\"line\">        file_dialog.setNameFilter(<span class=\"string\">&quot;Video files (*.mp4 *.avi *.mkv)&quot;</span>)</span><br><span class=\"line\">        file_dialog.setFileMode(QtWidgets.QFileDialog.ExistingFiles)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> file_dialog.exec_():</span><br><span class=\"line\">            selected_files = file_dialog.selectedFiles()</span><br><span class=\"line\">            self.opened_files.extend(selected_files)</span><br><span class=\"line\">            <span class=\"comment\"># 添加选择的视频文件</span></span><br><span class=\"line\">            self.update_file_list(selected_files)</span><br><span class=\"line\">            <span class=\"comment\"># 添加进去左边的列表里面</span></span><br><span class=\"line\">    <span class=\"comment\">#button_play_pause</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">toggle_play_pause</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.playing:</span><br><span class=\"line\">            self.playing = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.playing = <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"comment\">#add_path to fileList</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_file_list</span>(<span class=\"params\">self, files</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">            item = QtWidgets.QListWidgetItem(file)</span><br><span class=\"line\">            self.fileListWidget.addItem(item)</span><br><span class=\"line\">    <span class=\"comment\"># xx close button</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">on_close</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        self.stop_video()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app = QtWidgets.QApplication(sys.argv)</span><br><span class=\"line\">    player = VideoPlayer()</span><br><span class=\"line\">    player.show()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\">import platform</span><br><span class=\"line\">import os</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">from PyQt5 import QtWidgets, QtGui, QtCore</span><br><span class=\"line\">import vlc</span><br><span class=\"line\">import queue</span><br><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\">video_queue = queue.Queue(10)</span><br><span class=\"line\">fps = 30  # 正常视频的帧率，这里假设为30帧/秒</span><br><span class=\"line\">frame_delay = 1 / fps  # 计算每帧之间的延迟时间</span><br><span class=\"line\">t1 = 0</span><br><span class=\"line\">t2 = 0</span><br><span class=\"line\">class Player(QtWidgets.QMainWindow):</span><br><span class=\"line\">    def __init__(self, master=None):</span><br><span class=\"line\">        QtWidgets.QMainWindow.__init__(self, master)</span><br><span class=\"line\">        self.setWindowTitle(&quot;Media Player&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.instance = vlc.Instance()</span><br><span class=\"line\">        self.media = None</span><br><span class=\"line\">        self.mediaplayer = self.instance.media_player_new()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        self.create_ui()</span><br><span class=\"line\">        self.is_paused = False</span><br><span class=\"line\">        self.playlist = []   # 存储播放列表中的多个文件</span><br><span class=\"line\">        self.current_media_index = 0  # 跟踪当前播放的文件索引</span><br><span class=\"line\"></span><br><span class=\"line\">        # self.playlist2 = self.instance.media_list_new()</span><br><span class=\"line\">        # self.media_player = self.instance.media_list_player_new()</span><br><span class=\"line\">        # self.media1 = self.instance.media_new_path(&quot;D:\\wolf1.mp4&quot;)</span><br><span class=\"line\">        # self.playlist2.add_media(self.media1)</span><br><span class=\"line\">        # self.media2 = self.instance.media_new_path(&quot;D:\\wolf2.mp4&quot;)</span><br><span class=\"line\">        # self.playlist2.add_media(self.media1)</span><br><span class=\"line\">        # self.media_player.set_media_list(self.playlist2)</span><br><span class=\"line\">        # self.media_player.play()</span><br><span class=\"line\">        # time.sleep(5)</span><br><span class=\"line\"></span><br><span class=\"line\">    def create_ui(self):</span><br><span class=\"line\">        self.widget = QtWidgets.QWidget(self)</span><br><span class=\"line\">        # widget videoframe positionslider hbuttonbox</span><br><span class=\"line\">        # hbuttonbox vboxlayout</span><br><span class=\"line\">        self.setCentralWidget(self.widget)</span><br><span class=\"line\"></span><br><span class=\"line\">        if platform.system() == &quot;Darwin&quot;:</span><br><span class=\"line\">            self.videoframe = QtWidgets.QMacCocoaViewContainer(0)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            self.videoframe = QtWidgets.QFrame()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.palette = self.videoframe.palette()</span><br><span class=\"line\">        self.palette.setColor(QtGui.QPalette.Window, QtGui.QColor(0, 0, 0))</span><br><span class=\"line\">        self.videoframe.setPalette(self.palette)</span><br><span class=\"line\">        self.videoframe.setAutoFillBackground(True)</span><br><span class=\"line\">        self.videoframe.setGeometry(0, 0, self.width(), self.height())</span><br><span class=\"line\"></span><br><span class=\"line\">        self.positionslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)</span><br><span class=\"line\">        self.positionslider.setToolTip(&quot;Position&quot;)</span><br><span class=\"line\">        self.positionslider.setMaximum(1000)</span><br><span class=\"line\">        self.positionslider.sliderMoved.connect(self.set_position)</span><br><span class=\"line\">        self.positionslider.sliderPressed.connect(self.set_position)</span><br><span class=\"line\">        # 创建视频文件列表</span><br><span class=\"line\">        self.video_list_widget = QtWidgets.QListWidget()</span><br><span class=\"line\">        self.video_list_widget.itemClicked.connect(self.play_selected_video)  # 连接列表项点击事件</span><br><span class=\"line\">        self.vboxlayoutleft = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.vboxlayoutleft.addWidget(self.video_list_widget)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.hbuttonbox = QtWidgets.QHBoxLayout()</span><br><span class=\"line\">        self.playbutton = QtWidgets.QPushButton(&quot;Play&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.playbutton)</span><br><span class=\"line\">        self.playbutton.clicked.connect(self.play_pause)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.stopbutton = QtWidgets.QPushButton(&quot;Stop&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.stopbutton)</span><br><span class=\"line\">        self.stopbutton.clicked.connect(self.stop)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.hbuttonbox.addStretch(1)</span><br><span class=\"line\">        self.volumeslider = QtWidgets.QSlider(QtCore.Qt.Horizontal, self)</span><br><span class=\"line\">        self.volumeslider.setMaximum(100)</span><br><span class=\"line\">        self.volumeslider.setValue(self.mediaplayer.audio_get_volume())</span><br><span class=\"line\">        self.volumeslider.setToolTip(&quot;Volume&quot;)</span><br><span class=\"line\">        self.hbuttonbox.addWidget(self.volumeslider)</span><br><span class=\"line\">        self.volumeslider.valueChanged.connect(self.set_volume)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.vboxlayout = QtWidgets.QVBoxLayout()</span><br><span class=\"line\">        self.vboxlayout.addWidget(self.videoframe)</span><br><span class=\"line\">        self.vboxlayout.addWidget(self.positionslider)</span><br><span class=\"line\">        self.vboxlayout.addLayout(self.hbuttonbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        # self.widget.setLayout(self.vboxlayout)</span><br><span class=\"line\">        # 将视频输出窗口设置为 videoframe</span><br><span class=\"line\">        self.mediaplayer.set_hwnd(self.videoframe.winId())</span><br><span class=\"line\"></span><br><span class=\"line\">        # 将视频文件列表布局添加到主布局中的左侧</span><br><span class=\"line\">        self.hboxlayout = QtWidgets.QHBoxLayout()</span><br><span class=\"line\">        self.hboxlayout.addLayout(self.vboxlayoutleft,1)</span><br><span class=\"line\">        self.hboxlayout.addLayout(self.vboxlayout,2)</span><br><span class=\"line\">        self.widget.setLayout(self.hboxlayout)</span><br><span class=\"line\"></span><br><span class=\"line\">        menu_bar = self.menuBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        file_menu = menu_bar.addMenu(&quot;File&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        open_action = QtWidgets.QAction(&quot;Load Video&quot;, self)</span><br><span class=\"line\">        close_action = QtWidgets.QAction(&quot;Close App&quot;, self)</span><br><span class=\"line\">        file_menu.addAction(open_action)</span><br><span class=\"line\">        file_menu.addAction(close_action)</span><br><span class=\"line\"></span><br><span class=\"line\">        open_action.triggered.connect(self.open_file)</span><br><span class=\"line\">        close_action.triggered.connect(sys.exit)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.timer = QtCore.QTimer(self)</span><br><span class=\"line\">        self.timer.setInterval(100)</span><br><span class=\"line\">        self.timer.timeout.connect(self.update_ui)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建函数来处理视频播放列表点击事件</span><br><span class=\"line\">    def play_selected_video(self, item):</span><br><span class=\"line\">        selected_index = self.video_list_widget.indexFromItem(item).row()</span><br><span class=\"line\">        if 0 &lt;= selected_index &lt; len(self.playlist):</span><br><span class=\"line\">            self.play_media(selected_index)</span><br><span class=\"line\">    def play_pause(self):</span><br><span class=\"line\">        if self.mediaplayer.is_playing():</span><br><span class=\"line\">            self.mediaplayer.pause()</span><br><span class=\"line\">            self.playbutton.setText(&quot;Play&quot;)</span><br><span class=\"line\">            self.is_paused = True</span><br><span class=\"line\">            self.timer.stop()</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            if self.mediaplayer.play() == -1:</span><br><span class=\"line\">                self.open_file()</span><br><span class=\"line\">                return</span><br><span class=\"line\"></span><br><span class=\"line\">            self.mediaplayer.play()</span><br><span class=\"line\">            self.playbutton.setText(&quot;Pause&quot;)</span><br><span class=\"line\">            self.timer.start()</span><br><span class=\"line\">            self.is_paused = False</span><br><span class=\"line\"></span><br><span class=\"line\">    def stop(self):</span><br><span class=\"line\">        self.mediaplayer.stop()</span><br><span class=\"line\">        self.playbutton.setText(&quot;Play&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def open_file(self):</span><br><span class=\"line\">        dialog_txt = &quot;Choose Media Files&quot;</span><br><span class=\"line\">        filenames, _ = QtWidgets.QFileDialog.getOpenFileNames(self, dialog_txt, os.path.expanduser(&#x27;~&#x27;))</span><br><span class=\"line\">        if not filenames:</span><br><span class=\"line\">            return</span><br><span class=\"line\">        self.playlist.extend(filenames)</span><br><span class=\"line\">        if not self.media:</span><br><span class=\"line\">            self.play_media(0)</span><br><span class=\"line\">            t1 = time.perf_counter()</span><br><span class=\"line\"></span><br><span class=\"line\">            # 获取主窗口的位置和大小</span><br><span class=\"line\">        main_window_rect = self.geometry()</span><br><span class=\"line\"></span><br><span class=\"line\">        # 设置视频窗口的位置和大小</span><br><span class=\"line\">        self.videoframe.setGeometry(main_window_rect.x(), main_window_rect.y(), main_window_rect.width(),</span><br><span class=\"line\">                                    main_window_rect.height())</span><br><span class=\"line\"></span><br><span class=\"line\">    def play_media(self, index):</span><br><span class=\"line\">        if index &lt; len(self.playlist):</span><br><span class=\"line\">            self.current_media_index = index</span><br><span class=\"line\">            filename = self.playlist[index]</span><br><span class=\"line\">            self.media = self.instance.media_new(filename)</span><br><span class=\"line\">            self.mediaplayer.set_media(self.media)</span><br><span class=\"line\">            self.media.parse()</span><br><span class=\"line\">            self.setWindowTitle(self.media.get_meta(0))</span><br><span class=\"line\">            self.play_pause()</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_volume(self, volume):</span><br><span class=\"line\">        self.mediaplayer.audio_set_volume(volume)</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_position(self):</span><br><span class=\"line\">        self.timer.stop()</span><br><span class=\"line\">        pos = self.positionslider.value()</span><br><span class=\"line\">        self.mediaplayer.set_position(pos / 1000.0)</span><br><span class=\"line\">        self.timer.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    def update_ui(self):</span><br><span class=\"line\">        media_pos = int(self.mediaplayer.get_position() * 1000)</span><br><span class=\"line\">        self.positionslider.setValue(media_pos)</span><br><span class=\"line\">        if not self.mediaplayer.is_playing() and not self.is_paused:</span><br><span class=\"line\">            if self.current_media_index &lt; len(self.playlist) - 1:</span><br><span class=\"line\">                self.play_media(self.current_media_index + 1)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                self.timer.stop()</span><br><span class=\"line\">                self.stop()</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    app = QtWidgets.QApplication(sys.argv)</span><br><span class=\"line\">    player = Player()</span><br><span class=\"line\">    player.show()</span><br><span class=\"line\">    player.resize(640, 480)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&#x27;程序运行时间:%s毫秒&#x27; % ((t2 - t1)))</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"Vue","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-08-29T03:56:36.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"\n# vue\n无需构建步骤，渐进式增强静态的 HTML\n在任何页面中作为 Web Components 嵌入\n单页应用 (SPA)\n全栈 / 服务端渲染 (SSR)\nJamstack / 静态站点生成 (SSG)\n开发桌面端、移动端、WebGL，甚至是命令行终端中的界面\n\n# 单页面应用 (SPA)\n单文件组件\nVue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里\n```\n\n```\n# 选项式 API (Options API)\n就是很多选项用来描述当前组件的\n\n# 生命周期钩子 \n\n# axios和jquery提供ajax通信功能\n\n# 构建工具 \nBabel webpack 模块打包器\n\n# mvvm\nview html css Templates \nviewModel javaScript // Compiler kuntime 即使运行\nModel java 数据库\n\n# 开发以后就是\n```angular2html\n\n```\n# 指令\nv-bind 绑定一些属性,特性就是了 \n```angular2html\n<h1 v-if =\"ok\">\n    \n</h1>\n```\n# 模板语法\n ```\n {{}}```\n1   <input type=\"text\" v-model.lazy=\"msg\">\n  <h>{{msg}}</h>\n```\n# 依赖注入\n在setup函数里面,要么是开始script要么是在后面的函数里面\n# provide ( )inject( 名字,和\"默认的值\"\")\napp.provide() 就是给全部的组件注入\n\n","source":"_posts/Vue.md","raw":"---\ntitle: Vue\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-08-29 11:56:36\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n\n# vue\n无需构建步骤，渐进式增强静态的 HTML\n在任何页面中作为 Web Components 嵌入\n单页应用 (SPA)\n全栈 / 服务端渲染 (SSR)\nJamstack / 静态站点生成 (SSG)\n开发桌面端、移动端、WebGL，甚至是命令行终端中的界面\n\n# 单页面应用 (SPA)\n单文件组件\nVue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里\n```\n\n```\n# 选项式 API (Options API)\n就是很多选项用来描述当前组件的\n\n# 生命周期钩子 \n\n# axios和jquery提供ajax通信功能\n\n# 构建工具 \nBabel webpack 模块打包器\n\n# mvvm\nview html css Templates \nviewModel javaScript // Compiler kuntime 即使运行\nModel java 数据库\n\n# 开发以后就是\n```angular2html\n\n```\n# 指令\nv-bind 绑定一些属性,特性就是了 \n```angular2html\n<h1 v-if =\"ok\">\n    \n</h1>\n```\n# 模板语法\n ```\n {{}}```\n1   <input type=\"text\" v-model.lazy=\"msg\">\n  <h>{{msg}}</h>\n```\n# 依赖注入\n在setup函数里面,要么是开始script要么是在后面的函数里面\n# provide ( )inject( 名字,和\"默认的值\"\")\napp.provide() 就是给全部的组件注入\n\n","slug":"Vue","published":1,"updated":"2023-10-29T12:21:06.904Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3l000053gu3cgrsbrkz","content":"<h1 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h1><p>无需构建步骤，渐进式增强静态的 HTML<br>在任何页面中作为 Web Components 嵌入<br>单页应用 (SPA)<br>全栈 / 服务端渲染 (SSR)<br>Jamstack / 静态站点生成 (SSG)<br>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</p>\n<h1 id=\"单页面应用-SPA\"><a href=\"#单页面应用-SPA\" class=\"headerlink\" title=\"单页面应用 (SPA)\"></a>单页面应用 (SPA)</h1><p>单文件组件<br>Vue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"选项式-API-Options-API\"><a href=\"#选项式-API-Options-API\" class=\"headerlink\" title=\"选项式 API (Options API)\"></a>选项式 API (Options API)</h1><p>就是很多选项用来描述当前组件的</p>\n<h1 id=\"生命周期钩子\"><a href=\"#生命周期钩子\" class=\"headerlink\" title=\"生命周期钩子\"></a>生命周期钩子</h1><h1 id=\"axios和jquery提供ajax通信功能\"><a href=\"#axios和jquery提供ajax通信功能\" class=\"headerlink\" title=\"axios和jquery提供ajax通信功能\"></a>axios和jquery提供ajax通信功能</h1><h1 id=\"构建工具\"><a href=\"#构建工具\" class=\"headerlink\" title=\"构建工具\"></a>构建工具</h1><p>Babel webpack 模块打包器</p>\n<h1 id=\"mvvm\"><a href=\"#mvvm\" class=\"headerlink\" title=\"mvvm\"></a>mvvm</h1><p>view html css Templates<br>viewModel javaScript // Compiler kuntime 即使运行<br>Model java 数据库</p>\n<h1 id=\"开发以后就是\"><a href=\"#开发以后就是\" class=\"headerlink\" title=\"开发以后就是\"></a>开发以后就是</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h1><p>v-bind 绑定一些属性,特性就是了 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 v-if =&quot;ok&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"模板语法\"><a href=\"#模板语法\" class=\"headerlink\" title=\"模板语法\"></a>模板语法</h1> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#123;&#123;&#125;&#125;```</span><br><span class=\"line\">1   &lt;input type=&quot;text&quot; v-model.lazy=&quot;msg&quot;&gt;</span><br><span class=\"line\">  &lt;h&gt;&#123;&#123;msg&#125;&#125;&lt;/h&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"依赖注入\"><a href=\"#依赖注入\" class=\"headerlink\" title=\"依赖注入\"></a>依赖注入</h1><p>在setup函数里面,要么是开始script要么是在后面的函数里面</p>\n<h1 id=\"provide-inject-名字-和”默认的值””\"><a href=\"#provide-inject-名字-和”默认的值””\" class=\"headerlink\" title=\"provide ( )inject( 名字,和”默认的值””)\"></a>provide ( )inject( 名字,和”默认的值””)</h1><p>app.provide() 就是给全部的组件注入</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h1 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h1><p>无需构建步骤，渐进式增强静态的 HTML<br>在任何页面中作为 Web Components 嵌入<br>单页应用 (SPA)<br>全栈 / 服务端渲染 (SSR)<br>Jamstack / 静态站点生成 (SSG)<br>开发桌面端、移动端、WebGL，甚至是命令行终端中的界面</p>\n<h1 id=\"单页面应用-SPA\"><a href=\"#单页面应用-SPA\" class=\"headerlink\" title=\"单页面应用 (SPA)\"></a>单页面应用 (SPA)</h1><p>单文件组件<br>Vue 的单文件组件会将一个组件的逻辑 (JavaScript)，模板 (HTML) 和样式 (CSS) 封装在同一个文件里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"选项式-API-Options-API\"><a href=\"#选项式-API-Options-API\" class=\"headerlink\" title=\"选项式 API (Options API)\"></a>选项式 API (Options API)</h1><p>就是很多选项用来描述当前组件的</p>\n<h1 id=\"生命周期钩子\"><a href=\"#生命周期钩子\" class=\"headerlink\" title=\"生命周期钩子\"></a>生命周期钩子</h1><h1 id=\"axios和jquery提供ajax通信功能\"><a href=\"#axios和jquery提供ajax通信功能\" class=\"headerlink\" title=\"axios和jquery提供ajax通信功能\"></a>axios和jquery提供ajax通信功能</h1><h1 id=\"构建工具\"><a href=\"#构建工具\" class=\"headerlink\" title=\"构建工具\"></a>构建工具</h1><p>Babel webpack 模块打包器</p>\n<h1 id=\"mvvm\"><a href=\"#mvvm\" class=\"headerlink\" title=\"mvvm\"></a>mvvm</h1><p>view html css Templates<br>viewModel javaScript // Compiler kuntime 即使运行<br>Model java 数据库</p>\n<h1 id=\"开发以后就是\"><a href=\"#开发以后就是\" class=\"headerlink\" title=\"开发以后就是\"></a>开发以后就是</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h1><p>v-bind 绑定一些属性,特性就是了 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 v-if =&quot;ok&quot;&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"模板语法\"><a href=\"#模板语法\" class=\"headerlink\" title=\"模板语法\"></a>模板语法</h1> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#123;&#123;&#125;&#125;```</span><br><span class=\"line\">1   &lt;input type=&quot;text&quot; v-model.lazy=&quot;msg&quot;&gt;</span><br><span class=\"line\">  &lt;h&gt;&#123;&#123;msg&#125;&#125;&lt;/h&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"依赖注入\"><a href=\"#依赖注入\" class=\"headerlink\" title=\"依赖注入\"></a>依赖注入</h1><p>在setup函数里面,要么是开始script要么是在后面的函数里面</p>\n<h1 id=\"provide-inject-名字-和”默认的值””\"><a href=\"#provide-inject-名字-和”默认的值””\" class=\"headerlink\" title=\"provide ( )inject( 名字,和”默认的值””)\"></a>provide ( )inject( 名字,和”默认的值””)</h1><p>app.provide() 就是给全部的组件注入</p>\n"},{"title":"baseCss","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2024-03-15T09:15:49.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"# 1.1css可以继承和不可以继承的属性有那些\n## 1.1.1不可以继承的属性以及具体解释\n- display\n- margin\n- border\n-文本属性\n- 盒子模型的属性 weight height margin border padding \n- 背景属性 background background-color background-image background-repeat background-attachment background-position\n- 定位属性 position float clear z-index\n- 生成内容属性 content\n- 轮廓 outline-color outline-style outline-width outline\n- 页面样式属性 page-break-before page-break-after page-break-inside\n- 光标属性 cursor cursor\n- 阴影属性 box-shadow text-shadow\n- 声音样式属性 speak pause rest\n\n## 1.1.2可以继承的属性以及具体解释\n- 字体属性 font font-style font-variant font-weight font-size line-height font-family\n- 文本属性 text-align text-indent text-decoration text-transform letter-spacing word-spacing white-space'\n- 元素可见性 visibility\n- 表格布局属性 border-collapse border-spacing caption-side empty-cells table-layout\n- 光标属性 cursor\n\n# 2.1 display block inline he inline-block  的区别\n## 2.1.1 display block\n- block元素会在新的一行开始，宽度自动填满其父元素宽度\n- block元素可以设置宽高，margin和padding属性\n- block元素可以容纳内联元素和其他块元素\n\n## 2.1.2 display inline\n- inline元素不会在新的一行开始\n- inline元素的宽度不可设置，宽度随内容而定\n- inline元素的高度不可设置，高度随内容而定\n\n## 2.1.3 display inline-block\n- inline-block元素不会在新的一行开始\n- inline-block元素的宽度和高度可以设置\n- (1)行内 设置宽高无效,可以设置margin和padding 不能设置垂直方向的 不会自动换行\n- (2)块级 设置宽高有效,可以设置margin和padding 设置margin 和padding 可以自动换行 多个块级\n  [看看效果捏](../ZONE/love.html)\n\n# 3.1 隐藏元素方法\n## 3.1.1 display:none\n- display:none 隐藏元素，不占据空间\n\n## 3.1.2 visibility:hidden\n- visibility:hidden 隐藏元素，但是占据空间\n\n## 3.1.3 opacity:0\n- opacity:0 隐藏元素，但是占据空间\n\n## 3.1.4 position:absolute;left:-9999px\n- position:absolute;left:-9999px 隐藏元素，但是占据空间\n\n## 3.1.5 height:0;width:0\n- height:0;width:0 隐藏元素，但是占据空间\n\n\n","source":"_posts/baseCss.md","raw":"---\ntitle: baseCss\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2024-03-15 17:15:49\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n# 1.1css可以继承和不可以继承的属性有那些\n## 1.1.1不可以继承的属性以及具体解释\n- display\n- margin\n- border\n-文本属性\n- 盒子模型的属性 weight height margin border padding \n- 背景属性 background background-color background-image background-repeat background-attachment background-position\n- 定位属性 position float clear z-index\n- 生成内容属性 content\n- 轮廓 outline-color outline-style outline-width outline\n- 页面样式属性 page-break-before page-break-after page-break-inside\n- 光标属性 cursor cursor\n- 阴影属性 box-shadow text-shadow\n- 声音样式属性 speak pause rest\n\n## 1.1.2可以继承的属性以及具体解释\n- 字体属性 font font-style font-variant font-weight font-size line-height font-family\n- 文本属性 text-align text-indent text-decoration text-transform letter-spacing word-spacing white-space'\n- 元素可见性 visibility\n- 表格布局属性 border-collapse border-spacing caption-side empty-cells table-layout\n- 光标属性 cursor\n\n# 2.1 display block inline he inline-block  的区别\n## 2.1.1 display block\n- block元素会在新的一行开始，宽度自动填满其父元素宽度\n- block元素可以设置宽高，margin和padding属性\n- block元素可以容纳内联元素和其他块元素\n\n## 2.1.2 display inline\n- inline元素不会在新的一行开始\n- inline元素的宽度不可设置，宽度随内容而定\n- inline元素的高度不可设置，高度随内容而定\n\n## 2.1.3 display inline-block\n- inline-block元素不会在新的一行开始\n- inline-block元素的宽度和高度可以设置\n- (1)行内 设置宽高无效,可以设置margin和padding 不能设置垂直方向的 不会自动换行\n- (2)块级 设置宽高有效,可以设置margin和padding 设置margin 和padding 可以自动换行 多个块级\n  [看看效果捏](../ZONE/love.html)\n\n# 3.1 隐藏元素方法\n## 3.1.1 display:none\n- display:none 隐藏元素，不占据空间\n\n## 3.1.2 visibility:hidden\n- visibility:hidden 隐藏元素，但是占据空间\n\n## 3.1.3 opacity:0\n- opacity:0 隐藏元素，但是占据空间\n\n## 3.1.4 position:absolute;left:-9999px\n- position:absolute;left:-9999px 隐藏元素，但是占据空间\n\n## 3.1.5 height:0;width:0\n- height:0;width:0 隐藏元素，但是占据空间\n\n\n","slug":"baseCss","published":1,"updated":"2024-03-15T10:52:55.576Z","_id":"cltsgp3l100073gu3aa4me3nd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1-1css可以继承和不可以继承的属性有那些\"><a href=\"#1-1css可以继承和不可以继承的属性有那些\" class=\"headerlink\" title=\"1.1css可以继承和不可以继承的属性有那些\"></a>1.1css可以继承和不可以继承的属性有那些</h1><h2 id=\"1-1-1不可以继承的属性以及具体解释\"><a href=\"#1-1-1不可以继承的属性以及具体解释\" class=\"headerlink\" title=\"1.1.1不可以继承的属性以及具体解释\"></a>1.1.1不可以继承的属性以及具体解释</h2><ul>\n<li>display</li>\n<li>margin</li>\n<li>border</li>\n<li>文本属性</li>\n<li>盒子模型的属性 weight height margin border padding </li>\n<li>背景属性 background background-color background-image background-repeat background-attachment background-position</li>\n<li>定位属性 position float clear z-index</li>\n<li>生成内容属性 content</li>\n<li>轮廓 outline-color outline-style outline-width outline</li>\n<li>页面样式属性 page-break-before page-break-after page-break-inside</li>\n<li>光标属性 cursor cursor</li>\n<li>阴影属性 box-shadow text-shadow</li>\n<li>声音样式属性 speak pause rest</li>\n</ul>\n<h2 id=\"1-1-2可以继承的属性以及具体解释\"><a href=\"#1-1-2可以继承的属性以及具体解释\" class=\"headerlink\" title=\"1.1.2可以继承的属性以及具体解释\"></a>1.1.2可以继承的属性以及具体解释</h2><ul>\n<li>字体属性 font font-style font-variant font-weight font-size line-height font-family</li>\n<li>文本属性 text-align text-indent text-decoration text-transform letter-spacing word-spacing white-space’</li>\n<li>元素可见性 visibility</li>\n<li>表格布局属性 border-collapse border-spacing caption-side empty-cells table-layout</li>\n<li>光标属性 cursor</li>\n</ul>\n<h1 id=\"2-1-display-block-inline-he-inline-block-的区别\"><a href=\"#2-1-display-block-inline-he-inline-block-的区别\" class=\"headerlink\" title=\"2.1 display block inline he inline-block  的区别\"></a>2.1 display block inline he inline-block  的区别</h1><h2 id=\"2-1-1-display-block\"><a href=\"#2-1-1-display-block\" class=\"headerlink\" title=\"2.1.1 display block\"></a>2.1.1 display block</h2><ul>\n<li>block元素会在新的一行开始，宽度自动填满其父元素宽度</li>\n<li>block元素可以设置宽高，margin和padding属性</li>\n<li>block元素可以容纳内联元素和其他块元素</li>\n</ul>\n<h2 id=\"2-1-2-display-inline\"><a href=\"#2-1-2-display-inline\" class=\"headerlink\" title=\"2.1.2 display inline\"></a>2.1.2 display inline</h2><ul>\n<li>inline元素不会在新的一行开始</li>\n<li>inline元素的宽度不可设置，宽度随内容而定</li>\n<li>inline元素的高度不可设置，高度随内容而定</li>\n</ul>\n<h2 id=\"2-1-3-display-inline-block\"><a href=\"#2-1-3-display-inline-block\" class=\"headerlink\" title=\"2.1.3 display inline-block\"></a>2.1.3 display inline-block</h2><ul>\n<li>inline-block元素不会在新的一行开始</li>\n<li>inline-block元素的宽度和高度可以设置</li>\n<li>(1)行内 设置宽高无效,可以设置margin和padding 不能设置垂直方向的 不会自动换行</li>\n<li>(2)块级 设置宽高有效,可以设置margin和padding 设置margin 和padding 可以自动换行 多个块级<br><a href=\"../ZONE/love.html\">看看效果捏</a></li>\n</ul>\n<h1 id=\"3-1-隐藏元素方法\"><a href=\"#3-1-隐藏元素方法\" class=\"headerlink\" title=\"3.1 隐藏元素方法\"></a>3.1 隐藏元素方法</h1><h2 id=\"3-1-1-display-none\"><a href=\"#3-1-1-display-none\" class=\"headerlink\" title=\"3.1.1 display:none\"></a>3.1.1 display:none</h2><ul>\n<li>display:none 隐藏元素，不占据空间</li>\n</ul>\n<h2 id=\"3-1-2-visibility-hidden\"><a href=\"#3-1-2-visibility-hidden\" class=\"headerlink\" title=\"3.1.2 visibility:hidden\"></a>3.1.2 visibility:hidden</h2><ul>\n<li>visibility:hidden 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-3-opacity-0\"><a href=\"#3-1-3-opacity-0\" class=\"headerlink\" title=\"3.1.3 opacity:0\"></a>3.1.3 opacity:0</h2><ul>\n<li>opacity:0 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-4-position-absolute-left-9999px\"><a href=\"#3-1-4-position-absolute-left-9999px\" class=\"headerlink\" title=\"3.1.4 position:absolute;left:-9999px\"></a>3.1.4 position:absolute;left:-9999px</h2><ul>\n<li>position:absolute;left:-9999px 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-5-height-0-width-0\"><a href=\"#3-1-5-height-0-width-0\" class=\"headerlink\" title=\"3.1.5 height:0;width:0\"></a>3.1.5 height:0;width:0</h2><ul>\n<li>height:0;width:0 隐藏元素，但是占据空间</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h1 id=\"1-1css可以继承和不可以继承的属性有那些\"><a href=\"#1-1css可以继承和不可以继承的属性有那些\" class=\"headerlink\" title=\"1.1css可以继承和不可以继承的属性有那些\"></a>1.1css可以继承和不可以继承的属性有那些</h1><h2 id=\"1-1-1不可以继承的属性以及具体解释\"><a href=\"#1-1-1不可以继承的属性以及具体解释\" class=\"headerlink\" title=\"1.1.1不可以继承的属性以及具体解释\"></a>1.1.1不可以继承的属性以及具体解释</h2><ul>\n<li>display</li>\n<li>margin</li>\n<li>border</li>\n<li>文本属性</li>\n<li>盒子模型的属性 weight height margin border padding </li>\n<li>背景属性 background background-color background-image background-repeat background-attachment background-position</li>\n<li>定位属性 position float clear z-index</li>\n<li>生成内容属性 content</li>\n<li>轮廓 outline-color outline-style outline-width outline</li>\n<li>页面样式属性 page-break-before page-break-after page-break-inside</li>\n<li>光标属性 cursor cursor</li>\n<li>阴影属性 box-shadow text-shadow</li>\n<li>声音样式属性 speak pause rest</li>\n</ul>\n<h2 id=\"1-1-2可以继承的属性以及具体解释\"><a href=\"#1-1-2可以继承的属性以及具体解释\" class=\"headerlink\" title=\"1.1.2可以继承的属性以及具体解释\"></a>1.1.2可以继承的属性以及具体解释</h2><ul>\n<li>字体属性 font font-style font-variant font-weight font-size line-height font-family</li>\n<li>文本属性 text-align text-indent text-decoration text-transform letter-spacing word-spacing white-space’</li>\n<li>元素可见性 visibility</li>\n<li>表格布局属性 border-collapse border-spacing caption-side empty-cells table-layout</li>\n<li>光标属性 cursor</li>\n</ul>\n<h1 id=\"2-1-display-block-inline-he-inline-block-的区别\"><a href=\"#2-1-display-block-inline-he-inline-block-的区别\" class=\"headerlink\" title=\"2.1 display block inline he inline-block  的区别\"></a>2.1 display block inline he inline-block  的区别</h1><h2 id=\"2-1-1-display-block\"><a href=\"#2-1-1-display-block\" class=\"headerlink\" title=\"2.1.1 display block\"></a>2.1.1 display block</h2><ul>\n<li>block元素会在新的一行开始，宽度自动填满其父元素宽度</li>\n<li>block元素可以设置宽高，margin和padding属性</li>\n<li>block元素可以容纳内联元素和其他块元素</li>\n</ul>\n<h2 id=\"2-1-2-display-inline\"><a href=\"#2-1-2-display-inline\" class=\"headerlink\" title=\"2.1.2 display inline\"></a>2.1.2 display inline</h2><ul>\n<li>inline元素不会在新的一行开始</li>\n<li>inline元素的宽度不可设置，宽度随内容而定</li>\n<li>inline元素的高度不可设置，高度随内容而定</li>\n</ul>\n<h2 id=\"2-1-3-display-inline-block\"><a href=\"#2-1-3-display-inline-block\" class=\"headerlink\" title=\"2.1.3 display inline-block\"></a>2.1.3 display inline-block</h2><ul>\n<li>inline-block元素不会在新的一行开始</li>\n<li>inline-block元素的宽度和高度可以设置</li>\n<li>(1)行内 设置宽高无效,可以设置margin和padding 不能设置垂直方向的 不会自动换行</li>\n<li>(2)块级 设置宽高有效,可以设置margin和padding 设置margin 和padding 可以自动换行 多个块级<br><a href=\"../ZONE/love.html\">看看效果捏</a></li>\n</ul>\n<h1 id=\"3-1-隐藏元素方法\"><a href=\"#3-1-隐藏元素方法\" class=\"headerlink\" title=\"3.1 隐藏元素方法\"></a>3.1 隐藏元素方法</h1><h2 id=\"3-1-1-display-none\"><a href=\"#3-1-1-display-none\" class=\"headerlink\" title=\"3.1.1 display:none\"></a>3.1.1 display:none</h2><ul>\n<li>display:none 隐藏元素，不占据空间</li>\n</ul>\n<h2 id=\"3-1-2-visibility-hidden\"><a href=\"#3-1-2-visibility-hidden\" class=\"headerlink\" title=\"3.1.2 visibility:hidden\"></a>3.1.2 visibility:hidden</h2><ul>\n<li>visibility:hidden 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-3-opacity-0\"><a href=\"#3-1-3-opacity-0\" class=\"headerlink\" title=\"3.1.3 opacity:0\"></a>3.1.3 opacity:0</h2><ul>\n<li>opacity:0 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-4-position-absolute-left-9999px\"><a href=\"#3-1-4-position-absolute-left-9999px\" class=\"headerlink\" title=\"3.1.4 position:absolute;left:-9999px\"></a>3.1.4 position:absolute;left:-9999px</h2><ul>\n<li>position:absolute;left:-9999px 隐藏元素，但是占据空间</li>\n</ul>\n<h2 id=\"3-1-5-height-0-width-0\"><a href=\"#3-1-5-height-0-width-0\" class=\"headerlink\" title=\"3.1.5 height:0;width:0\"></a>3.1.5 height:0;width:0</h2><ul>\n<li>height:0;width:0 隐藏元素，但是占据空间</li>\n</ul>\n"},{"title":"js1","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-04-17T15:45:00.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"## 客户端web api\n当你给网页或者网页应用编写客户端的 JavaScript 时，你很快会遇上应用程序接口（API）—— 这些编程特性可用来操控网站所基于的浏览器与操作系统的不同方面，或是操控由其他网站或服务端传来的数据。在这个单元里，我们将一同探索什么是 API，以及如何使用一些在你开发中将经常遇见的 API。\n\n###web aip简介\nJavaScript——一种内置于浏览器的高级脚本语言，你可以用来实现 Web 页面/应用中的功能。注意 JavaScript 也可用于其他像 Node 这样的的编程环境。但现在你不必考虑这些。\n客户端 API — 内置于浏览器的结构程序，位于 JavaScript 语言顶部，使您可以更容易的实现功能。\n第三方 API — 置于第三方普通的结构程序（例如 Twitter，Facebook），使您可以在自己的 Web 页面中使用那些平台的某些功能（例如在您的 Web 页面显示最新的 Tweets）。\nJavaScript 库 — 通常是包含具有特定功能的一个或多个 JavaScript 文件，把这些文件关联到您的 Web 页以快速或授权编写常见的功能。例如包含 jQuery 和 Mootools\nJavaScript 框架 — 从库开始的下一步，JavaScript 框架视图把 HTML、CSS、JavaScript 和其他安装的技术打包在一起，然后用来从头编写一个完整的 Web 应用\n\n###API 如何工作？\nAPI 使用一个或多个 JavaScript objects 在您的代码中进行交互，这些对象用作 API 使用的数据（包含在对象属性中）的容器以及 API 提供的功能（包含在对象方法中）。\n\napi 是基于对象的.这些对象就是作为用作api使用的数据.的容器\n以及api提供的功能\ngeolocation的例子.这是一个非常简单的api.对象就是geolocation\nposition coordinates coordinates包括有关设备的\n大量有用的数据.包括经纬度,高度,运动速度,以及运动方向\n使用井号（#）来创建标题，井号的数量对应标题的级别。例如，使用三个井号（###）来创建三级标题（<h3>）。\n使用空行来分隔段落，不要使用空格或制表符来缩进段落。\n使用两个或更多的空格加上回车来创建换行或新行（<br>）。\n使用反引号（`）来创建内联代码，或者使用三个反引号（```）来创建代码块。\n根据这些规则，我可以把你的内容变成这样：\n\n# bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api\n\napi 就是应用程序接口她们就是抽象了复杂的代码.提供一些简单的接口规则直接使用, 让开发人员简单的创建复杂的功能,其实就是封装了一些代码,变的好用且简单了不少\n\n客户端里面web api 操作文档api\n\n## 1 document对象\n\n## 2 bom window对象里\n\n### window对象\n\n简介: 在浏览器里面的全局的一些对象和属性,可以改变就是浏览器里面的一些基本的属性\n\n1. 在gloabl作用域里面; `var sayage=() =>alert(this.age); var age = 29;` 在这样的定义下就会全变成window对象的属性,包含在里面\n2. 窗口关系\n3. 大小\n4. 视口位置,就是内阁滚轮控制的界面\n5. 导航和打开新的界面\n6. 定时器 `settimeout(字符串或者函数,时间);` 比较常用的就是`if(a< b) { settimeout (x,x)}`就是限制了不少不会一直不停的干下去\n   7.系统对话框`alert` 显示 `confirm` 确定 `prompt` 输入文本三个方法里面就是了\n\nconst 和let 就是不会添加到window对象里面,var 就会,区分使用就好了\n\n### 1 narvigator\n\n1. 检测插件\n2. 注册处理系统\n3. 负责提供浏览器的信息.例如就是名称平台.语言.它可以检查浏览器是否支持一些特性 例如jsva,cookie.vr等.可以使用window.navigator属性来访问navigator对象.\n\n   `javaEnabled()` 返回一个布尔值，表示浏览器是否启用了Java\n   `taintEnabled()` 返回一个布尔值，表示浏览器是否启用了数据污染\n   `vibrate()` 使设备振动一定的时间\n   `registerProtocolHandler()` 注册一个自定义的协议处理器\n   `requestMediaKeySystemAccess()` 请求一个媒体密钥系统的访问对象\n\n   属性 描述\n   `appCodeName` 返回浏览器的代码名\n   `appName` 返回浏览器的名称\n   `appVersion` 返回浏览器的版本信息\n   `cookieEnabled` 返回一个布尔值，表示浏览器是否启用了Cookie\n   `geolocation` 返回一个Geolocation对象，用于获取设备的地理位置信息\n   `language` 返回浏览器的首选语言\n   `onLine` 返回一个布尔\n\n\n\n\n井字棋   2023/5/4 \n1 js 箭头函数\n箭头函数是ES6引入的一种新的函数声明方式，可以让我们更方便地创建函数。\n\n箭头函数的语法形式如下：\n\nCopy\n(parameters) => { statements }\n其中，parameters表示函数的参数列表，可以是一个或多个参数。如果没有参数，则必须使用空括号表示。statements是函数体，可以是一条语句或多条语句。\n\n箭头函数有以下特点：\n\n简洁的语法形式：箭头函数可以使用更简洁的语法形式来定义函数，例如省略了function关键字和return关键字。\n\n没有自己的this对象：箭头函数没有自己的this对象，它会继承父级作用域的this对象。这意味着，在箭头函数内部，this指向的是定义该箭头函数的父级作用域的this，而不是箭头函数自己的this。\n\n不能作为构造函数：由于箭头函数没有自己的this对象，因此不能用作构造函数。\n\n下面是一些使用箭头函数的示例：\n\njavascript\nCopy\n// 一个简单的箭头函数\nconst add = (a, b) => a + b;\n\n// 箭头函数作为回调函数\nconst arr = [1, 2, 3];\nconst newArr = arr.map(item => item * 2);\n\n// 箭头函数内部使用父级作用域的this对象\n\nconst obj = {\nname: 'Sage',\ngetName: function() {\nreturn () => console.log(this.name);\n}\n};\nconst func = obj.getName();\nfunc(); // 输出：Sage\n需要注意的是，由于箭头函数没有自己的this对象，因此不能使用call()、apply()、bind()等方法来改变this的指向。\n\neg: 就是简单的函数的定义啥的\n\n//箭头函数不能用构造器,new错误\nvar Foo = () =>{};\nvar Foo = () => {};\nvar foo = new Foo(); // TypeError: Foo is not a constructor\n其实就是箭头函数不能作为构造函数,没有自己的this对象,导致就是不能构造函数,如果创建一个可以用来构造函数的函数就是要使用普通函数而不是箭头函数,例如下面的一个可以构造函数的\n// var Foo =() => {};\n// var foo = new Foo();//这样是不能构造函数的\nfunction Foo()\n{\nthis.bar = 'hello';\n}\nvar foo = new Foo();\nconsole.log(foo.bar);\n//着就是号了就是简单的前面的没this对象罢了\n\n5/5\n1 是什么?\n是一个申明式的,高效的灵活的用于构建用户界面的js库,用react\n可以把一些简单的独立的代码片段组合成复杂 的ui界面,这些代码片段就是组件\nclass ShoppingList  extends React.Component {\n//    就是组件类\nrender() /*render方法返回你希望*/{\nreturn (\n<div className=\"shopping-list\">\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n<li>Instagram</li>\n<li>WhatsApp</li>\n<li>Oculus</li>\n</ul>\n</div>\n);\n}\n}\n\n\n5/6\n\nclass Square extends React.Component {\nrender() {\nreturn (\n//渲染出来一个单独的button\n<button className=\"square\">\n{/* TODO */}\n</button>\n);\n}\n}\n\n\n//渲染出九个方块\nclass Board extends React.Component {\nrenderSquare(i) {\nreturn <Square />;\n}\n\nrender() {\nconst status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n}\n}\n//含有默认值的一个棋盘\nclass Game extends React.Component {\nrender() {\nreturn (\n<div className=\"game\">\n<div className=\"game-board\">\n<Board />\n</div>\n<div className=\"game-info\">\n<div>{/* status */}</div>\n<ol>{/* TODO */}</ol>\n</div>\n</div>\n);\n}\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\n\n5/9\n// 定义 Square 组件，表示每个格子\nclass Square extends React.Component {\nrender() {\n// 通过 props 获取格子的值和点击事件处理函数\nreturn (\n<button className=\"square\" onClick={() => this.props.onClick()}>\n{this.props.value}\n</button>\n);\n}\n}\n\n// 定义 Board 组件，表示游戏棋盘\nclass Board extends React.Component {\n// 渲染每个格子\nrenderSquare(i) {\n// 通过 props 获取当前格子的值和点击事件处理函数\nreturn (\n<Square\nvalue={this.props.squares[i]}\nonClick={() => this.props.onClick(i)}\n/>\n);\n}\n\n    render() {\n        // 渲染九宫格\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\n// 定义 Game 组件，表示游戏主界面\nclass Game extends React.Component {\nconstructor(props) {\nsuper(props);\n// 初始化状态\nthis.state = {\nhistory: [\n{\nsquares: Array(9).fill(null),\n},\n],\nstepNumber: 0,\nxIsNext: true,\n};\n}\n\n    // 点击事件处理函数，更新状态\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            // 如果已经有一方获胜或者当前格子已经有值了，则不做任何操作\n            return;\n        }\n\n        // 更新当前格子的值\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n        // 更新状态\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares,\n                },\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    // 跳转到指定步数\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        // 渲染历史记录\n        const moves = history.map((step, move) => {\n            const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        // 渲染游戏界面\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// 判断是否有获胜者\nfunction calculateWinner(squares) {\nconst lines = [\n[0, 1, 2],\n[3, 4, 5],\n[6, 7, 8],\n[0, 3, 6],\n[1, 4, 7],\n[2, 5, 8],\n[0, 4, 8],\n[2, 4, 6],\n];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n\n    return null;\n}\n\n// 渲染游戏界面\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\n通过这篇教程，我们接触了 React 中的一些概念，比如 React 元素、React 组件、props，还有 state。\n\n\njsx 简介\nconst element = <h1>hello,world </h1>;\n是js 的一个语法扩展,描述ui应该有交互的本质形式.jsx也是可以生成react元素,在探讨就是怎么渲染位dom,本质上喝其他 的ui逻辑内在耦合,比如就是胡在ui里面需要绑定的处理事件,在js代码里面就是jsx和ui放在一起会在视觉上会有辅助作用\njsx就是一个把js和ui结构和样式结合起来的一个扩展,它使得创建react组件变得非常容易和直观\nconst name = 'Josh Perez';\nconst element = <h1>hello,{name}</h1>;\nfunction formatName(user)\n{\n\n}\n希望看见的内容/\n\n5/22\n组件\njs创建组件\n1 函数组件\n必须大写开头,必须返回值\n表单处理\n受控组件的表单处理\n表单元素,表单元素里面的可变的状态,再setstate里面修改\n\n2 步骤\nstate ={text:' sdf'}\n3 文本框\ninput\ntextarea value = this.state.constent\nselect 下拉框  \n表单的受控组件\n\n1 添加就是name = state.txt\n2 表单的类型获取 属性的值\n3 再chang事件里面就是秀给name'该对应的state\n\n\n项目的介绍\n\n1 \n这个礼拜的内容就是做出来一个项目了\n2 \n\n\n5/23\nclass Main{\npublic boolean isNumber (String s ){\ns = s.trim();\n// 1 拿到数组以后就是把首位的空额\nif(s.length() == 0)\nreturn false;\n// 2 如过就是空数组的话就是false\n\n        boolean numFlag = false;\n        //1 数字的话就是对的,但是如果的符号位的话就是只会出现在\n        // 第一位或者指数后面的第一位\n        boolean dotFlat  = false;\n        boolean eFlag= false;\n\n\n        for (int i = 0; i < s.length(); i++) {\n\n            char ch = s.charAt(i);\n            if(ch >= '0' && ch <= '9'){\n                numFlag = true;\n\n                //判断就是数字还是啥的\n            }else if(ch == '+' || ch =='-'){\n                if(i != 0 && s.charAt(i - 1) != 'e' && s.charAt(i - 1 ) !=\n                'E')\n                    return false;\n\n                //如果是+-号的话就是判断是不是就是\n                //只会出现在第一位和e E的后面才会出现\n                \n            }else if (ch == '.'){\n                //2 只能出现一次而且不能出现在指数后面\n                // 就是一开始的dotFlat会是false 而且就是eflag是false\n                if(dotFlat || eFlag){\n//                    dotFlat = true;\nreturn false;\n}\nelse dotFlat = true;//\n//就是小数点的问题//.. 会出现问题就是说喽如果.\n//出现的话就是变成true就好了\n\n            }else if(ch == 'e' || ch =='E'){\n                if(!numFlag || eFlag) {\n                    return false;\n                    // e 前面要有数后面叶要数\n                }\n                    eFlag = true;\n                    numFlag = false;//后面没数的话就会变的false//简直就是天才\n                }  else {\n                    return false;\n                }\n            }\n\n\n         return numFlag;\n        }\n\n\n\n\n","source":"_posts/dayandday.md","raw":"---\ntitle: js1\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-04-17 23:45:00\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n## 客户端web api\n当你给网页或者网页应用编写客户端的 JavaScript 时，你很快会遇上应用程序接口（API）—— 这些编程特性可用来操控网站所基于的浏览器与操作系统的不同方面，或是操控由其他网站或服务端传来的数据。在这个单元里，我们将一同探索什么是 API，以及如何使用一些在你开发中将经常遇见的 API。\n\n###web aip简介\nJavaScript——一种内置于浏览器的高级脚本语言，你可以用来实现 Web 页面/应用中的功能。注意 JavaScript 也可用于其他像 Node 这样的的编程环境。但现在你不必考虑这些。\n客户端 API — 内置于浏览器的结构程序，位于 JavaScript 语言顶部，使您可以更容易的实现功能。\n第三方 API — 置于第三方普通的结构程序（例如 Twitter，Facebook），使您可以在自己的 Web 页面中使用那些平台的某些功能（例如在您的 Web 页面显示最新的 Tweets）。\nJavaScript 库 — 通常是包含具有特定功能的一个或多个 JavaScript 文件，把这些文件关联到您的 Web 页以快速或授权编写常见的功能。例如包含 jQuery 和 Mootools\nJavaScript 框架 — 从库开始的下一步，JavaScript 框架视图把 HTML、CSS、JavaScript 和其他安装的技术打包在一起，然后用来从头编写一个完整的 Web 应用\n\n###API 如何工作？\nAPI 使用一个或多个 JavaScript objects 在您的代码中进行交互，这些对象用作 API 使用的数据（包含在对象属性中）的容器以及 API 提供的功能（包含在对象方法中）。\n\napi 是基于对象的.这些对象就是作为用作api使用的数据.的容器\n以及api提供的功能\ngeolocation的例子.这是一个非常简单的api.对象就是geolocation\nposition coordinates coordinates包括有关设备的\n大量有用的数据.包括经纬度,高度,运动速度,以及运动方向\n使用井号（#）来创建标题，井号的数量对应标题的级别。例如，使用三个井号（###）来创建三级标题（<h3>）。\n使用空行来分隔段落，不要使用空格或制表符来缩进段落。\n使用两个或更多的空格加上回车来创建换行或新行（<br>）。\n使用反引号（`）来创建内联代码，或者使用三个反引号（```）来创建代码块。\n根据这些规则，我可以把你的内容变成这样：\n\n# bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api\n\napi 就是应用程序接口她们就是抽象了复杂的代码.提供一些简单的接口规则直接使用, 让开发人员简单的创建复杂的功能,其实就是封装了一些代码,变的好用且简单了不少\n\n客户端里面web api 操作文档api\n\n## 1 document对象\n\n## 2 bom window对象里\n\n### window对象\n\n简介: 在浏览器里面的全局的一些对象和属性,可以改变就是浏览器里面的一些基本的属性\n\n1. 在gloabl作用域里面; `var sayage=() =>alert(this.age); var age = 29;` 在这样的定义下就会全变成window对象的属性,包含在里面\n2. 窗口关系\n3. 大小\n4. 视口位置,就是内阁滚轮控制的界面\n5. 导航和打开新的界面\n6. 定时器 `settimeout(字符串或者函数,时间);` 比较常用的就是`if(a< b) { settimeout (x,x)}`就是限制了不少不会一直不停的干下去\n   7.系统对话框`alert` 显示 `confirm` 确定 `prompt` 输入文本三个方法里面就是了\n\nconst 和let 就是不会添加到window对象里面,var 就会,区分使用就好了\n\n### 1 narvigator\n\n1. 检测插件\n2. 注册处理系统\n3. 负责提供浏览器的信息.例如就是名称平台.语言.它可以检查浏览器是否支持一些特性 例如jsva,cookie.vr等.可以使用window.navigator属性来访问navigator对象.\n\n   `javaEnabled()` 返回一个布尔值，表示浏览器是否启用了Java\n   `taintEnabled()` 返回一个布尔值，表示浏览器是否启用了数据污染\n   `vibrate()` 使设备振动一定的时间\n   `registerProtocolHandler()` 注册一个自定义的协议处理器\n   `requestMediaKeySystemAccess()` 请求一个媒体密钥系统的访问对象\n\n   属性 描述\n   `appCodeName` 返回浏览器的代码名\n   `appName` 返回浏览器的名称\n   `appVersion` 返回浏览器的版本信息\n   `cookieEnabled` 返回一个布尔值，表示浏览器是否启用了Cookie\n   `geolocation` 返回一个Geolocation对象，用于获取设备的地理位置信息\n   `language` 返回浏览器的首选语言\n   `onLine` 返回一个布尔\n\n\n\n\n井字棋   2023/5/4 \n1 js 箭头函数\n箭头函数是ES6引入的一种新的函数声明方式，可以让我们更方便地创建函数。\n\n箭头函数的语法形式如下：\n\nCopy\n(parameters) => { statements }\n其中，parameters表示函数的参数列表，可以是一个或多个参数。如果没有参数，则必须使用空括号表示。statements是函数体，可以是一条语句或多条语句。\n\n箭头函数有以下特点：\n\n简洁的语法形式：箭头函数可以使用更简洁的语法形式来定义函数，例如省略了function关键字和return关键字。\n\n没有自己的this对象：箭头函数没有自己的this对象，它会继承父级作用域的this对象。这意味着，在箭头函数内部，this指向的是定义该箭头函数的父级作用域的this，而不是箭头函数自己的this。\n\n不能作为构造函数：由于箭头函数没有自己的this对象，因此不能用作构造函数。\n\n下面是一些使用箭头函数的示例：\n\njavascript\nCopy\n// 一个简单的箭头函数\nconst add = (a, b) => a + b;\n\n// 箭头函数作为回调函数\nconst arr = [1, 2, 3];\nconst newArr = arr.map(item => item * 2);\n\n// 箭头函数内部使用父级作用域的this对象\n\nconst obj = {\nname: 'Sage',\ngetName: function() {\nreturn () => console.log(this.name);\n}\n};\nconst func = obj.getName();\nfunc(); // 输出：Sage\n需要注意的是，由于箭头函数没有自己的this对象，因此不能使用call()、apply()、bind()等方法来改变this的指向。\n\neg: 就是简单的函数的定义啥的\n\n//箭头函数不能用构造器,new错误\nvar Foo = () =>{};\nvar Foo = () => {};\nvar foo = new Foo(); // TypeError: Foo is not a constructor\n其实就是箭头函数不能作为构造函数,没有自己的this对象,导致就是不能构造函数,如果创建一个可以用来构造函数的函数就是要使用普通函数而不是箭头函数,例如下面的一个可以构造函数的\n// var Foo =() => {};\n// var foo = new Foo();//这样是不能构造函数的\nfunction Foo()\n{\nthis.bar = 'hello';\n}\nvar foo = new Foo();\nconsole.log(foo.bar);\n//着就是号了就是简单的前面的没this对象罢了\n\n5/5\n1 是什么?\n是一个申明式的,高效的灵活的用于构建用户界面的js库,用react\n可以把一些简单的独立的代码片段组合成复杂 的ui界面,这些代码片段就是组件\nclass ShoppingList  extends React.Component {\n//    就是组件类\nrender() /*render方法返回你希望*/{\nreturn (\n<div className=\"shopping-list\">\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n<li>Instagram</li>\n<li>WhatsApp</li>\n<li>Oculus</li>\n</ul>\n</div>\n);\n}\n}\n\n\n5/6\n\nclass Square extends React.Component {\nrender() {\nreturn (\n//渲染出来一个单独的button\n<button className=\"square\">\n{/* TODO */}\n</button>\n);\n}\n}\n\n\n//渲染出九个方块\nclass Board extends React.Component {\nrenderSquare(i) {\nreturn <Square />;\n}\n\nrender() {\nconst status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n}\n}\n//含有默认值的一个棋盘\nclass Game extends React.Component {\nrender() {\nreturn (\n<div className=\"game\">\n<div className=\"game-board\">\n<Board />\n</div>\n<div className=\"game-info\">\n<div>{/* status */}</div>\n<ol>{/* TODO */}</ol>\n</div>\n</div>\n);\n}\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\n\n5/9\n// 定义 Square 组件，表示每个格子\nclass Square extends React.Component {\nrender() {\n// 通过 props 获取格子的值和点击事件处理函数\nreturn (\n<button className=\"square\" onClick={() => this.props.onClick()}>\n{this.props.value}\n</button>\n);\n}\n}\n\n// 定义 Board 组件，表示游戏棋盘\nclass Board extends React.Component {\n// 渲染每个格子\nrenderSquare(i) {\n// 通过 props 获取当前格子的值和点击事件处理函数\nreturn (\n<Square\nvalue={this.props.squares[i]}\nonClick={() => this.props.onClick(i)}\n/>\n);\n}\n\n    render() {\n        // 渲染九宫格\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\n// 定义 Game 组件，表示游戏主界面\nclass Game extends React.Component {\nconstructor(props) {\nsuper(props);\n// 初始化状态\nthis.state = {\nhistory: [\n{\nsquares: Array(9).fill(null),\n},\n],\nstepNumber: 0,\nxIsNext: true,\n};\n}\n\n    // 点击事件处理函数，更新状态\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            // 如果已经有一方获胜或者当前格子已经有值了，则不做任何操作\n            return;\n        }\n\n        // 更新当前格子的值\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n        // 更新状态\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares,\n                },\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    // 跳转到指定步数\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        // 渲染历史记录\n        const moves = history.map((step, move) => {\n            const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        // 渲染游戏界面\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// 判断是否有获胜者\nfunction calculateWinner(squares) {\nconst lines = [\n[0, 1, 2],\n[3, 4, 5],\n[6, 7, 8],\n[0, 3, 6],\n[1, 4, 7],\n[2, 5, 8],\n[0, 4, 8],\n[2, 4, 6],\n];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n\n    return null;\n}\n\n// 渲染游戏界面\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Game />);\n\n通过这篇教程，我们接触了 React 中的一些概念，比如 React 元素、React 组件、props，还有 state。\n\n\njsx 简介\nconst element = <h1>hello,world </h1>;\n是js 的一个语法扩展,描述ui应该有交互的本质形式.jsx也是可以生成react元素,在探讨就是怎么渲染位dom,本质上喝其他 的ui逻辑内在耦合,比如就是胡在ui里面需要绑定的处理事件,在js代码里面就是jsx和ui放在一起会在视觉上会有辅助作用\njsx就是一个把js和ui结构和样式结合起来的一个扩展,它使得创建react组件变得非常容易和直观\nconst name = 'Josh Perez';\nconst element = <h1>hello,{name}</h1>;\nfunction formatName(user)\n{\n\n}\n希望看见的内容/\n\n5/22\n组件\njs创建组件\n1 函数组件\n必须大写开头,必须返回值\n表单处理\n受控组件的表单处理\n表单元素,表单元素里面的可变的状态,再setstate里面修改\n\n2 步骤\nstate ={text:' sdf'}\n3 文本框\ninput\ntextarea value = this.state.constent\nselect 下拉框  \n表单的受控组件\n\n1 添加就是name = state.txt\n2 表单的类型获取 属性的值\n3 再chang事件里面就是秀给name'该对应的state\n\n\n项目的介绍\n\n1 \n这个礼拜的内容就是做出来一个项目了\n2 \n\n\n5/23\nclass Main{\npublic boolean isNumber (String s ){\ns = s.trim();\n// 1 拿到数组以后就是把首位的空额\nif(s.length() == 0)\nreturn false;\n// 2 如过就是空数组的话就是false\n\n        boolean numFlag = false;\n        //1 数字的话就是对的,但是如果的符号位的话就是只会出现在\n        // 第一位或者指数后面的第一位\n        boolean dotFlat  = false;\n        boolean eFlag= false;\n\n\n        for (int i = 0; i < s.length(); i++) {\n\n            char ch = s.charAt(i);\n            if(ch >= '0' && ch <= '9'){\n                numFlag = true;\n\n                //判断就是数字还是啥的\n            }else if(ch == '+' || ch =='-'){\n                if(i != 0 && s.charAt(i - 1) != 'e' && s.charAt(i - 1 ) !=\n                'E')\n                    return false;\n\n                //如果是+-号的话就是判断是不是就是\n                //只会出现在第一位和e E的后面才会出现\n                \n            }else if (ch == '.'){\n                //2 只能出现一次而且不能出现在指数后面\n                // 就是一开始的dotFlat会是false 而且就是eflag是false\n                if(dotFlat || eFlag){\n//                    dotFlat = true;\nreturn false;\n}\nelse dotFlat = true;//\n//就是小数点的问题//.. 会出现问题就是说喽如果.\n//出现的话就是变成true就好了\n\n            }else if(ch == 'e' || ch =='E'){\n                if(!numFlag || eFlag) {\n                    return false;\n                    // e 前面要有数后面叶要数\n                }\n                    eFlag = true;\n                    numFlag = false;//后面没数的话就会变的false//简直就是天才\n                }  else {\n                    return false;\n                }\n            }\n\n\n         return numFlag;\n        }\n\n\n\n\n","slug":"dayandday","published":1,"updated":"2023-10-26T10:30:51.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3l200093gu3fi312d4t","content":"<h2 id=\"客户端web-api\"><a href=\"#客户端web-api\" class=\"headerlink\" title=\"客户端web api\"></a>客户端web api</h2><p>当你给网页或者网页应用编写客户端的 JavaScript 时，你很快会遇上应用程序接口（API）—— 这些编程特性可用来操控网站所基于的浏览器与操作系统的不同方面，或是操控由其他网站或服务端传来的数据。在这个单元里，我们将一同探索什么是 API，以及如何使用一些在你开发中将经常遇见的 API。</p>\n<p>###web aip简介<br>JavaScript——一种内置于浏览器的高级脚本语言，你可以用来实现 Web 页面/应用中的功能。注意 JavaScript 也可用于其他像 Node 这样的的编程环境。但现在你不必考虑这些。<br>客户端 API — 内置于浏览器的结构程序，位于 JavaScript 语言顶部，使您可以更容易的实现功能。<br>第三方 API — 置于第三方普通的结构程序（例如 Twitter，Facebook），使您可以在自己的 Web 页面中使用那些平台的某些功能（例如在您的 Web 页面显示最新的 Tweets）。<br>JavaScript 库 — 通常是包含具有特定功能的一个或多个 JavaScript 文件，把这些文件关联到您的 Web 页以快速或授权编写常见的功能。例如包含 jQuery 和 Mootools<br>JavaScript 框架 — 从库开始的下一步，JavaScript 框架视图把 HTML、CSS、JavaScript 和其他安装的技术打包在一起，然后用来从头编写一个完整的 Web 应用</p>\n<p>###API 如何工作？<br>API 使用一个或多个 JavaScript objects 在您的代码中进行交互，这些对象用作 API 使用的数据（包含在对象属性中）的容器以及 API 提供的功能（包含在对象方法中）。</p>\n<p>api 是基于对象的.这些对象就是作为用作api使用的数据.的容器<br>以及api提供的功能<br>geolocation的例子.这是一个非常简单的api.对象就是geolocation<br>position coordinates coordinates包括有关设备的<br>大量有用的数据.包括经纬度,高度,运动速度,以及运动方向<br>使用井号（#）来创建标题，井号的数量对应标题的级别。例如，使用三个井号（###）来创建三级标题（<h3>）。<br>使用空行来分隔段落，不要使用空格或制表符来缩进段落。<br>使用两个或更多的空格加上回车来创建换行或新行（<br>）。<br>使用反引号（`）来创建内联代码，或者使用三个反引号（```）来创建代码块。<br>根据这些规则，我可以把你的内容变成这样：</p>\n<h1 id=\"bom-客户端webapi里面就是-浏览器内置的api包括就是操作文档api\"><a href=\"#bom-客户端webapi里面就是-浏览器内置的api包括就是操作文档api\" class=\"headerlink\" title=\"bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api\"></a>bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api</h1><p>api 就是应用程序接口她们就是抽象了复杂的代码.提供一些简单的接口规则直接使用, 让开发人员简单的创建复杂的功能,其实就是封装了一些代码,变的好用且简单了不少</p>\n<p>客户端里面web api 操作文档api</p>\n<h2 id=\"1-document对象\"><a href=\"#1-document对象\" class=\"headerlink\" title=\"1 document对象\"></a>1 document对象</h2><h2 id=\"2-bom-window对象里\"><a href=\"#2-bom-window对象里\" class=\"headerlink\" title=\"2 bom window对象里\"></a>2 bom window对象里</h2><h3 id=\"window对象\"><a href=\"#window对象\" class=\"headerlink\" title=\"window对象\"></a>window对象</h3><p>简介: 在浏览器里面的全局的一些对象和属性,可以改变就是浏览器里面的一些基本的属性</p>\n<ol>\n<li>在gloabl作用域里面; <code>var sayage=() =&gt;alert(this.age); var age = 29;</code> 在这样的定义下就会全变成window对象的属性,包含在里面</li>\n<li>窗口关系</li>\n<li>大小</li>\n<li>视口位置,就是内阁滚轮控制的界面</li>\n<li>导航和打开新的界面</li>\n<li>定时器 <code>settimeout(字符串或者函数,时间);</code> 比较常用的就是<code>if(a&lt; b) &#123; settimeout (x,x)&#125;</code>就是限制了不少不会一直不停的干下去<br>7.系统对话框<code>alert</code> 显示 <code>confirm</code> 确定 <code>prompt</code> 输入文本三个方法里面就是了</li>\n</ol>\n<p>const 和let 就是不会添加到window对象里面,var 就会,区分使用就好了</p>\n<h3 id=\"1-narvigator\"><a href=\"#1-narvigator\" class=\"headerlink\" title=\"1 narvigator\"></a>1 narvigator</h3><ol>\n<li><p>检测插件</p>\n</li>\n<li><p>注册处理系统</p>\n</li>\n<li><p>负责提供浏览器的信息.例如就是名称平台.语言.它可以检查浏览器是否支持一些特性 例如jsva,cookie.vr等.可以使用window.navigator属性来访问navigator对象.</p>\n<p><code>javaEnabled()</code> 返回一个布尔值，表示浏览器是否启用了Java<br><code>taintEnabled()</code> 返回一个布尔值，表示浏览器是否启用了数据污染<br><code>vibrate()</code> 使设备振动一定的时间<br><code>registerProtocolHandler()</code> 注册一个自定义的协议处理器<br><code>requestMediaKeySystemAccess()</code> 请求一个媒体密钥系统的访问对象</p>\n<p>属性 描述<br><code>appCodeName</code> 返回浏览器的代码名<br><code>appName</code> 返回浏览器的名称<br><code>appVersion</code> 返回浏览器的版本信息<br><code>cookieEnabled</code> 返回一个布尔值，表示浏览器是否启用了Cookie<br><code>geolocation</code> 返回一个Geolocation对象，用于获取设备的地理位置信息<br><code>language</code> 返回浏览器的首选语言<br><code>onLine</code> 返回一个布尔</p>\n</li>\n</ol>\n<p>井字棋   2023/5/4<br>1 js 箭头函数<br>箭头函数是ES6引入的一种新的函数声明方式，可以让我们更方便地创建函数。</p>\n<p>箭头函数的语法形式如下：</p>\n<p>Copy<br>(parameters) =&gt; { statements }<br>其中，parameters表示函数的参数列表，可以是一个或多个参数。如果没有参数，则必须使用空括号表示。statements是函数体，可以是一条语句或多条语句。</p>\n<p>箭头函数有以下特点：</p>\n<p>简洁的语法形式：箭头函数可以使用更简洁的语法形式来定义函数，例如省略了function关键字和return关键字。</p>\n<p>没有自己的this对象：箭头函数没有自己的this对象，它会继承父级作用域的this对象。这意味着，在箭头函数内部，this指向的是定义该箭头函数的父级作用域的this，而不是箭头函数自己的this。</p>\n<p>不能作为构造函数：由于箭头函数没有自己的this对象，因此不能用作构造函数。</p>\n<p>下面是一些使用箭头函数的示例：</p>\n<p>javascript<br>Copy<br>// 一个简单的箭头函数<br>const add = (a, b) =&gt; a + b;</p>\n<p>// 箭头函数作为回调函数<br>const arr = [1, 2, 3];<br>const newArr = arr.map(item =&gt; item * 2);</p>\n<p>// 箭头函数内部使用父级作用域的this对象</p>\n<p>const obj = {<br>name: ‘Sage’,<br>getName: function() {<br>return () =&gt; console.log(this.name);<br>}<br>};<br>const func = obj.getName();<br>func(); // 输出：Sage<br>需要注意的是，由于箭头函数没有自己的this对象，因此不能使用call()、apply()、bind()等方法来改变this的指向。</p>\n<p>eg: 就是简单的函数的定义啥的</p>\n<p>//箭头函数不能用构造器,new错误<br>var Foo = () =&gt;{};<br>var Foo = () =&gt; {};<br>var foo = new Foo(); // TypeError: Foo is not a constructor<br>其实就是箭头函数不能作为构造函数,没有自己的this对象,导致就是不能构造函数,如果创建一个可以用来构造函数的函数就是要使用普通函数而不是箭头函数,例如下面的一个可以构造函数的<br>// var Foo =() =&gt; {};<br>// var foo = new Foo();//这样是不能构造函数的<br>function Foo()<br>{<br>this.bar = ‘hello’;<br>}<br>var foo = new Foo();<br>console.log(foo.bar);<br>//着就是号了就是简单的前面的没this对象罢了</p>\n<p>5/5<br>1 是什么?<br>是一个申明式的,高效的灵活的用于构建用户界面的js库,用react<br>可以把一些简单的独立的代码片段组合成复杂 的ui界面,这些代码片段就是组件<br>class ShoppingList  extends React.Component {<br>//    就是组件类<br>render() /<em>render方法返回你希望</em>/{<br>return (</p>\n<div className=\"shopping-list\">\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n<li>Instagram</li>\n<li>WhatsApp</li>\n<li>Oculus</li>\n</ul>\n</div>\n);\n}\n}\n\n\n<p>5/6</p>\n<p>class Square extends React.Component {<br>render() {<br>return (<br>//渲染出来一个单独的button<br><button className=\"square\"><br>{/* TODO */}<br></button><br>);<br>}<br>}</p>\n<p>//渲染出九个方块<br>class Board extends React.Component {<br>renderSquare(i) {<br>return <Square />;<br>}</p>\n<p>render() {<br>const status = ‘Next player: X’;</p>\n<pre><code>return (\n  &lt;div&gt;\n    &lt;div className=&quot;status&quot;&gt;&#123;status&#125;&lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(0)&#125;\n      &#123;this.renderSquare(1)&#125;\n      &#123;this.renderSquare(2)&#125;\n    &lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(3)&#125;\n      &#123;this.renderSquare(4)&#125;\n      &#123;this.renderSquare(5)&#125;\n    &lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(6)&#125;\n      &#123;this.renderSquare(7)&#125;\n      &#123;this.renderSquare(8)&#125;\n    &lt;/div&gt;\n  &lt;/div&gt;\n);\n</code></pre>\n<p>}<br>}<br>//含有默认值的一个棋盘<br>class Game extends React.Component {<br>render() {<br>return (</p>\n<div className=\"game\">\n<div className=\"game-board\">\n<Board />\n</div>\n<div className=\"game-info\">\n<div>{/* status */}</div>\n<ol>{/* TODO */}</ol>\n</div>\n</div>\n);\n}\n}\n\n<p>// ========================================</p>\n<p>const root = ReactDOM.createRoot(document.getElementById(“root”));<br>root.render(<Game />);</p>\n<p>5/9<br>// 定义 Square 组件，表示每个格子<br>class Square extends React.Component {<br>render() {<br>// 通过 props 获取格子的值和点击事件处理函数<br>return (<br>&lt;button className=”square” onClick={() =&gt; this.props.onClick()}&gt;<br>{this.props.value}<br></button><br>);<br>}<br>}</p>\n<p>// 定义 Board 组件，表示游戏棋盘<br>class Board extends React.Component {<br>// 渲染每个格子<br>renderSquare(i) {<br>// 通过 props 获取当前格子的值和点击事件处理函数<br>return (<br>&lt;Square<br>value={this.props.squares[i]}<br>onClick={() =&gt; this.props.onClick(i)}<br>/&gt;<br>);<br>}</p>\n<pre><code>render() &#123;\n    // 渲染九宫格\n    return (\n        &lt;div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(0)&#125;\n                &#123;this.renderSquare(1)&#125;\n                &#123;this.renderSquare(2)&#125;\n            &lt;/div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(3)&#125;\n                &#123;this.renderSquare(4)&#125;\n                &#123;this.renderSquare(5)&#125;\n            &lt;/div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(6)&#125;\n                &#123;this.renderSquare(7)&#125;\n                &#123;this.renderSquare(8)&#125;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    );\n&#125;\n</code></pre>\n<p>}</p>\n<p>// 定义 Game 组件，表示游戏主界面<br>class Game extends React.Component {<br>constructor(props) {<br>super(props);<br>// 初始化状态<br>this.state = {<br>history: [<br>{<br>squares: Array(9).fill(null),<br>},<br>],<br>stepNumber: 0,<br>xIsNext: true,<br>};<br>}</p>\n<pre><code>// 点击事件处理函数，更新状态\nhandleClick(i) &#123;\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) &#123;\n        // 如果已经有一方获胜或者当前格子已经有值了，则不做任何操作\n        return;\n    &#125;\n\n    // 更新当前格子的值\n    squares[i] = this.state.xIsNext ? &quot;X&quot; : &quot;O&quot;;\n\n    // 更新状态\n    this.setState(&#123;\n        history: history.concat([\n            &#123;\n                squares: squares,\n            &#125;,\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n    &#125;);\n&#125;\n\n// 跳转到指定步数\njumpTo(step) &#123;\n    this.setState(&#123;\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n    &#125;);\n&#125;\n\nrender() &#123;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // 渲染历史记录\n    const moves = history.map((step, move) =&gt; &#123;\n        const desc = move ? &quot;Go to move #&quot; + move : &quot;Go to game start&quot;;\n        return (\n            &lt;li key=&#123;move&#125;&gt;\n                &lt;button onClick=&#123;() =&gt; this.jumpTo(move)&#125;&gt;&#123;desc&#125;&lt;/button&gt;\n            &lt;/li&gt;\n        );\n    &#125;);\n\n    let status;\n    if (winner) &#123;\n        status = &quot;Winner: &quot; + winner;\n    &#125; else &#123;\n        status = &quot;Next player: &quot; + (this.state.xIsNext ? &quot;X&quot; : &quot;O&quot;);\n    &#125;\n\n    // 渲染游戏界面\n    return (\n        &lt;div className=&quot;game&quot;&gt;\n            &lt;div className=&quot;game-board&quot;&gt;\n                &lt;Board squares=&#123;current.squares&#125; onClick=&#123;(i) =&gt; this.handleClick(i)&#125; /&gt;\n            &lt;/div&gt;\n            &lt;div className=&quot;game-info&quot;&gt;\n                &lt;div&gt;&#123;status&#125;&lt;/div&gt;\n                &lt;ol&gt;&#123;moves&#125;&lt;/ol&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    );\n&#125;\n</code></pre>\n<p>}</p>\n<p>// 判断是否有获胜者<br>function calculateWinner(squares) {<br>const lines = [<br>[0, 1, 2],<br>[3, 4, 5],<br>[6, 7, 8],<br>[0, 3, 6],<br>[1, 4, 7],<br>[2, 5, 8],<br>[0, 4, 8],<br>[2, 4, 6],<br>];</p>\n<pre><code>for (let i = 0; i &lt; lines.length; i++) &#123;\n    const [a, b, c] = lines[i];\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) &#123;\n        return squares[a];\n    &#125;\n&#125;\n\nreturn null;\n</code></pre>\n<p>}</p>\n<p>// 渲染游戏界面<br>const root = ReactDOM.createRoot(document.getElementById(“root”));<br>root.render(<Game />);</p>\n<p>通过这篇教程，我们接触了 React 中的一些概念，比如 React 元素、React 组件、props，还有 state。</p>\n<p>jsx 简介<br>const element = <h1>hello,world </h1>;<br>是js 的一个语法扩展,描述ui应该有交互的本质形式.jsx也是可以生成react元素,在探讨就是怎么渲染位dom,本质上喝其他 的ui逻辑内在耦合,比如就是胡在ui里面需要绑定的处理事件,在js代码里面就是jsx和ui放在一起会在视觉上会有辅助作用<br>jsx就是一个把js和ui结构和样式结合起来的一个扩展,它使得创建react组件变得非常容易和直观<br>const name = ‘Josh Perez’;<br>const element = <h1>hello,{name}</h1>;<br>function formatName(user)<br>{</p>\n<p>}<br>希望看见的内容/</p>\n<p>5/22<br>组件<br>js创建组件<br>1 函数组件<br>必须大写开头,必须返回值<br>表单处理<br>受控组件的表单处理<br>表单元素,表单元素里面的可变的状态,再setstate里面修改</p>\n<p>2 步骤<br>state ={text:’ sdf’}<br>3 文本框<br>input<br>textarea value = this.state.constent<br>select 下拉框<br>表单的受控组件</p>\n<p>1 添加就是name = state.txt<br>2 表单的类型获取 属性的值<br>3 再chang事件里面就是秀给name’该对应的state</p>\n<p>项目的介绍</p>\n<p>1<br>这个礼拜的内容就是做出来一个项目了<br>2 </p>\n<p>5/23<br>class Main{<br>public boolean isNumber (String s ){<br>s = s.trim();<br>// 1 拿到数组以后就是把首位的空额<br>if(s.length() == 0)<br>return false;<br>// 2 如过就是空数组的话就是false</p>\n<pre><code>    boolean numFlag = false;\n    //1 数字的话就是对的,但是如果的符号位的话就是只会出现在\n    // 第一位或者指数后面的第一位\n    boolean dotFlat  = false;\n    boolean eFlag= false;\n\n\n    for (int i = 0; i &lt; s.length(); i++) &#123;\n\n        char ch = s.charAt(i);\n        if(ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;)&#123;\n            numFlag = true;\n\n            //判断就是数字还是啥的\n        &#125;else if(ch == &#39;+&#39; || ch ==&#39;-&#39;)&#123;\n            if(i != 0 &amp;&amp; s.charAt(i - 1) != &#39;e&#39; &amp;&amp; s.charAt(i - 1 ) !=\n            &#39;E&#39;)\n                return false;\n\n            //如果是+-号的话就是判断是不是就是\n            //只会出现在第一位和e E的后面才会出现\n            \n        &#125;else if (ch == &#39;.&#39;)&#123;\n            //2 只能出现一次而且不能出现在指数后面\n            // 就是一开始的dotFlat会是false 而且就是eflag是false\n            if(dotFlat || eFlag)&#123;\n</code></pre>\n<p>//                    dotFlat = true;<br>return false;<br>}<br>else dotFlat = true;//<br>//就是小数点的问题//.. 会出现问题就是说喽如果.<br>//出现的话就是变成true就好了</p>\n<pre><code>        &#125;else if(ch == &#39;e&#39; || ch ==&#39;E&#39;)&#123;\n            if(!numFlag || eFlag) &#123;\n                return false;\n                // e 前面要有数后面叶要数\n            &#125;\n                eFlag = true;\n                numFlag = false;//后面没数的话就会变的false//简直就是天才\n            &#125;  else &#123;\n                return false;\n            &#125;\n        &#125;\n\n\n     return numFlag;\n    &#125;\n</code></pre>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h2 id=\"客户端web-api\"><a href=\"#客户端web-api\" class=\"headerlink\" title=\"客户端web api\"></a>客户端web api</h2><p>当你给网页或者网页应用编写客户端的 JavaScript 时，你很快会遇上应用程序接口（API）—— 这些编程特性可用来操控网站所基于的浏览器与操作系统的不同方面，或是操控由其他网站或服务端传来的数据。在这个单元里，我们将一同探索什么是 API，以及如何使用一些在你开发中将经常遇见的 API。</p>\n<p>###web aip简介<br>JavaScript——一种内置于浏览器的高级脚本语言，你可以用来实现 Web 页面/应用中的功能。注意 JavaScript 也可用于其他像 Node 这样的的编程环境。但现在你不必考虑这些。<br>客户端 API — 内置于浏览器的结构程序，位于 JavaScript 语言顶部，使您可以更容易的实现功能。<br>第三方 API — 置于第三方普通的结构程序（例如 Twitter，Facebook），使您可以在自己的 Web 页面中使用那些平台的某些功能（例如在您的 Web 页面显示最新的 Tweets）。<br>JavaScript 库 — 通常是包含具有特定功能的一个或多个 JavaScript 文件，把这些文件关联到您的 Web 页以快速或授权编写常见的功能。例如包含 jQuery 和 Mootools<br>JavaScript 框架 — 从库开始的下一步，JavaScript 框架视图把 HTML、CSS、JavaScript 和其他安装的技术打包在一起，然后用来从头编写一个完整的 Web 应用</p>\n<p>###API 如何工作？<br>API 使用一个或多个 JavaScript objects 在您的代码中进行交互，这些对象用作 API 使用的数据（包含在对象属性中）的容器以及 API 提供的功能（包含在对象方法中）。</p>\n<p>api 是基于对象的.这些对象就是作为用作api使用的数据.的容器<br>以及api提供的功能<br>geolocation的例子.这是一个非常简单的api.对象就是geolocation<br>position coordinates coordinates包括有关设备的<br>大量有用的数据.包括经纬度,高度,运动速度,以及运动方向<br>使用井号（#）来创建标题，井号的数量对应标题的级别。例如，使用三个井号（###）来创建三级标题（<h3>）。<br>使用空行来分隔段落，不要使用空格或制表符来缩进段落。<br>使用两个或更多的空格加上回车来创建换行或新行（<br>）。<br>使用反引号（`）来创建内联代码，或者使用三个反引号（```）来创建代码块。<br>根据这些规则，我可以把你的内容变成这样：</p>\n<h1 id=\"bom-客户端webapi里面就是-浏览器内置的api包括就是操作文档api\"><a href=\"#bom-客户端webapi里面就是-浏览器内置的api包括就是操作文档api\" class=\"headerlink\" title=\"bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api\"></a>bom 客户端webapi里面就是 浏览器内置的api包括就是操作文档api</h1><p>api 就是应用程序接口她们就是抽象了复杂的代码.提供一些简单的接口规则直接使用, 让开发人员简单的创建复杂的功能,其实就是封装了一些代码,变的好用且简单了不少</p>\n<p>客户端里面web api 操作文档api</p>\n<h2 id=\"1-document对象\"><a href=\"#1-document对象\" class=\"headerlink\" title=\"1 document对象\"></a>1 document对象</h2><h2 id=\"2-bom-window对象里\"><a href=\"#2-bom-window对象里\" class=\"headerlink\" title=\"2 bom window对象里\"></a>2 bom window对象里</h2><h3 id=\"window对象\"><a href=\"#window对象\" class=\"headerlink\" title=\"window对象\"></a>window对象</h3><p>简介: 在浏览器里面的全局的一些对象和属性,可以改变就是浏览器里面的一些基本的属性</p>\n<ol>\n<li>在gloabl作用域里面; <code>var sayage=() =&gt;alert(this.age); var age = 29;</code> 在这样的定义下就会全变成window对象的属性,包含在里面</li>\n<li>窗口关系</li>\n<li>大小</li>\n<li>视口位置,就是内阁滚轮控制的界面</li>\n<li>导航和打开新的界面</li>\n<li>定时器 <code>settimeout(字符串或者函数,时间);</code> 比较常用的就是<code>if(a&lt; b) &#123; settimeout (x,x)&#125;</code>就是限制了不少不会一直不停的干下去<br>7.系统对话框<code>alert</code> 显示 <code>confirm</code> 确定 <code>prompt</code> 输入文本三个方法里面就是了</li>\n</ol>\n<p>const 和let 就是不会添加到window对象里面,var 就会,区分使用就好了</p>\n<h3 id=\"1-narvigator\"><a href=\"#1-narvigator\" class=\"headerlink\" title=\"1 narvigator\"></a>1 narvigator</h3><ol>\n<li><p>检测插件</p>\n</li>\n<li><p>注册处理系统</p>\n</li>\n<li><p>负责提供浏览器的信息.例如就是名称平台.语言.它可以检查浏览器是否支持一些特性 例如jsva,cookie.vr等.可以使用window.navigator属性来访问navigator对象.</p>\n<p><code>javaEnabled()</code> 返回一个布尔值，表示浏览器是否启用了Java<br><code>taintEnabled()</code> 返回一个布尔值，表示浏览器是否启用了数据污染<br><code>vibrate()</code> 使设备振动一定的时间<br><code>registerProtocolHandler()</code> 注册一个自定义的协议处理器<br><code>requestMediaKeySystemAccess()</code> 请求一个媒体密钥系统的访问对象</p>\n<p>属性 描述<br><code>appCodeName</code> 返回浏览器的代码名<br><code>appName</code> 返回浏览器的名称<br><code>appVersion</code> 返回浏览器的版本信息<br><code>cookieEnabled</code> 返回一个布尔值，表示浏览器是否启用了Cookie<br><code>geolocation</code> 返回一个Geolocation对象，用于获取设备的地理位置信息<br><code>language</code> 返回浏览器的首选语言<br><code>onLine</code> 返回一个布尔</p>\n</li>\n</ol>\n<p>井字棋   2023/5/4<br>1 js 箭头函数<br>箭头函数是ES6引入的一种新的函数声明方式，可以让我们更方便地创建函数。</p>\n<p>箭头函数的语法形式如下：</p>\n<p>Copy<br>(parameters) =&gt; { statements }<br>其中，parameters表示函数的参数列表，可以是一个或多个参数。如果没有参数，则必须使用空括号表示。statements是函数体，可以是一条语句或多条语句。</p>\n<p>箭头函数有以下特点：</p>\n<p>简洁的语法形式：箭头函数可以使用更简洁的语法形式来定义函数，例如省略了function关键字和return关键字。</p>\n<p>没有自己的this对象：箭头函数没有自己的this对象，它会继承父级作用域的this对象。这意味着，在箭头函数内部，this指向的是定义该箭头函数的父级作用域的this，而不是箭头函数自己的this。</p>\n<p>不能作为构造函数：由于箭头函数没有自己的this对象，因此不能用作构造函数。</p>\n<p>下面是一些使用箭头函数的示例：</p>\n<p>javascript<br>Copy<br>// 一个简单的箭头函数<br>const add = (a, b) =&gt; a + b;</p>\n<p>// 箭头函数作为回调函数<br>const arr = [1, 2, 3];<br>const newArr = arr.map(item =&gt; item * 2);</p>\n<p>// 箭头函数内部使用父级作用域的this对象</p>\n<p>const obj = {<br>name: ‘Sage’,<br>getName: function() {<br>return () =&gt; console.log(this.name);<br>}<br>};<br>const func = obj.getName();<br>func(); // 输出：Sage<br>需要注意的是，由于箭头函数没有自己的this对象，因此不能使用call()、apply()、bind()等方法来改变this的指向。</p>\n<p>eg: 就是简单的函数的定义啥的</p>\n<p>//箭头函数不能用构造器,new错误<br>var Foo = () =&gt;{};<br>var Foo = () =&gt; {};<br>var foo = new Foo(); // TypeError: Foo is not a constructor<br>其实就是箭头函数不能作为构造函数,没有自己的this对象,导致就是不能构造函数,如果创建一个可以用来构造函数的函数就是要使用普通函数而不是箭头函数,例如下面的一个可以构造函数的<br>// var Foo =() =&gt; {};<br>// var foo = new Foo();//这样是不能构造函数的<br>function Foo()<br>{<br>this.bar = ‘hello’;<br>}<br>var foo = new Foo();<br>console.log(foo.bar);<br>//着就是号了就是简单的前面的没this对象罢了</p>\n<p>5/5<br>1 是什么?<br>是一个申明式的,高效的灵活的用于构建用户界面的js库,用react<br>可以把一些简单的独立的代码片段组合成复杂 的ui界面,这些代码片段就是组件<br>class ShoppingList  extends React.Component {<br>//    就是组件类<br>render() /<em>render方法返回你希望</em>/{<br>return (</p>\n<div className=\"shopping-list\">\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n<li>Instagram</li>\n<li>WhatsApp</li>\n<li>Oculus</li>\n</ul>\n</div>\n);\n}\n}\n\n\n<p>5/6</p>\n<p>class Square extends React.Component {<br>render() {<br>return (<br>//渲染出来一个单独的button<br><button className=\"square\"><br>{/* TODO */}<br></button><br>);<br>}<br>}</p>\n<p>//渲染出九个方块<br>class Board extends React.Component {<br>renderSquare(i) {<br>return <Square />;<br>}</p>\n<p>render() {<br>const status = ‘Next player: X’;</p>\n<pre><code>return (\n  &lt;div&gt;\n    &lt;div className=&quot;status&quot;&gt;&#123;status&#125;&lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(0)&#125;\n      &#123;this.renderSquare(1)&#125;\n      &#123;this.renderSquare(2)&#125;\n    &lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(3)&#125;\n      &#123;this.renderSquare(4)&#125;\n      &#123;this.renderSquare(5)&#125;\n    &lt;/div&gt;\n    &lt;div className=&quot;board-row&quot;&gt;\n      &#123;this.renderSquare(6)&#125;\n      &#123;this.renderSquare(7)&#125;\n      &#123;this.renderSquare(8)&#125;\n    &lt;/div&gt;\n  &lt;/div&gt;\n);\n</code></pre>\n<p>}<br>}<br>//含有默认值的一个棋盘<br>class Game extends React.Component {<br>render() {<br>return (</p>\n<div className=\"game\">\n<div className=\"game-board\">\n<Board />\n</div>\n<div className=\"game-info\">\n<div>{/* status */}</div>\n<ol>{/* TODO */}</ol>\n</div>\n</div>\n);\n}\n}\n\n<p>// ========================================</p>\n<p>const root = ReactDOM.createRoot(document.getElementById(“root”));<br>root.render(<Game />);</p>\n<p>5/9<br>// 定义 Square 组件，表示每个格子<br>class Square extends React.Component {<br>render() {<br>// 通过 props 获取格子的值和点击事件处理函数<br>return (<br>&lt;button className=”square” onClick={() =&gt; this.props.onClick()}&gt;<br>{this.props.value}<br></button><br>);<br>}<br>}</p>\n<p>// 定义 Board 组件，表示游戏棋盘<br>class Board extends React.Component {<br>// 渲染每个格子<br>renderSquare(i) {<br>// 通过 props 获取当前格子的值和点击事件处理函数<br>return (<br>&lt;Square<br>value={this.props.squares[i]}<br>onClick={() =&gt; this.props.onClick(i)}<br>/&gt;<br>);<br>}</p>\n<pre><code>render() &#123;\n    // 渲染九宫格\n    return (\n        &lt;div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(0)&#125;\n                &#123;this.renderSquare(1)&#125;\n                &#123;this.renderSquare(2)&#125;\n            &lt;/div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(3)&#125;\n                &#123;this.renderSquare(4)&#125;\n                &#123;this.renderSquare(5)&#125;\n            &lt;/div&gt;\n            &lt;div className=&quot;board-row&quot;&gt;\n                &#123;this.renderSquare(6)&#125;\n                &#123;this.renderSquare(7)&#125;\n                &#123;this.renderSquare(8)&#125;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    );\n&#125;\n</code></pre>\n<p>}</p>\n<p>// 定义 Game 组件，表示游戏主界面<br>class Game extends React.Component {<br>constructor(props) {<br>super(props);<br>// 初始化状态<br>this.state = {<br>history: [<br>{<br>squares: Array(9).fill(null),<br>},<br>],<br>stepNumber: 0,<br>xIsNext: true,<br>};<br>}</p>\n<pre><code>// 点击事件处理函数，更新状态\nhandleClick(i) &#123;\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) &#123;\n        // 如果已经有一方获胜或者当前格子已经有值了，则不做任何操作\n        return;\n    &#125;\n\n    // 更新当前格子的值\n    squares[i] = this.state.xIsNext ? &quot;X&quot; : &quot;O&quot;;\n\n    // 更新状态\n    this.setState(&#123;\n        history: history.concat([\n            &#123;\n                squares: squares,\n            &#125;,\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n    &#125;);\n&#125;\n\n// 跳转到指定步数\njumpTo(step) &#123;\n    this.setState(&#123;\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n    &#125;);\n&#125;\n\nrender() &#123;\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // 渲染历史记录\n    const moves = history.map((step, move) =&gt; &#123;\n        const desc = move ? &quot;Go to move #&quot; + move : &quot;Go to game start&quot;;\n        return (\n            &lt;li key=&#123;move&#125;&gt;\n                &lt;button onClick=&#123;() =&gt; this.jumpTo(move)&#125;&gt;&#123;desc&#125;&lt;/button&gt;\n            &lt;/li&gt;\n        );\n    &#125;);\n\n    let status;\n    if (winner) &#123;\n        status = &quot;Winner: &quot; + winner;\n    &#125; else &#123;\n        status = &quot;Next player: &quot; + (this.state.xIsNext ? &quot;X&quot; : &quot;O&quot;);\n    &#125;\n\n    // 渲染游戏界面\n    return (\n        &lt;div className=&quot;game&quot;&gt;\n            &lt;div className=&quot;game-board&quot;&gt;\n                &lt;Board squares=&#123;current.squares&#125; onClick=&#123;(i) =&gt; this.handleClick(i)&#125; /&gt;\n            &lt;/div&gt;\n            &lt;div className=&quot;game-info&quot;&gt;\n                &lt;div&gt;&#123;status&#125;&lt;/div&gt;\n                &lt;ol&gt;&#123;moves&#125;&lt;/ol&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    );\n&#125;\n</code></pre>\n<p>}</p>\n<p>// 判断是否有获胜者<br>function calculateWinner(squares) {<br>const lines = [<br>[0, 1, 2],<br>[3, 4, 5],<br>[6, 7, 8],<br>[0, 3, 6],<br>[1, 4, 7],<br>[2, 5, 8],<br>[0, 4, 8],<br>[2, 4, 6],<br>];</p>\n<pre><code>for (let i = 0; i &lt; lines.length; i++) &#123;\n    const [a, b, c] = lines[i];\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) &#123;\n        return squares[a];\n    &#125;\n&#125;\n\nreturn null;\n</code></pre>\n<p>}</p>\n<p>// 渲染游戏界面<br>const root = ReactDOM.createRoot(document.getElementById(“root”));<br>root.render(<Game />);</p>\n<p>通过这篇教程，我们接触了 React 中的一些概念，比如 React 元素、React 组件、props，还有 state。</p>\n<p>jsx 简介<br>const element = <h1>hello,world </h1>;<br>是js 的一个语法扩展,描述ui应该有交互的本质形式.jsx也是可以生成react元素,在探讨就是怎么渲染位dom,本质上喝其他 的ui逻辑内在耦合,比如就是胡在ui里面需要绑定的处理事件,在js代码里面就是jsx和ui放在一起会在视觉上会有辅助作用<br>jsx就是一个把js和ui结构和样式结合起来的一个扩展,它使得创建react组件变得非常容易和直观<br>const name = ‘Josh Perez’;<br>const element = <h1>hello,{name}</h1>;<br>function formatName(user)<br>{</p>\n<p>}<br>希望看见的内容/</p>\n<p>5/22<br>组件<br>js创建组件<br>1 函数组件<br>必须大写开头,必须返回值<br>表单处理<br>受控组件的表单处理<br>表单元素,表单元素里面的可变的状态,再setstate里面修改</p>\n<p>2 步骤<br>state ={text:’ sdf’}<br>3 文本框<br>input<br>textarea value = this.state.constent<br>select 下拉框<br>表单的受控组件</p>\n<p>1 添加就是name = state.txt<br>2 表单的类型获取 属性的值<br>3 再chang事件里面就是秀给name’该对应的state</p>\n<p>项目的介绍</p>\n<p>1<br>这个礼拜的内容就是做出来一个项目了<br>2 </p>\n<p>5/23<br>class Main{<br>public boolean isNumber (String s ){<br>s = s.trim();<br>// 1 拿到数组以后就是把首位的空额<br>if(s.length() == 0)<br>return false;<br>// 2 如过就是空数组的话就是false</p>\n<pre><code>    boolean numFlag = false;\n    //1 数字的话就是对的,但是如果的符号位的话就是只会出现在\n    // 第一位或者指数后面的第一位\n    boolean dotFlat  = false;\n    boolean eFlag= false;\n\n\n    for (int i = 0; i &lt; s.length(); i++) &#123;\n\n        char ch = s.charAt(i);\n        if(ch &gt;= &#39;0&#39; &amp;&amp; ch &lt;= &#39;9&#39;)&#123;\n            numFlag = true;\n\n            //判断就是数字还是啥的\n        &#125;else if(ch == &#39;+&#39; || ch ==&#39;-&#39;)&#123;\n            if(i != 0 &amp;&amp; s.charAt(i - 1) != &#39;e&#39; &amp;&amp; s.charAt(i - 1 ) !=\n            &#39;E&#39;)\n                return false;\n\n            //如果是+-号的话就是判断是不是就是\n            //只会出现在第一位和e E的后面才会出现\n            \n        &#125;else if (ch == &#39;.&#39;)&#123;\n            //2 只能出现一次而且不能出现在指数后面\n            // 就是一开始的dotFlat会是false 而且就是eflag是false\n            if(dotFlat || eFlag)&#123;\n</code></pre>\n<p>//                    dotFlat = true;<br>return false;<br>}<br>else dotFlat = true;//<br>//就是小数点的问题//.. 会出现问题就是说喽如果.<br>//出现的话就是变成true就好了</p>\n<pre><code>        &#125;else if(ch == &#39;e&#39; || ch ==&#39;E&#39;)&#123;\n            if(!numFlag || eFlag) &#123;\n                return false;\n                // e 前面要有数后面叶要数\n            &#125;\n                eFlag = true;\n                numFlag = false;//后面没数的话就会变的false//简直就是天才\n            &#125;  else &#123;\n                return false;\n            &#125;\n        &#125;\n\n\n     return numFlag;\n    &#125;\n</code></pre>\n"},{"title":"git六节课学完","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-07-19T13:40:18.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"     \n# git命令行\n## git init\n```bash\ngit init\n```\n## git add\n```bash\ngit add .\n```\n## git commit\n```bash\ngit commit -m \"first commit\"\n```\n## git remote\n```bash\ngit remote add origin\n```\n## git push\n```bash\ngit push -u origin master\n```\n## git pull\n```bash\ngit pull origin master\n```\n## git clone\n```bash\ngit clone\n``` \n## git status\n```bash\ngit status\n```\n## git log\n```bash\ngit log\n```\n## git branch\n```bash\ngit branch\n```\n## git checkout\n```bash\ngit checkout\n```\n## git merge\n```bash\ngit merge\n```\n## git reset\n```bash\ngit reset\n```\n## git revert\n```bash\ngit revert\n```\n## git rebase\n```bash\ngit rebase\n```\n## git stash\n```bash\ngit stash\n```\n## git tag\n```bash\ngit tag\n```\n    \n# git图形化\n## git gui\n```bash\n\n    \n``` \n## gitk\n```bash\n\n    \n```\n## gitg\n```bash\n\n    \n```\n## git-cola\n```bash\n\n    \n```\n## gitkraken\n```bash\n\n    \n```\n## smartgit\n```bash\n\n    \n```\n\n","source":"_posts/git六节课学完.md","raw":"---\ntitle: git六节课学完\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-07-19 21:40:18\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---     \n# git命令行\n## git init\n```bash\ngit init\n```\n## git add\n```bash\ngit add .\n```\n## git commit\n```bash\ngit commit -m \"first commit\"\n```\n## git remote\n```bash\ngit remote add origin\n```\n## git push\n```bash\ngit push -u origin master\n```\n## git pull\n```bash\ngit pull origin master\n```\n## git clone\n```bash\ngit clone\n``` \n## git status\n```bash\ngit status\n```\n## git log\n```bash\ngit log\n```\n## git branch\n```bash\ngit branch\n```\n## git checkout\n```bash\ngit checkout\n```\n## git merge\n```bash\ngit merge\n```\n## git reset\n```bash\ngit reset\n```\n## git revert\n```bash\ngit revert\n```\n## git rebase\n```bash\ngit rebase\n```\n## git stash\n```bash\ngit stash\n```\n## git tag\n```bash\ngit tag\n```\n    \n# git图形化\n## git gui\n```bash\n\n    \n``` \n## gitk\n```bash\n\n    \n```\n## gitg\n```bash\n\n    \n```\n## git-cola\n```bash\n\n    \n```\n## gitkraken\n```bash\n\n    \n```\n## smartgit\n```bash\n\n    \n```\n\n","slug":"git六节课学完","published":1,"updated":"2023-10-26T10:30:51.809Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3l3000b3gu3diumfs5i","content":"<h1 id=\"git命令行\"><a href=\"#git命令行\" class=\"headerlink\" title=\"git命令行\"></a>git命令行</h1><h2 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-add\"><a href=\"#git-add\" class=\"headerlink\" title=\"git add\"></a>git add</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git push\"></a>git push</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-log\"><a href=\"#git-log\" class=\"headerlink\" title=\"git log\"></a>git log</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-merge\"><a href=\"#git-merge\" class=\"headerlink\" title=\"git merge\"></a>git merge</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-revert\"><a href=\"#git-revert\" class=\"headerlink\" title=\"git revert\"></a>git revert</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-rebase\"><a href=\"#git-rebase\" class=\"headerlink\" title=\"git rebase\"></a>git rebase</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-stash\"><a href=\"#git-stash\" class=\"headerlink\" title=\"git stash\"></a>git stash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h1 id=\"git图形化\"><a href=\"#git图形化\" class=\"headerlink\" title=\"git图形化\"></a>git图形化</h1><h2 id=\"git-gui\"><a href=\"#git-gui\" class=\"headerlink\" title=\"git gui\"></a>git gui</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitk\"><a href=\"#gitk\" class=\"headerlink\" title=\"gitk\"></a>gitk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitg\"><a href=\"#gitg\" class=\"headerlink\" title=\"gitg\"></a>gitg</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"git-cola\"><a href=\"#git-cola\" class=\"headerlink\" title=\"git-cola\"></a>git-cola</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitkraken\"><a href=\"#gitkraken\" class=\"headerlink\" title=\"gitkraken\"></a>gitkraken</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"smartgit\"><a href=\"#smartgit\" class=\"headerlink\" title=\"smartgit\"></a>smartgit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h1 id=\"git命令行\"><a href=\"#git命令行\" class=\"headerlink\" title=\"git命令行\"></a>git命令行</h1><h2 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-add\"><a href=\"#git-add\" class=\"headerlink\" title=\"git add\"></a>git add</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git push\"></a>git push</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-pull\"><a href=\"#git-pull\" class=\"headerlink\" title=\"git pull\"></a>git pull</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-log\"><a href=\"#git-log\" class=\"headerlink\" title=\"git log\"></a>git log</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-merge\"><a href=\"#git-merge\" class=\"headerlink\" title=\"git merge\"></a>git merge</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-revert\"><a href=\"#git-revert\" class=\"headerlink\" title=\"git revert\"></a>git revert</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-rebase\"><a href=\"#git-rebase\" class=\"headerlink\" title=\"git rebase\"></a>git rebase</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-stash\"><a href=\"#git-stash\" class=\"headerlink\" title=\"git stash\"></a>git stash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h1 id=\"git图形化\"><a href=\"#git图形化\" class=\"headerlink\" title=\"git图形化\"></a>git图形化</h1><h2 id=\"git-gui\"><a href=\"#git-gui\" class=\"headerlink\" title=\"git gui\"></a>git gui</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitk\"><a href=\"#gitk\" class=\"headerlink\" title=\"gitk\"></a>gitk</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitg\"><a href=\"#gitg\" class=\"headerlink\" title=\"gitg\"></a>gitg</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"git-cola\"><a href=\"#git-cola\" class=\"headerlink\" title=\"git-cola\"></a>git-cola</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"gitkraken\"><a href=\"#gitkraken\" class=\"headerlink\" title=\"gitkraken\"></a>gitkraken</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"smartgit\"><a href=\"#smartgit\" class=\"headerlink\" title=\"smartgit\"></a>smartgit</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n"},{"title":"forLove","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2023-06-09T02:01:18.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"\n# 6/9\n又吵架了.但是还是一点点就是无厘头的吵架,你本来就不该吵架的\n不知道哪里来的情绪,你在干嘛 ,全是在做着一些什么事,\n还真是崽种说实话,为什么连就是这一点点都没办法控制\n还是说就是你就是那么的贱,有些事,还是要忍耐的,要有耐心\n\n\n# 6/11\n不晓得为啥还是想说说话,忽然就觉得还是很好的一个人,一直都懵懵懂懂的看不见,\n到底是看不见还是潜意识里面故意看不见\n你就是在躲避,害怕你会犯错,实话说还是咋稍微的少点,我对你的爱其实还是不及你对我的爱的,\n我感觉到了,还是媳妇压力或者还是啥的大一点也好,确实还是要体谅一点\n\n\n\n6/20 java arraylist 数组表\n\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\n//\nclass Main{\npublic static void main(String[] args){\nArrayList<Integer>  list = new ArrayList<>();\nlist.add(1);\nlist.add(1);\nlist.add(1);\nSystem.out.println(list.get(0));//get jiushi huoqu\nlist.set(2,4);\nSystem.out.println(list.get(2));\n// 输出list1\nSystem.out.println(list.get(1));\n// 也就是说链表是不能超出界限的\n// 但是数组是可以的\n// 但是数组的长度是固定的\n//删除元素\nlist.remove(1);\nSystem.out.println(list.get(1));\nSystem.out.println(list);//这就是删除了还是可以输出1为啥\n// 因为这个list是一个对象\n// 但是这个对象里面的元素已经被删除了'\n// 但是这个对象还是存在的\n// 所以输出的时候还是会输出这个对象\nSystem.out.println(list.size());\n//迭代list\nfor (int i = 0; i < list.size(); i++) {\nSystem.out.println(list.get(i));\n}\nSystem.out.println(\"迭代器\");\nfor ( int a   :list\n) {\nSystem.out.println(a);\n}\n//ArrayList的泛型只能是引用类型\n// 不能是基本类型\nArrayList<Integer> a = new ArrayList<Integer>();\n//必须是Interger Byte Short Long Float Double Boolean Character\n// 不能是int byte short long float double boolean char\n\n\n        //排序\n        Collections.sort(list);\n        // 就是先引入Collections这个包\n        // 然后调用sort方法\n        // 就可以对list进行排序了\n        // 但是这个排序只能是对引用类型的排序\n        // 不能是基本类型的\n        // 不能是基本类型\n        list.indexOf(4);\n        System.out.println(list.indexOf(4));\n\n\n    }\n\n}\n\nlinklist 链表\nimport java.util.LinkedList;\n\nclass Main\n{\npublic static void main(String[] args) {\n//Linkedlist\n/*\n就是简单的一个线性表,但是每一个的表包含脸个值\n和arraylist比起来的话,linkedlist的增加删除的效率高点,儿查找找和修改稍微低点\n\n         */\n        //下面就是使用LinkedLIst好点\n        // 1 在开头添加元素\n        LinkedList<Integer> list = new LinkedList<>();\n        list.addFirst(22);\n        // 2 mowei\n        // 3 huoqu kaitou yuansu \n        list.addLast(33);\n        System.out.println(list.get(1));\n    }\n}","source":"_posts/forLove.md","raw":"---\ntitle: forLove\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2023-06-09 10:01:18\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n\n# 6/9\n又吵架了.但是还是一点点就是无厘头的吵架,你本来就不该吵架的\n不知道哪里来的情绪,你在干嘛 ,全是在做着一些什么事,\n还真是崽种说实话,为什么连就是这一点点都没办法控制\n还是说就是你就是那么的贱,有些事,还是要忍耐的,要有耐心\n\n\n# 6/11\n不晓得为啥还是想说说话,忽然就觉得还是很好的一个人,一直都懵懵懂懂的看不见,\n到底是看不见还是潜意识里面故意看不见\n你就是在躲避,害怕你会犯错,实话说还是咋稍微的少点,我对你的爱其实还是不及你对我的爱的,\n我感觉到了,还是媳妇压力或者还是啥的大一点也好,确实还是要体谅一点\n\n\n\n6/20 java arraylist 数组表\n\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\n\n//\nclass Main{\npublic static void main(String[] args){\nArrayList<Integer>  list = new ArrayList<>();\nlist.add(1);\nlist.add(1);\nlist.add(1);\nSystem.out.println(list.get(0));//get jiushi huoqu\nlist.set(2,4);\nSystem.out.println(list.get(2));\n// 输出list1\nSystem.out.println(list.get(1));\n// 也就是说链表是不能超出界限的\n// 但是数组是可以的\n// 但是数组的长度是固定的\n//删除元素\nlist.remove(1);\nSystem.out.println(list.get(1));\nSystem.out.println(list);//这就是删除了还是可以输出1为啥\n// 因为这个list是一个对象\n// 但是这个对象里面的元素已经被删除了'\n// 但是这个对象还是存在的\n// 所以输出的时候还是会输出这个对象\nSystem.out.println(list.size());\n//迭代list\nfor (int i = 0; i < list.size(); i++) {\nSystem.out.println(list.get(i));\n}\nSystem.out.println(\"迭代器\");\nfor ( int a   :list\n) {\nSystem.out.println(a);\n}\n//ArrayList的泛型只能是引用类型\n// 不能是基本类型\nArrayList<Integer> a = new ArrayList<Integer>();\n//必须是Interger Byte Short Long Float Double Boolean Character\n// 不能是int byte short long float double boolean char\n\n\n        //排序\n        Collections.sort(list);\n        // 就是先引入Collections这个包\n        // 然后调用sort方法\n        // 就可以对list进行排序了\n        // 但是这个排序只能是对引用类型的排序\n        // 不能是基本类型的\n        // 不能是基本类型\n        list.indexOf(4);\n        System.out.println(list.indexOf(4));\n\n\n    }\n\n}\n\nlinklist 链表\nimport java.util.LinkedList;\n\nclass Main\n{\npublic static void main(String[] args) {\n//Linkedlist\n/*\n就是简单的一个线性表,但是每一个的表包含脸个值\n和arraylist比起来的话,linkedlist的增加删除的效率高点,儿查找找和修改稍微低点\n\n         */\n        //下面就是使用LinkedLIst好点\n        // 1 在开头添加元素\n        LinkedList<Integer> list = new LinkedList<>();\n        list.addFirst(22);\n        // 2 mowei\n        // 3 huoqu kaitou yuansu \n        list.addLast(33);\n        System.out.println(list.get(1));\n    }\n}","slug":"forLove","published":1,"updated":"2023-10-26T10:30:51.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3l4000d3gu3bgywa1xh","content":"<h1 id=\"6-9\"><a href=\"#6-9\" class=\"headerlink\" title=\"6/9\"></a>6/9</h1><p>又吵架了.但是还是一点点就是无厘头的吵架,你本来就不该吵架的<br>不知道哪里来的情绪,你在干嘛 ,全是在做着一些什么事,<br>还真是崽种说实话,为什么连就是这一点点都没办法控制<br>还是说就是你就是那么的贱,有些事,还是要忍耐的,要有耐心</p>\n<h1 id=\"6-11\"><a href=\"#6-11\" class=\"headerlink\" title=\"6/11\"></a>6/11</h1><p>不晓得为啥还是想说说话,忽然就觉得还是很好的一个人,一直都懵懵懂懂的看不见,<br>到底是看不见还是潜意识里面故意看不见<br>你就是在躲避,害怕你会犯错,实话说还是咋稍微的少点,我对你的爱其实还是不及你对我的爱的,<br>我感觉到了,还是媳妇压力或者还是啥的大一点也好,确实还是要体谅一点</p>\n<p>6/20 java arraylist 数组表</p>\n<p>import java.lang.reflect.Array;<br>import java.util.ArrayList;<br>import java.util.Collection;<br>import java.util.Collections;</p>\n<p>//<br>class Main{<br>public static void main(String[] args){<br>ArrayList<Integer>  list = new ArrayList&lt;&gt;();<br>list.add(1);<br>list.add(1);<br>list.add(1);<br>System.out.println(list.get(0));//get jiushi huoqu<br>list.set(2,4);<br>System.out.println(list.get(2));<br>// 输出list1<br>System.out.println(list.get(1));<br>// 也就是说链表是不能超出界限的<br>// 但是数组是可以的<br>// 但是数组的长度是固定的<br>//删除元素<br>list.remove(1);<br>System.out.println(list.get(1));<br>System.out.println(list);//这就是删除了还是可以输出1为啥<br>// 因为这个list是一个对象<br>// 但是这个对象里面的元素已经被删除了’<br>// 但是这个对象还是存在的<br>// 所以输出的时候还是会输出这个对象<br>System.out.println(list.size());<br>//迭代list<br>for (int i = 0; i &lt; list.size(); i++) {<br>System.out.println(list.get(i));<br>}<br>System.out.println(“迭代器”);<br>for ( int a   :list<br>) {<br>System.out.println(a);<br>}<br>//ArrayList的泛型只能是引用类型<br>// 不能是基本类型<br>ArrayList<Integer> a = new ArrayList<Integer>();<br>//必须是Interger Byte Short Long Float Double Boolean Character<br>// 不能是int byte short long float double boolean char</p>\n<pre><code>    //排序\n    Collections.sort(list);\n    // 就是先引入Collections这个包\n    // 然后调用sort方法\n    // 就可以对list进行排序了\n    // 但是这个排序只能是对引用类型的排序\n    // 不能是基本类型的\n    // 不能是基本类型\n    list.indexOf(4);\n    System.out.println(list.indexOf(4));\n\n\n&#125;\n</code></pre>\n<p>}</p>\n<p>linklist 链表<br>import java.util.LinkedList;</p>\n<p>class Main<br>{<br>public static void main(String[] args) {<br>//Linkedlist<br>/*<br>就是简单的一个线性表,但是每一个的表包含脸个值<br>和arraylist比起来的话,linkedlist的增加删除的效率高点,儿查找找和修改稍微低点</p>\n<pre><code>     */\n    //下面就是使用LinkedLIst好点\n    // 1 在开头添加元素\n    LinkedList&lt;Integer&gt; list = new LinkedList&lt;&gt;();\n    list.addFirst(22);\n    // 2 mowei\n    // 3 huoqu kaitou yuansu \n    list.addLast(33);\n    System.out.println(list.get(1));\n&#125;\n</code></pre>\n<p>}</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h1 id=\"6-9\"><a href=\"#6-9\" class=\"headerlink\" title=\"6/9\"></a>6/9</h1><p>又吵架了.但是还是一点点就是无厘头的吵架,你本来就不该吵架的<br>不知道哪里来的情绪,你在干嘛 ,全是在做着一些什么事,<br>还真是崽种说实话,为什么连就是这一点点都没办法控制<br>还是说就是你就是那么的贱,有些事,还是要忍耐的,要有耐心</p>\n<h1 id=\"6-11\"><a href=\"#6-11\" class=\"headerlink\" title=\"6/11\"></a>6/11</h1><p>不晓得为啥还是想说说话,忽然就觉得还是很好的一个人,一直都懵懵懂懂的看不见,<br>到底是看不见还是潜意识里面故意看不见<br>你就是在躲避,害怕你会犯错,实话说还是咋稍微的少点,我对你的爱其实还是不及你对我的爱的,<br>我感觉到了,还是媳妇压力或者还是啥的大一点也好,确实还是要体谅一点</p>\n<p>6/20 java arraylist 数组表</p>\n<p>import java.lang.reflect.Array;<br>import java.util.ArrayList;<br>import java.util.Collection;<br>import java.util.Collections;</p>\n<p>//<br>class Main{<br>public static void main(String[] args){<br>ArrayList<Integer>  list = new ArrayList&lt;&gt;();<br>list.add(1);<br>list.add(1);<br>list.add(1);<br>System.out.println(list.get(0));//get jiushi huoqu<br>list.set(2,4);<br>System.out.println(list.get(2));<br>// 输出list1<br>System.out.println(list.get(1));<br>// 也就是说链表是不能超出界限的<br>// 但是数组是可以的<br>// 但是数组的长度是固定的<br>//删除元素<br>list.remove(1);<br>System.out.println(list.get(1));<br>System.out.println(list);//这就是删除了还是可以输出1为啥<br>// 因为这个list是一个对象<br>// 但是这个对象里面的元素已经被删除了’<br>// 但是这个对象还是存在的<br>// 所以输出的时候还是会输出这个对象<br>System.out.println(list.size());<br>//迭代list<br>for (int i = 0; i &lt; list.size(); i++) {<br>System.out.println(list.get(i));<br>}<br>System.out.println(“迭代器”);<br>for ( int a   :list<br>) {<br>System.out.println(a);<br>}<br>//ArrayList的泛型只能是引用类型<br>// 不能是基本类型<br>ArrayList<Integer> a = new ArrayList<Integer>();<br>//必须是Interger Byte Short Long Float Double Boolean Character<br>// 不能是int byte short long float double boolean char</p>\n<pre><code>    //排序\n    Collections.sort(list);\n    // 就是先引入Collections这个包\n    // 然后调用sort方法\n    // 就可以对list进行排序了\n    // 但是这个排序只能是对引用类型的排序\n    // 不能是基本类型的\n    // 不能是基本类型\n    list.indexOf(4);\n    System.out.println(list.indexOf(4));\n\n\n&#125;\n</code></pre>\n<p>}</p>\n<p>linklist 链表<br>import java.util.LinkedList;</p>\n<p>class Main<br>{<br>public static void main(String[] args) {<br>//Linkedlist<br>/*<br>就是简单的一个线性表,但是每一个的表包含脸个值<br>和arraylist比起来的话,linkedlist的增加删除的效率高点,儿查找找和修改稍微低点</p>\n<pre><code>     */\n    //下面就是使用LinkedLIst好点\n    // 1 在开头添加元素\n    LinkedList&lt;Integer&gt; list = new LinkedList&lt;&gt;();\n    list.addFirst(22);\n    // 2 mowei\n    // 3 huoqu kaitou yuansu \n    list.addLast(33);\n    System.out.println(list.get(1));\n&#125;\n</code></pre>\n<p>}</p>\n"},{"title":"计算机网络基础-1","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2024-03-04T05:53:33.000Z","author":null,"img":null,"coverImg":null,"password":null,"summary":null,"_content":"## 计算机网络基础-1\n### 1. http协议 请求头和响应头\n  请求头（Request Header）\n  Host ：主机ip地址或域名\n  User-Agent ：客户端相关信息，如果操作系统、浏览器等信息\n  Accept ：指定客户瑞接收信息类型，如: image/jpg, text/html, application/json\n  Accept-Charset ：客户端接受的字符集，如Igb2312、1s0-8859-1\n  Accept -Encoding ：可接受的内容编码，如gzip\n  Accept - Language 接：受的语言，如Accept-Language :zh-cn\n  Authorization ：客户端提供给服务端，进行权限认证的信息\n  Cookie ：携带的cookie信息\n  Referer :当前文档的URL,即从哪个链接过来的\n  Content-Type :请求体内容类型，如content-Type: application/x-ww- form-urlencoded\n  Content - Length :缓存机制，如cache-Control :no-cache\n  Cache -Control :缓存机制，如cache-Control :no-cache Pragma 防止页面被缓存，和ICache-Control:no-cache作用 -样\n  响应头\n    Server ：服务器相关信息\n    Date ：服务器时间\n    Content-Type ：响应体内容类型，如content-Type: application/json\n    Content-Length ：响应体长度\n    Content-Encoding ：响应体编码，如gzip\n    Content-Language ：响应体语言，如Content-Language :zh-cn\n    Set-Cookie ：设置cookie\n    Expires ：缓存机制，如Expires: -1\n    Cache-Control ：缓存机制，如Cache-Control: no-cache\n    Last-Modified ：缓存机制，如Last-Modified: Fri, 21 Dec 2018 11:00:00 GMT\n    ETag ：缓存机制，如ETag: \"686897696a7c876b7e\"\n    Location ：重定向地址\n    WWW-Authenticate ：服务器认证信息\n    Connection ：连接状态，如Connection: keep-alive\n\n### 2. 例题\n1 Cookie是请求字段,Referer 是当前文档的URL 就是从那个链接过来的\n2 Etag是响应头 ,对于资源的标识符\n3 Location用来重定向资源在创建新资源的时候使用\n4 url四类地址,1-128 128-191 192-223 224-239 240-255\n5 127.0.0.1 是一个本地地址,不是作为互联网可以使用的ip地址 除此之外还有\n0.0.0.0: 保留地址\n255.255.255.255:广播地址\n169.254.x.x 自动私有地址\n192.0.2.0 - 192.0.2.255: 这是一个保留的IPv4地址范围，用于文档和示例目的。它并不用于实际的互联网通信，而是用于教育、测试和文档编写等场景\n6 确认序列号\n7 服务和默认端口号以及描述\nHTTP (Hypertext Transfer Protocol): 80\n\n用于在Web浏览器和Web服务器之间传输超文本文档。\nHTTPS (HTTP Secure): 443\n\n用于在Web浏览器和Web服务器之间通过加密通信传输超文本文档。\nFTP (File Transfer Protocol): 20 (数据传输) 和 21 (控制连接)\n\n用于在客户端和服务器之间传输文件。\nSSH (Secure Shell): 22\n\n用于安全远程登录和执行命令。\nTelnet: 23\n\n用于远程登录到远程主机。\nSMTP (Simple Mail Transfer Protocol): 25\n\n用于电子邮件的发送。\nPOP3 (Post Office Protocol version 3): 110\n\n用于接收电子邮件。\nIMAP (Internet Message Access Protocol): 143\n\n用于接收和管理电子邮件。\nDNS (Domain Name System): 53\n\n用于将域名解析为IP地址。\nDHCP (Dynamic Host Configuration Protocol): 67 (服务器) 和 68 (客户端)\n\n用于自动分配IP地址和其他网络配置参数。\n\n### 3 书记\n1 URL是啥,就是统一资源定位符,是用来标识互联网上资源的地址\n2 URL和URi的区别\nURL 统一资源定位符,是URI的子集,URI是统一资源标识符\n![img.png](img.png)\n\n# 1IP层会分片,为啥tcp也分片\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03bb0992eaed4d47a2e3bef8f64bf77e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1282&h=1213&s=473525&e=png&b=f6f6f6)\n1.1\n数据先到传输层再到网络层,再传输层叫**分段**再网络层IP叫**分片**\nTCP长度是MSS\nIP长度是MTU\n\nMSS：Maximum Segment Size。TCP提交给IP层最⼤分段⼤⼩，不包含TCP Header和TCPOption，只包含TCP Payload，MSS是TCP⽤来限制应⽤层最⼤的发送字节数。假设MTU= 1500 byte，那么MSS = 1500- 20(IP Header) -20 (TCP Header) = 1460 byte，如果应⽤层有2000 byte发送，那么需要两个切⽚才可以完成发送，第⼀个TCP切⽚= 1460，第⼆个TCP切⽚= 540。\n1.2\nTCP三次握手,MSS会再三次握手的时候传递给对方,用来通知本地可以最大接受的TCP报文数据\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f908c3b703b04d30baa5a1570e438487~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1736&h=643&s=1144285&e=png&b=faf4f0)\n其实MSS是作为可选项引⼊的，只不过⼀般情况下MSS都会传，但是万⼀遇到了哪台机器的实现上⽐较调⽪，不传MSS这个可选项。那对端该怎么办？如果没有接收到对端TCP的MSS，本端TCP默认采⽤MSS=536Byte。那为什么会是536？\n前⾯提到了IP会切⽚，那会切⽚，也就会重组，⽽这个576正好是IP最⼩重组缓冲区的⼤⼩。\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4043dca32654deaab773682b52ff2de~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1767&h=689&s=1114109&e=png&b=fefdfd)\n\n# 2localhost和0.0.0.0的区别\nlocalhost不叫ip它是一个域名,默认的时候是没区别的\nping 0.0.0.0是会失败的,因为IPV4是无效地址\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2a0b3f55f684d32907b3b5f82e1bcbe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1747&h=550&s=812636&e=png&b=fdfcfc)\n\n# 3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\n3.1三次握手\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432acb591dca4a0897886621432a64d2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1567&h=1105&s=801736&e=png&b=eff0f2)\n\n链接一个IP不存在的主机的时候,握手过程是咋样的\n\n","source":"_posts/计算机网络基础-1.md","raw":"---\ntitle: 计算机网络基础-1\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2024-03-04 13:53:33\nauthor:\nimg:\ncoverImg:\npassword:\nsummary:\n---\n## 计算机网络基础-1\n### 1. http协议 请求头和响应头\n  请求头（Request Header）\n  Host ：主机ip地址或域名\n  User-Agent ：客户端相关信息，如果操作系统、浏览器等信息\n  Accept ：指定客户瑞接收信息类型，如: image/jpg, text/html, application/json\n  Accept-Charset ：客户端接受的字符集，如Igb2312、1s0-8859-1\n  Accept -Encoding ：可接受的内容编码，如gzip\n  Accept - Language 接：受的语言，如Accept-Language :zh-cn\n  Authorization ：客户端提供给服务端，进行权限认证的信息\n  Cookie ：携带的cookie信息\n  Referer :当前文档的URL,即从哪个链接过来的\n  Content-Type :请求体内容类型，如content-Type: application/x-ww- form-urlencoded\n  Content - Length :缓存机制，如cache-Control :no-cache\n  Cache -Control :缓存机制，如cache-Control :no-cache Pragma 防止页面被缓存，和ICache-Control:no-cache作用 -样\n  响应头\n    Server ：服务器相关信息\n    Date ：服务器时间\n    Content-Type ：响应体内容类型，如content-Type: application/json\n    Content-Length ：响应体长度\n    Content-Encoding ：响应体编码，如gzip\n    Content-Language ：响应体语言，如Content-Language :zh-cn\n    Set-Cookie ：设置cookie\n    Expires ：缓存机制，如Expires: -1\n    Cache-Control ：缓存机制，如Cache-Control: no-cache\n    Last-Modified ：缓存机制，如Last-Modified: Fri, 21 Dec 2018 11:00:00 GMT\n    ETag ：缓存机制，如ETag: \"686897696a7c876b7e\"\n    Location ：重定向地址\n    WWW-Authenticate ：服务器认证信息\n    Connection ：连接状态，如Connection: keep-alive\n\n### 2. 例题\n1 Cookie是请求字段,Referer 是当前文档的URL 就是从那个链接过来的\n2 Etag是响应头 ,对于资源的标识符\n3 Location用来重定向资源在创建新资源的时候使用\n4 url四类地址,1-128 128-191 192-223 224-239 240-255\n5 127.0.0.1 是一个本地地址,不是作为互联网可以使用的ip地址 除此之外还有\n0.0.0.0: 保留地址\n255.255.255.255:广播地址\n169.254.x.x 自动私有地址\n192.0.2.0 - 192.0.2.255: 这是一个保留的IPv4地址范围，用于文档和示例目的。它并不用于实际的互联网通信，而是用于教育、测试和文档编写等场景\n6 确认序列号\n7 服务和默认端口号以及描述\nHTTP (Hypertext Transfer Protocol): 80\n\n用于在Web浏览器和Web服务器之间传输超文本文档。\nHTTPS (HTTP Secure): 443\n\n用于在Web浏览器和Web服务器之间通过加密通信传输超文本文档。\nFTP (File Transfer Protocol): 20 (数据传输) 和 21 (控制连接)\n\n用于在客户端和服务器之间传输文件。\nSSH (Secure Shell): 22\n\n用于安全远程登录和执行命令。\nTelnet: 23\n\n用于远程登录到远程主机。\nSMTP (Simple Mail Transfer Protocol): 25\n\n用于电子邮件的发送。\nPOP3 (Post Office Protocol version 3): 110\n\n用于接收电子邮件。\nIMAP (Internet Message Access Protocol): 143\n\n用于接收和管理电子邮件。\nDNS (Domain Name System): 53\n\n用于将域名解析为IP地址。\nDHCP (Dynamic Host Configuration Protocol): 67 (服务器) 和 68 (客户端)\n\n用于自动分配IP地址和其他网络配置参数。\n\n### 3 书记\n1 URL是啥,就是统一资源定位符,是用来标识互联网上资源的地址\n2 URL和URi的区别\nURL 统一资源定位符,是URI的子集,URI是统一资源标识符\n![img.png](img.png)\n\n# 1IP层会分片,为啥tcp也分片\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03bb0992eaed4d47a2e3bef8f64bf77e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1282&h=1213&s=473525&e=png&b=f6f6f6)\n1.1\n数据先到传输层再到网络层,再传输层叫**分段**再网络层IP叫**分片**\nTCP长度是MSS\nIP长度是MTU\n\nMSS：Maximum Segment Size。TCP提交给IP层最⼤分段⼤⼩，不包含TCP Header和TCPOption，只包含TCP Payload，MSS是TCP⽤来限制应⽤层最⼤的发送字节数。假设MTU= 1500 byte，那么MSS = 1500- 20(IP Header) -20 (TCP Header) = 1460 byte，如果应⽤层有2000 byte发送，那么需要两个切⽚才可以完成发送，第⼀个TCP切⽚= 1460，第⼆个TCP切⽚= 540。\n1.2\nTCP三次握手,MSS会再三次握手的时候传递给对方,用来通知本地可以最大接受的TCP报文数据\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f908c3b703b04d30baa5a1570e438487~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1736&h=643&s=1144285&e=png&b=faf4f0)\n其实MSS是作为可选项引⼊的，只不过⼀般情况下MSS都会传，但是万⼀遇到了哪台机器的实现上⽐较调⽪，不传MSS这个可选项。那对端该怎么办？如果没有接收到对端TCP的MSS，本端TCP默认采⽤MSS=536Byte。那为什么会是536？\n前⾯提到了IP会切⽚，那会切⽚，也就会重组，⽽这个576正好是IP最⼩重组缓冲区的⼤⼩。\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4043dca32654deaab773682b52ff2de~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1767&h=689&s=1114109&e=png&b=fefdfd)\n\n# 2localhost和0.0.0.0的区别\nlocalhost不叫ip它是一个域名,默认的时候是没区别的\nping 0.0.0.0是会失败的,因为IPV4是无效地址\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2a0b3f55f684d32907b3b5f82e1bcbe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1747&h=550&s=812636&e=png&b=fdfcfc)\n\n# 3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\n3.1三次握手\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432acb591dca4a0897886621432a64d2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1567&h=1105&s=801736&e=png&b=eff0f2)\n\n链接一个IP不存在的主机的时候,握手过程是咋样的\n\n","slug":"计算机网络基础-1","published":1,"updated":"2024-03-06T12:30:19.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cltsgp3l5000f3gu32wbrgqlt","content":"<h2 id=\"计算机网络基础-1\"><a href=\"#计算机网络基础-1\" class=\"headerlink\" title=\"计算机网络基础-1\"></a>计算机网络基础-1</h2><h3 id=\"1-http协议-请求头和响应头\"><a href=\"#1-http协议-请求头和响应头\" class=\"headerlink\" title=\"1. http协议 请求头和响应头\"></a>1. http协议 请求头和响应头</h3><p>  请求头（Request Header）<br>  Host ：主机ip地址或域名<br>  User-Agent ：客户端相关信息，如果操作系统、浏览器等信息<br>  Accept ：指定客户瑞接收信息类型，如: image/jpg, text/html, application/json<br>  Accept-Charset ：客户端接受的字符集，如Igb2312、1s0-8859-1<br>  Accept -Encoding ：可接受的内容编码，如gzip<br>  Accept - Language 接：受的语言，如Accept-Language :zh-cn<br>  Authorization ：客户端提供给服务端，进行权限认证的信息<br>  Cookie ：携带的cookie信息<br>  Referer :当前文档的URL,即从哪个链接过来的<br>  Content-Type :请求体内容类型，如content-Type: application/x-ww- form-urlencoded<br>  Content - Length :缓存机制，如cache-Control :no-cache<br>  Cache -Control :缓存机制，如cache-Control :no-cache Pragma 防止页面被缓存，和ICache-Control:no-cache作用 -样<br>  响应头<br>    Server ：服务器相关信息<br>    Date ：服务器时间<br>    Content-Type ：响应体内容类型，如content-Type: application/json<br>    Content-Length ：响应体长度<br>    Content-Encoding ：响应体编码，如gzip<br>    Content-Language ：响应体语言，如Content-Language :zh-cn<br>    Set-Cookie ：设置cookie<br>    Expires ：缓存机制，如Expires: -1<br>    Cache-Control ：缓存机制，如Cache-Control: no-cache<br>    Last-Modified ：缓存机制，如Last-Modified: Fri, 21 Dec 2018 11:00:00 GMT<br>    ETag ：缓存机制，如ETag: “686897696a7c876b7e”<br>    Location ：重定向地址<br>    WWW-Authenticate ：服务器认证信息<br>    Connection ：连接状态，如Connection: keep-alive</p>\n<h3 id=\"2-例题\"><a href=\"#2-例题\" class=\"headerlink\" title=\"2. 例题\"></a>2. 例题</h3><p>1 Cookie是请求字段,Referer 是当前文档的URL 就是从那个链接过来的<br>2 Etag是响应头 ,对于资源的标识符<br>3 Location用来重定向资源在创建新资源的时候使用<br>4 url四类地址,1-128 128-191 192-223 224-239 240-255<br>5 127.0.0.1 是一个本地地址,不是作为互联网可以使用的ip地址 除此之外还有<br>0.0.0.0: 保留地址<br>255.255.255.255:广播地址<br>169.254.x.x 自动私有地址<br>192.0.2.0 - 192.0.2.255: 这是一个保留的IPv4地址范围，用于文档和示例目的。它并不用于实际的互联网通信，而是用于教育、测试和文档编写等场景<br>6 确认序列号<br>7 服务和默认端口号以及描述<br>HTTP (Hypertext Transfer Protocol): 80</p>\n<p>用于在Web浏览器和Web服务器之间传输超文本文档。<br>HTTPS (HTTP Secure): 443</p>\n<p>用于在Web浏览器和Web服务器之间通过加密通信传输超文本文档。<br>FTP (File Transfer Protocol): 20 (数据传输) 和 21 (控制连接)</p>\n<p>用于在客户端和服务器之间传输文件。<br>SSH (Secure Shell): 22</p>\n<p>用于安全远程登录和执行命令。<br>Telnet: 23</p>\n<p>用于远程登录到远程主机。<br>SMTP (Simple Mail Transfer Protocol): 25</p>\n<p>用于电子邮件的发送。<br>POP3 (Post Office Protocol version 3): 110</p>\n<p>用于接收电子邮件。<br>IMAP (Internet Message Access Protocol): 143</p>\n<p>用于接收和管理电子邮件。<br>DNS (Domain Name System): 53</p>\n<p>用于将域名解析为IP地址。<br>DHCP (Dynamic Host Configuration Protocol): 67 (服务器) 和 68 (客户端)</p>\n<p>用于自动分配IP地址和其他网络配置参数。</p>\n<h3 id=\"3-书记\"><a href=\"#3-书记\" class=\"headerlink\" title=\"3 书记\"></a>3 书记</h3><p>1 URL是啥,就是统一资源定位符,是用来标识互联网上资源的地址<br>2 URL和URi的区别<br>URL 统一资源定位符,是URI的子集,URI是统一资源标识符<br><img src=\"img.png\" alt=\"img.png\"></p>\n<h1 id=\"1IP层会分片-为啥tcp也分片\"><a href=\"#1IP层会分片-为啥tcp也分片\" class=\"headerlink\" title=\"1IP层会分片,为啥tcp也分片\"></a>1IP层会分片,为啥tcp也分片</h1><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03bb0992eaed4d47a2e3bef8f64bf77e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1282&h=1213&s=473525&e=png&b=f6f6f6\" alt=\"image.png\"><br>1.1<br>数据先到传输层再到网络层,再传输层叫<strong>分段</strong>再网络层IP叫<strong>分片</strong><br>TCP长度是MSS<br>IP长度是MTU</p>\n<p>MSS：Maximum Segment Size。TCP提交给IP层最⼤分段⼤⼩，不包含TCP Header和TCPOption，只包含TCP Payload，MSS是TCP⽤来限制应⽤层最⼤的发送字节数。假设MTU= 1500 byte，那么MSS = 1500- 20(IP Header) -20 (TCP Header) = 1460 byte，如果应⽤层有2000 byte发送，那么需要两个切⽚才可以完成发送，第⼀个TCP切⽚= 1460，第⼆个TCP切⽚= 540。<br>1.2<br>TCP三次握手,MSS会再三次握手的时候传递给对方,用来通知本地可以最大接受的TCP报文数据</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f908c3b703b04d30baa5a1570e438487~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1736&h=643&s=1144285&e=png&b=faf4f0\" alt=\"image.png\"><br>其实MSS是作为可选项引⼊的，只不过⼀般情况下MSS都会传，但是万⼀遇到了哪台机器的实现上⽐较调⽪，不传MSS这个可选项。那对端该怎么办？如果没有接收到对端TCP的MSS，本端TCP默认采⽤MSS=536Byte。那为什么会是536？<br>前⾯提到了IP会切⽚，那会切⽚，也就会重组，⽽这个576正好是IP最⼩重组缓冲区的⼤⼩。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4043dca32654deaab773682b52ff2de~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1767&h=689&s=1114109&e=png&b=fefdfd\" alt=\"image.png\"></p>\n<h1 id=\"2localhost和0-0-0-0的区别\"><a href=\"#2localhost和0-0-0-0的区别\" class=\"headerlink\" title=\"2localhost和0.0.0.0的区别\"></a>2localhost和0.0.0.0的区别</h1><p>localhost不叫ip它是一个域名,默认的时候是没区别的<br>ping 0.0.0.0是会失败的,因为IPV4是无效地址</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2a0b3f55f684d32907b3b5f82e1bcbe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1747&h=550&s=812636&e=png&b=fdfcfc\" alt=\"image.png\"></p>\n<h1 id=\"3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\"><a href=\"#3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\" class=\"headerlink\" title=\"3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\"></a>3连接⼀个IP不存在的主机时，握⼿过程是怎样的？</h1><p>3.1三次握手</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432acb591dca4a0897886621432a64d2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1567&h=1105&s=801736&e=png&b=eff0f2\" alt=\"image.png\"></p>\n<p>链接一个IP不存在的主机的时候,握手过程是咋样的</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"MaJang","introduction":"I am not a master, just looking for the master's footsteps.","url":"http://luokangyuan.com/","title":"Read More"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"Blinkfox","introduction":"Hello, I'm blinkfox, I like programming.","url":"https://blinkfox.github.io/","title":"Visit Blog"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"Ordinary steps can also go out of the great journey.","url":"https://me.csdn.net/jlh912008548","title":"Read More"}]}},"excerpt":"","more":"<h2 id=\"计算机网络基础-1\"><a href=\"#计算机网络基础-1\" class=\"headerlink\" title=\"计算机网络基础-1\"></a>计算机网络基础-1</h2><h3 id=\"1-http协议-请求头和响应头\"><a href=\"#1-http协议-请求头和响应头\" class=\"headerlink\" title=\"1. http协议 请求头和响应头\"></a>1. http协议 请求头和响应头</h3><p>  请求头（Request Header）<br>  Host ：主机ip地址或域名<br>  User-Agent ：客户端相关信息，如果操作系统、浏览器等信息<br>  Accept ：指定客户瑞接收信息类型，如: image/jpg, text/html, application/json<br>  Accept-Charset ：客户端接受的字符集，如Igb2312、1s0-8859-1<br>  Accept -Encoding ：可接受的内容编码，如gzip<br>  Accept - Language 接：受的语言，如Accept-Language :zh-cn<br>  Authorization ：客户端提供给服务端，进行权限认证的信息<br>  Cookie ：携带的cookie信息<br>  Referer :当前文档的URL,即从哪个链接过来的<br>  Content-Type :请求体内容类型，如content-Type: application/x-ww- form-urlencoded<br>  Content - Length :缓存机制，如cache-Control :no-cache<br>  Cache -Control :缓存机制，如cache-Control :no-cache Pragma 防止页面被缓存，和ICache-Control:no-cache作用 -样<br>  响应头<br>    Server ：服务器相关信息<br>    Date ：服务器时间<br>    Content-Type ：响应体内容类型，如content-Type: application/json<br>    Content-Length ：响应体长度<br>    Content-Encoding ：响应体编码，如gzip<br>    Content-Language ：响应体语言，如Content-Language :zh-cn<br>    Set-Cookie ：设置cookie<br>    Expires ：缓存机制，如Expires: -1<br>    Cache-Control ：缓存机制，如Cache-Control: no-cache<br>    Last-Modified ：缓存机制，如Last-Modified: Fri, 21 Dec 2018 11:00:00 GMT<br>    ETag ：缓存机制，如ETag: “686897696a7c876b7e”<br>    Location ：重定向地址<br>    WWW-Authenticate ：服务器认证信息<br>    Connection ：连接状态，如Connection: keep-alive</p>\n<h3 id=\"2-例题\"><a href=\"#2-例题\" class=\"headerlink\" title=\"2. 例题\"></a>2. 例题</h3><p>1 Cookie是请求字段,Referer 是当前文档的URL 就是从那个链接过来的<br>2 Etag是响应头 ,对于资源的标识符<br>3 Location用来重定向资源在创建新资源的时候使用<br>4 url四类地址,1-128 128-191 192-223 224-239 240-255<br>5 127.0.0.1 是一个本地地址,不是作为互联网可以使用的ip地址 除此之外还有<br>0.0.0.0: 保留地址<br>255.255.255.255:广播地址<br>169.254.x.x 自动私有地址<br>192.0.2.0 - 192.0.2.255: 这是一个保留的IPv4地址范围，用于文档和示例目的。它并不用于实际的互联网通信，而是用于教育、测试和文档编写等场景<br>6 确认序列号<br>7 服务和默认端口号以及描述<br>HTTP (Hypertext Transfer Protocol): 80</p>\n<p>用于在Web浏览器和Web服务器之间传输超文本文档。<br>HTTPS (HTTP Secure): 443</p>\n<p>用于在Web浏览器和Web服务器之间通过加密通信传输超文本文档。<br>FTP (File Transfer Protocol): 20 (数据传输) 和 21 (控制连接)</p>\n<p>用于在客户端和服务器之间传输文件。<br>SSH (Secure Shell): 22</p>\n<p>用于安全远程登录和执行命令。<br>Telnet: 23</p>\n<p>用于远程登录到远程主机。<br>SMTP (Simple Mail Transfer Protocol): 25</p>\n<p>用于电子邮件的发送。<br>POP3 (Post Office Protocol version 3): 110</p>\n<p>用于接收电子邮件。<br>IMAP (Internet Message Access Protocol): 143</p>\n<p>用于接收和管理电子邮件。<br>DNS (Domain Name System): 53</p>\n<p>用于将域名解析为IP地址。<br>DHCP (Dynamic Host Configuration Protocol): 67 (服务器) 和 68 (客户端)</p>\n<p>用于自动分配IP地址和其他网络配置参数。</p>\n<h3 id=\"3-书记\"><a href=\"#3-书记\" class=\"headerlink\" title=\"3 书记\"></a>3 书记</h3><p>1 URL是啥,就是统一资源定位符,是用来标识互联网上资源的地址<br>2 URL和URi的区别<br>URL 统一资源定位符,是URI的子集,URI是统一资源标识符<br><img src=\"img.png\" alt=\"img.png\"></p>\n<h1 id=\"1IP层会分片-为啥tcp也分片\"><a href=\"#1IP层会分片-为啥tcp也分片\" class=\"headerlink\" title=\"1IP层会分片,为啥tcp也分片\"></a>1IP层会分片,为啥tcp也分片</h1><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03bb0992eaed4d47a2e3bef8f64bf77e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1282&h=1213&s=473525&e=png&b=f6f6f6\" alt=\"image.png\"><br>1.1<br>数据先到传输层再到网络层,再传输层叫<strong>分段</strong>再网络层IP叫<strong>分片</strong><br>TCP长度是MSS<br>IP长度是MTU</p>\n<p>MSS：Maximum Segment Size。TCP提交给IP层最⼤分段⼤⼩，不包含TCP Header和TCPOption，只包含TCP Payload，MSS是TCP⽤来限制应⽤层最⼤的发送字节数。假设MTU= 1500 byte，那么MSS = 1500- 20(IP Header) -20 (TCP Header) = 1460 byte，如果应⽤层有2000 byte发送，那么需要两个切⽚才可以完成发送，第⼀个TCP切⽚= 1460，第⼆个TCP切⽚= 540。<br>1.2<br>TCP三次握手,MSS会再三次握手的时候传递给对方,用来通知本地可以最大接受的TCP报文数据</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f908c3b703b04d30baa5a1570e438487~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1736&h=643&s=1144285&e=png&b=faf4f0\" alt=\"image.png\"><br>其实MSS是作为可选项引⼊的，只不过⼀般情况下MSS都会传，但是万⼀遇到了哪台机器的实现上⽐较调⽪，不传MSS这个可选项。那对端该怎么办？如果没有接收到对端TCP的MSS，本端TCP默认采⽤MSS=536Byte。那为什么会是536？<br>前⾯提到了IP会切⽚，那会切⽚，也就会重组，⽽这个576正好是IP最⼩重组缓冲区的⼤⼩。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4043dca32654deaab773682b52ff2de~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1767&h=689&s=1114109&e=png&b=fefdfd\" alt=\"image.png\"></p>\n<h1 id=\"2localhost和0-0-0-0的区别\"><a href=\"#2localhost和0-0-0-0的区别\" class=\"headerlink\" title=\"2localhost和0.0.0.0的区别\"></a>2localhost和0.0.0.0的区别</h1><p>localhost不叫ip它是一个域名,默认的时候是没区别的<br>ping 0.0.0.0是会失败的,因为IPV4是无效地址</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2a0b3f55f684d32907b3b5f82e1bcbe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1747&h=550&s=812636&e=png&b=fdfcfc\" alt=\"image.png\"></p>\n<h1 id=\"3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\"><a href=\"#3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\" class=\"headerlink\" title=\"3连接⼀个IP不存在的主机时，握⼿过程是怎样的？\"></a>3连接⼀个IP不存在的主机时，握⼿过程是怎样的？</h1><p>3.1三次握手</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432acb591dca4a0897886621432a64d2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1567&h=1105&s=801736&e=png&b=eff0f2\" alt=\"image.png\"></p>\n<p>链接一个IP不存在的主机的时候,握手过程是咋样的</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}